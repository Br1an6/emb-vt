Only in /home/build_kernel: android
Only in /home/build_kernel: Android.mk
Only in /home/build_kernel: arch
Only in ./: bananapi-3.4.zip
Only in /home/build_kernel: block
Only in ./: build_all.sh
Only in ./: build.err
Only in /home/build_kernel: build.sh
Only in ./: .config
Only in /home/build_kernel: COPYING
Only in /home/build_kernel: CREDITS
Only in /home/build_kernel: crypto
Only in ./: doc
Only in /home/build_kernel: Documentation
Only in /home/build_kernel: drivers
Only in /home/build_kernel: firmware
Only in /home/build_kernel/fs: 9p
Only in /home/build_kernel/fs: adfs
Only in /home/build_kernel/fs: affs
Only in /home/build_kernel/fs: afs
Only in /home/build_kernel/fs: aio.c
Only in /home/build_kernel/fs: anon_inodes.c
Only in /home/build_kernel/fs: attr.c
Only in /home/build_kernel/fs: autofs4
Only in /home/build_kernel/fs: bad_inode.c
Only in /home/build_kernel/fs: befs
Only in /home/build_kernel/fs: bfs
Only in /home/build_kernel/fs: binfmt_aout.c
Only in /home/build_kernel/fs: binfmt_elf.c
Only in /home/build_kernel/fs: binfmt_elf_fdpic.c
Only in /home/build_kernel/fs: binfmt_em86.c
Only in /home/build_kernel/fs: binfmt_flat.c
Only in /home/build_kernel/fs: binfmt_misc.c
Only in /home/build_kernel/fs: binfmt_script.c
Only in /home/build_kernel/fs: binfmt_som.c
Only in /home/build_kernel/fs: bio.c
Only in /home/build_kernel/fs: bio-integrity.c
Only in /home/build_kernel/fs: block_dev.c
Only in /home/build_kernel/fs: btrfs
Only in /home/build_kernel/fs: buffer.c
Only in /home/build_kernel/fs: cachefiles
Only in /home/build_kernel/fs: ceph
Only in /home/build_kernel/fs: char_dev.c
Only in /home/build_kernel/fs: cifs
Only in /home/build_kernel/fs: coda
Only in /home/build_kernel/fs: compat_binfmt_elf.c
Only in /home/build_kernel/fs: compat.c
Only in /home/build_kernel/fs: compat_ioctl.c
Only in /home/build_kernel/fs: configfs
Only in /home/build_kernel/fs: cramfs
Only in /home/build_kernel/fs: dcache.c
Only in /home/build_kernel/fs: dcookies.c
Only in /home/build_kernel/fs: debugfs
Only in /home/build_kernel/fs: devpts
Only in /home/build_kernel/fs: direct-io.c
Only in /home/build_kernel/fs: dlm
Only in /home/build_kernel/fs: drop_caches.c
Only in /home/build_kernel/fs: ecryptfs
Only in /home/build_kernel/fs: efs
Only in /home/build_kernel/fs: eventfd.c
Only in /home/build_kernel/fs: eventpoll.c
Only in /home/build_kernel/fs: exec.c
Only in /home/build_kernel/fs: exofs
Only in /home/build_kernel/fs: exportfs
Only in /home/build_kernel/fs: ext2
Only in /home/build_kernel/fs: ext3
Only in /home/build_kernel/fs: ext4
Only in /home/build_kernel/fs: fat
Only in /home/build_kernel/fs: fcntl.c
Only in /home/build_kernel/fs: fhandle.c
Only in /home/build_kernel/fs: fifo.c
Only in /home/build_kernel/fs: file.c
Only in /home/build_kernel/fs: filesystems.c
Only in /home/build_kernel/fs: file_table.c
Only in /home/build_kernel/fs: freevxfs
Only in /home/build_kernel/fs: fscache
Only in /home/build_kernel/fs: fs_struct.c
Only in /home/build_kernel/fs: fs-writeback.c
Only in /home/build_kernel/fs: fuse
Only in /home/build_kernel/fs: generic_acl.c
Only in /home/build_kernel/fs: gfs2
Only in /home/build_kernel/fs: hfs
Only in /home/build_kernel/fs: hfsplus
Only in /home/build_kernel/fs: hostfs
Only in /home/build_kernel/fs: hpfs
Only in /home/build_kernel/fs: hppfs
Only in /home/build_kernel/fs: hugetlbfs
Only in /home/build_kernel/fs: inode.c
Only in /home/build_kernel/fs: internal.h
Only in /home/build_kernel/fs: ioctl.c
Only in /home/build_kernel/fs: ioprio.c
Only in /home/build_kernel/fs: isofs
Only in /home/build_kernel/fs: jbd
Only in /home/build_kernel/fs: jbd2
Only in /home/build_kernel/fs: jffs2
Only in /home/build_kernel/fs: jfs
Only in /home/build_kernel/fs: Kconfig
Only in /home/build_kernel/fs: Kconfig.binfmt
Only in /home/build_kernel/fs: libfs.c
Only in /home/build_kernel/fs: lockd
Only in /home/build_kernel/fs: locks.c
Only in /home/build_kernel/fs: logfs
Only in /home/build_kernel/fs: Makefile
Only in /home/build_kernel/fs: mbcache.c
Only in /home/build_kernel/fs: minix
Only in /home/build_kernel/fs: mount.h
Only in /home/build_kernel/fs: mpage.c
Only in /home/build_kernel/fs: namei.c
Only in /home/build_kernel/fs: namespace.c
Only in /home/build_kernel/fs: ncpfs
Only in /home/build_kernel/fs: nfs
Only in /home/build_kernel/fs: nfs_common
Only in /home/build_kernel/fs: nfsd
Only in /home/build_kernel/fs: nilfs2
Only in /home/build_kernel/fs: nls
Only in /home/build_kernel/fs: no-block.c
Only in /home/build_kernel/fs: notify
Only in /home/build_kernel/fs: ntfs
Only in /home/build_kernel/fs: ocfs2
Only in /home/build_kernel/fs: omfs
Only in /home/build_kernel/fs: open.c
Only in /home/build_kernel/fs: openpromfs
Only in /home/build_kernel/fs: pipe.c
Only in /home/build_kernel/fs: pnode.c
Only in /home/build_kernel/fs: pnode.h
Only in /home/build_kernel/fs: posix_acl.c
Only in /home/build_kernel/fs/proc: array.c
diff -rup /home/build_kernel/fs/proc/base.c ./fs/proc/base.c
--- /home/build_kernel/fs/proc/base.c	2016-11-25 07:46:11.000000000 +0000
+++ ./fs/proc/base.c	2017-03-15 20:33:17.216050187 +0000
@@ -220,10 +220,10 @@ static int proc_pid_cmdline(struct task_
 		goto out_mm;	/* Shh! No looking before we're done */
 
  	len = mm->arg_end - mm->arg_start;
- 
+
 	if (len > PAGE_SIZE)
 		len = PAGE_SIZE;
- 
+
 	res = access_process_vm(task, mm->arg_start, buffer, len, 0);
 
 	// If the nul at the end of args has been overwritten, then
@@ -987,7 +987,7 @@ static int oom_adjust_permission(struct
 	}
 
 	/*
-	 * System Server (uid == 1000) is granted access to oom_adj of all 
+	 * System Server (uid == 1000) is granted access to oom_adj of all
 	 * android applications (uid > 10000) as and services (uid >= 1000)
 	 */
 	if (p && (current_fsuid() == 1000) && (uid >= 1000)) {
@@ -1435,6 +1435,282 @@ static const struct file_operations proc
 	.release	= single_release,
 };
 
+/*
+ * Hanle freeze/unfreeze IO under /proc/$pid/freeze
+ */
+#define FREEZE_MAX_LEN 4
+static ssize_t freeze_write(struct file *file, const char __user *buf,
+                            size_t count, loff_t *offset)
+{
+  struct inode *inode = file_inode(file);
+  struct task_struct *p;
+  char buffer[FREEZE_MAX_LEN];
+  const size_t maxlen = sizeof(buffer) - 1;
+
+  memset(buffer, 0, sizeof(buffer));
+  if (copy_from_user(buffer, buf, count > maxlen ? maxlen : count)) {
+    return -EFAULT;
+  }
+
+  p = get_proc_task(inode);
+  if (!p) {
+    return -ESRCH;
+  }
+
+  if (!strncmp(buffer, "1", 1)) {
+    freeze_time(p);
+  } else if (!strncmp(buffer, "0", 1)) {
+    unfreeze_time(p);
+  } // do nothing if user input other values
+
+  put_task_struct(p);
+
+  return count;
+}
+
+static int freeze_show(struct seq_file *m, void *v)
+{
+  struct inode *inode = m->private;
+  struct task_struct *p;
+  int freezed;
+
+  p = get_proc_task(inode);
+  if (!p)
+    return -ESRCH;
+
+  task_lock(p);
+  freezed = (p->freeze_start_nsec != 0);
+  if (freezed) seq_printf(m, "F\n");
+  else seq_printf(m, "U\n");
+
+  task_unlock(p);
+  put_task_struct(p);
+
+  return 0;
+}
+
+static int freeze_open(struct inode *inode, struct file *filp)
+{
+  return single_open(filp, freeze_show, inode);
+}
+
+static const struct file_operations proc_pid_set_freeze_operations = {
+  .open= freeze_open,
+  .read= seq_read,
+  .write= freeze_write,
+  .llseek= seq_lseek,
+  .release= single_release,
+};
+
+static int fpt_show(struct seq_file *m, void *v)
+{
+  struct inode *inode = m->private;
+  struct task_struct *p;
+  s64 fpt;
+
+  p = get_proc_task(inode);
+  if (!p) return -ESRCH;
+
+  task_lock(p);
+  fpt = p->freeze_past_nsec;
+  task_unlock(p);
+  put_task_struct(p);
+
+  if (fpt > 1000 * NSEC_PER_SEC) {
+    s64 kseconds = fpt / NSEC_PER_SEC;
+    kseconds /= 1000;
+    seq_printf(m, "%lldks\n", kseconds);
+  } else if (fpt > NSEC_PER_SEC) {
+    s64 seconds = fpt / NSEC_PER_SEC;
+    seq_printf(m, "%llds\n", seconds);
+  } else if (fpt > NSEC_PER_MSEC) {
+    s64 milliseconds = fpt / NSEC_PER_MSEC;
+    seq_printf(m, "%lldms\n", milliseconds);
+  } else if (fpt > NSEC_PER_USEC) {
+    s64 microseconds = fpt / NSEC_PER_USEC;
+    seq_printf(m, "%lldus\n", microseconds);
+  } else {
+    seq_printf(m, "%lldns\n", fpt);
+  }
+
+  return 0;
+}
+
+static int fpt_open(struct inode *inode, struct file *filp)
+{
+  return single_open(filp, fpt_show, inode);
+}
+
+static const struct file_operations proc_pid_get_fpt_operations = {
+  .open           = fpt_open,
+  .read           = seq_read,
+  .llseek         = seq_lseek,
+  .release        = single_release,
+};
+
+/**
+ * Handle virtual time dilation IO under /proc/$pid/dilation
+ **/
+#undef TDF_LEN
+#define TDF_LEN 8
+static ssize_t dilation_write(struct file *file, const char __user *buf,
+                              size_t count, loff_t *ppos)
+{
+  struct inode *inode = file_inode(file);
+  struct task_struct *p;
+  char buffer[TDF_LEN];
+  const size_t maxlen = sizeof(buffer) - 1;
+  int new_tdf;
+
+  memset(buffer, 0, sizeof(buffer));
+  if (copy_from_user(buffer, buf, count > maxlen ? maxlen : count)) {
+    return -EFAULT;
+  }
+  // buffer now stores the value of TDF*1000
+  if (kstrtoint(buffer, 10, &new_tdf) < 0) {
+    return -EINVAL;
+  }
+
+  p = get_proc_task(inode);
+  if (!p) {
+    return -ESRCH;
+  }
+
+  set_dilation(p, new_tdf);
+
+  put_task_struct(p);
+  return count;
+}
+
+static int dilation_show(struct seq_file *m, void *v)
+{
+  struct inode *inode = m->private;
+  struct task_struct *p;
+  int tdf;
+
+  p = get_proc_task(inode);
+  if (!p) {
+    return -ESRCH;
+  }
+
+  task_lock(p);
+
+  tdf = p->dilation;
+  seq_printf(m, "%d\n", tdf);
+
+  task_unlock(p);
+  put_task_struct(p);
+
+  return 0;
+}
+
+static int dilation_open(struct inode *inode, struct file *filp)
+{
+  return single_open(filp, dilation_show, inode);
+}
+
+static const struct file_operations proc_pid_set_dilation_operations = {
+  .open= dilation_open,
+  .read= seq_read,
+  .write= dilation_write,
+  .llseek= seq_lseek,
+  .release= single_release,
+};
+
+static int vpt_show(struct seq_file *m, void *v)
+{
+  struct inode *inode = m->private;
+  struct task_struct *p;
+  s64 vpt;
+
+  p = get_proc_task(inode);
+  if (!p) return -ESRCH;
+
+  task_lock(p);
+  vpt = p->virtual_past_nsec;
+  task_unlock(p);
+  put_task_struct(p);
+
+  if (vpt > 1000 * NSEC_PER_SEC) {
+    s64 kseconds = vpt / NSEC_PER_SEC;
+    kseconds /= 1000;
+    seq_printf(m, "%lldks\n", kseconds);
+  } if (vpt > NSEC_PER_SEC) {
+    s64 seconds = vpt / NSEC_PER_SEC;
+    seq_printf(m, "%llds\n", seconds);
+  } else if (vpt > NSEC_PER_MSEC) {
+    s64 milliseconds = vpt / NSEC_PER_MSEC;
+    seq_printf(m, "%lldms\n", milliseconds);
+  } else if (vpt > NSEC_PER_USEC) {
+    s64 microseconds = vpt / NSEC_PER_USEC;
+    seq_printf(m, "%lldus\n", microseconds);
+  } else {
+    seq_printf(m, "%lldns\n", vpt);
+  }
+
+  return 0;
+}
+
+static int vpt_open(struct inode *inode, struct file *filp)
+{
+  return single_open(filp, vpt_show, inode);
+}
+
+static const struct file_operations proc_pid_get_vpt_operations = {
+  .open           = vpt_open,
+  .read           = seq_read,
+  .llseek         = seq_lseek,
+  .release        = single_release,
+};
+
+static int ppt_show(struct seq_file *m, void *v)
+{
+  struct inode *inode = m->private;
+  struct task_struct *p;
+  s64 ppt;
+
+  p = get_proc_task(inode);
+  if (!p) return -ESRCH;
+
+  task_lock(p);
+  ppt = p->physical_past_nsec;
+  task_unlock(p);
+  put_task_struct(p);
+
+  if (ppt > 1000 * NSEC_PER_SEC) {
+    s64 kseconds = ppt / NSEC_PER_SEC;
+    kseconds /= 1000;
+    seq_printf(m, "%lldks\n", kseconds);
+  } if (ppt > NSEC_PER_SEC) {
+    s64 seconds = ppt / NSEC_PER_SEC;
+    seq_printf(m, "%llds\n", seconds);
+  } else if (ppt > NSEC_PER_MSEC) {
+    s64 milliseconds = ppt / NSEC_PER_MSEC;
+    seq_printf(m, "%lldms\n", milliseconds);
+  } else if (ppt > NSEC_PER_USEC) {
+    s64 microseconds = ppt / NSEC_PER_USEC;
+    seq_printf(m, "%lldus\n", microseconds);
+  } else {
+    seq_printf(m, "%lldns\n", ppt);
+  }
+
+  return 0;
+}
+
+static int ppt_open(struct inode *inode, struct file *filp)
+{
+  return single_open(filp, ppt_show, inode);
+}
+
+static const struct file_operations proc_pid_get_ppt_operations = {
+  .open           = ppt_open,
+  .read           = seq_read,
+  .llseek         = seq_lseek,
+  .release        = single_release,
+};
+
+
+
 static int proc_exe_link(struct dentry *dentry, struct path *exe_path)
 {
 	struct task_struct *task;
@@ -2474,7 +2750,7 @@ out:
 	return error;
 }
 
-static struct dentry *proc_pident_lookup(struct inode *dir, 
+static struct dentry *proc_pident_lookup(struct inode *dir,
 					 struct dentry *dentry,
 					 const struct pid_entry *ents,
 					 unsigned int nents)
Only in /home/build_kernel/fs/proc: cmdline.c
Only in /home/build_kernel/fs/proc: consoles.c
Only in /home/build_kernel/fs/proc: cpuinfo.c
Only in /home/build_kernel/fs/proc: devices.c
Only in /home/build_kernel/fs/proc: generic.c
Only in /home/build_kernel/fs/proc: inode.c
Only in /home/build_kernel/fs/proc: internal.h
Only in /home/build_kernel/fs/proc: interrupts.c
Only in /home/build_kernel/fs/proc: Kconfig
Only in /home/build_kernel/fs/proc: kcore.c
Only in /home/build_kernel/fs/proc: kmsg.c
Only in /home/build_kernel/fs/proc: loadavg.c
Only in /home/build_kernel/fs/proc: Makefile
Only in /home/build_kernel/fs/proc: meminfo.c
Only in /home/build_kernel/fs/proc: mmu.c
Only in /home/build_kernel/fs/proc: namespaces.c
Only in /home/build_kernel/fs/proc: nommu.c
Only in /home/build_kernel/fs/proc: page.c
Only in /home/build_kernel/fs/proc: proc_devtree.c
Only in /home/build_kernel/fs/proc: proc_net.c
Only in /home/build_kernel/fs/proc: proc_sysctl.c
Only in /home/build_kernel/fs/proc: proc_tty.c
Only in /home/build_kernel/fs/proc: root.c
Only in /home/build_kernel/fs/proc: softirqs.c
Only in /home/build_kernel/fs/proc: stat.c
Only in /home/build_kernel/fs/proc: task_mmu.c
Only in /home/build_kernel/fs/proc: task_nommu.c
Only in /home/build_kernel/fs/proc: uptime.c
Only in /home/build_kernel/fs/proc: version.c
Only in /home/build_kernel/fs/proc: vmcore.c
Only in /home/build_kernel/fs: proc_namespace.c
Only in /home/build_kernel/fs: pstore
Only in /home/build_kernel/fs: qnx4
Only in /home/build_kernel/fs: qnx6
Only in /home/build_kernel/fs: quota
Only in /home/build_kernel/fs: ramfs
Only in /home/build_kernel/fs: readdir.c
Only in /home/build_kernel/fs: read_write.c
Only in /home/build_kernel/fs: read_write.h
Only in /home/build_kernel/fs: reiserfs
Only in /home/build_kernel/fs: romfs
Only in /home/build_kernel/fs: select.c
Only in /home/build_kernel/fs: seq_file.c
Only in /home/build_kernel/fs: signalfd.c
Only in /home/build_kernel/fs: splice.c
Only in /home/build_kernel/fs: squashfs
Only in /home/build_kernel/fs: stack.c
Only in /home/build_kernel/fs: stat.c
Only in /home/build_kernel/fs: statfs.c
Only in /home/build_kernel/fs: super.c
Only in /home/build_kernel/fs: sync.c
Only in /home/build_kernel/fs: sysfs
Only in /home/build_kernel/fs: sysv
Only in /home/build_kernel/fs: timerfd.c
Only in /home/build_kernel/fs: ubifs
Only in /home/build_kernel/fs: udf
Only in /home/build_kernel/fs: ufs
Only in /home/build_kernel/fs: utimes.c
Only in /home/build_kernel/fs: xattr_acl.c
Only in /home/build_kernel/fs: xattr.c
Only in /home/build_kernel/fs: xfs
Only in /home/build_kernel/fs: yaffs2
Only in ./: howto_submit_patch.md
Only in /home/build_kernel/include: acpi
Only in /home/build_kernel/include: asm-generic
Only in /home/build_kernel/include: crypto
Only in /home/build_kernel/include: drm
Only in /home/build_kernel/include: Kbuild
Only in /home/build_kernel/include: keys
Only in /home/build_kernel/include/linux: 8250_pci.h
Only in /home/build_kernel/include/linux: ac97_codec.h
Only in /home/build_kernel/include/linux: acct.h
Only in /home/build_kernel/include/linux: acpi.h
Only in /home/build_kernel/include/linux: acpi_io.h
Only in /home/build_kernel/include/linux: acpi_pmtmr.h
Only in /home/build_kernel/include/linux: adb.h
Only in /home/build_kernel/include/linux: adfs_fs.h
Only in /home/build_kernel/include/linux: aer.h
Only in /home/build_kernel/include/linux: affs_hardblocks.h
Only in /home/build_kernel/include/linux: agp_backend.h
Only in /home/build_kernel/include/linux: agpgart.h
Only in /home/build_kernel/include/linux: ahci_platform.h
Only in /home/build_kernel/include/linux: aio_abi.h
Only in /home/build_kernel/include/linux: aio.h
Only in /home/build_kernel/include/linux: akm8975.h
Only in /home/build_kernel/include/linux: alarmtimer.h
Only in /home/build_kernel/include/linux: altera_jtaguart.h
Only in /home/build_kernel/include/linux: altera_uart.h
Only in /home/build_kernel/include/linux: amba
Only in /home/build_kernel/include/linux: amd-iommu.h
Only in /home/build_kernel/include/linux: amifd.h
Only in /home/build_kernel/include/linux: amifdreg.h
Only in /home/build_kernel/include/linux: amigaffs.h
Only in /home/build_kernel/include/linux: android_aid.h
Only in /home/build_kernel/include/linux: anon_inodes.h
Only in /home/build_kernel/include/linux: a.out.h
Only in /home/build_kernel/include/linux: apm_bios.h
Only in /home/build_kernel/include/linux: apm-emulation.h
Only in /home/build_kernel/include/linux: apple_bl.h
Only in /home/build_kernel/include/linux: arcdevice.h
Only in /home/build_kernel/include/linux: arcfb.h
Only in /home/build_kernel/include/linux: async.h
Only in /home/build_kernel/include/linux: async_tx.h
Only in /home/build_kernel/include/linux: ata.h
Only in /home/build_kernel/include/linux: atalk.h
Only in /home/build_kernel/include/linux: ata_platform.h
Only in /home/build_kernel/include/linux: ath9k_platform.h
Only in /home/build_kernel/include/linux: atmapi.h
Only in /home/build_kernel/include/linux: atmarp.h
Only in /home/build_kernel/include/linux: atmbr2684.h
Only in /home/build_kernel/include/linux: atmclip.h
Only in /home/build_kernel/include/linux: atmdev.h
Only in /home/build_kernel/include/linux: atmel-mci.h
Only in /home/build_kernel/include/linux: atmel_pdc.h
Only in /home/build_kernel/include/linux: atmel-pwm-bl.h
Only in /home/build_kernel/include/linux: atmel_pwm.h
Only in /home/build_kernel/include/linux: atmel_serial.h
Only in /home/build_kernel/include/linux: atmel-ssc.h
Only in /home/build_kernel/include/linux: atmel_tc.h
Only in /home/build_kernel/include/linux: atm_eni.h
Only in /home/build_kernel/include/linux: atm.h
Only in /home/build_kernel/include/linux: atm_he.h
Only in /home/build_kernel/include/linux: atm_idt77105.h
Only in /home/build_kernel/include/linux: atmioc.h
Only in /home/build_kernel/include/linux: atmlec.h
Only in /home/build_kernel/include/linux: atmmpc.h
Only in /home/build_kernel/include/linux: atm_nicstar.h
Only in /home/build_kernel/include/linux: atmppp.h
Only in /home/build_kernel/include/linux: atmsap.h
Only in /home/build_kernel/include/linux: atm_suni.h
Only in /home/build_kernel/include/linux: atmsvc.h
Only in /home/build_kernel/include/linux: atm_tcp.h
Only in /home/build_kernel/include/linux: atm_zatm.h
Only in /home/build_kernel/include/linux: atomic.h
Only in /home/build_kernel/include/linux: attribute_container.h
Only in /home/build_kernel/include/linux: audit.h
Only in /home/build_kernel/include/linux: auto_dev-ioctl.h
Only in /home/build_kernel/include/linux: auto_fs4.h
Only in /home/build_kernel/include/linux: auto_fs.h
Only in /home/build_kernel/include/linux: auxvec.h
Only in /home/build_kernel/include/linux: average.h
Only in /home/build_kernel/include/linux: ax25.h
Only in /home/build_kernel/include/linux: b1lli.h
Only in /home/build_kernel/include/linux: b1pcmcia.h
Only in /home/build_kernel/include/linux: backing-dev.h
Only in /home/build_kernel/include/linux: backlight.h
Only in /home/build_kernel/include/linux: basic_mmio_gpio.h
Only in /home/build_kernel/include/linux: baycom.h
Only in /home/build_kernel/include/linux: bcd.h
Only in /home/build_kernel/include/linux: bch.h
Only in /home/build_kernel/include/linux: bcma
Only in /home/build_kernel/include/linux: bfin_mac.h
Only in /home/build_kernel/include/linux: bfs_fs.h
Only in /home/build_kernel/include/linux: binfmts.h
Only in /home/build_kernel/include/linux: bio.h
Only in /home/build_kernel/include/linux: bitmap.h
Only in /home/build_kernel/include/linux: bitops.h
Only in /home/build_kernel/include/linux: bitrev.h
Only in /home/build_kernel/include/linux: bit_spinlock.h
Only in /home/build_kernel/include/linux: blkdev.h
Only in /home/build_kernel/include/linux: blk-iopoll.h
Only in /home/build_kernel/include/linux: blkpg.h
Only in /home/build_kernel/include/linux: blktrace_api.h
Only in /home/build_kernel/include/linux: blk_types.h
Only in /home/build_kernel/include/linux: blockgroup_lock.h
Only in /home/build_kernel/include/linux: bma150.h
Only in /home/build_kernel/include/linux: bootmem.h
Only in /home/build_kernel/include/linux: bottom_half.h
Only in /home/build_kernel/include/linux: bpqether.h
Only in /home/build_kernel/include/linux: brcmphy.h
Only in /home/build_kernel/include/linux: bsearch.h
Only in /home/build_kernel/include/linux: bsg.h
Only in /home/build_kernel/include/linux: bsg-lib.h
Only in /home/build_kernel/include/linux: btree-128.h
Only in /home/build_kernel/include/linux: btree.h
Only in /home/build_kernel/include/linux: btree-type.h
Only in /home/build_kernel/include/linux: buffer_head.h
Only in /home/build_kernel/include/linux: bug.h
Only in /home/build_kernel/include/linux: byteorder
Only in /home/build_kernel/include/linux: c2port.h
Only in /home/build_kernel/include/linux: cache.h
Only in /home/build_kernel/include/linux: caif
Only in /home/build_kernel/include/linux: can
Only in /home/build_kernel/include/linux: can.h
Only in /home/build_kernel/include/linux: capability.h
Only in /home/build_kernel/include/linux: capi.h
Only in /home/build_kernel/include/linux: cb710.h
Only in /home/build_kernel/include/linux: cciss_defs.h
Only in /home/build_kernel/include/linux: cciss_ioctl.h
Only in /home/build_kernel/include/linux: cd1400.h
Only in /home/build_kernel/include/linux: cdev.h
Only in /home/build_kernel/include/linux: cdk.h
Only in /home/build_kernel/include/linux: cdrom.h
Only in /home/build_kernel/include/linux: ceph
Only in /home/build_kernel/include/linux: cfag12864b.h
Only in /home/build_kernel/include/linux: cgroup.h
Only in /home/build_kernel/include/linux: cgroupstats.h
Only in /home/build_kernel/include/linux: cgroup_subsys.h
Only in /home/build_kernel/include/linux: chio.h
Only in /home/build_kernel/include/linux: circ_buf.h
Only in /home/build_kernel/include/linux: cleancache.h
Only in /home/build_kernel/include/linux: clkdev.h
Only in /home/build_kernel/include/linux: clk.h
Only in /home/build_kernel/include/linux: clk-private.h
Only in /home/build_kernel/include/linux: clk-provider.h
Only in /home/build_kernel/include/linux: clksrc-dbx500-prcmu.h
Only in /home/build_kernel/include/linux: clockchips.h
Only in /home/build_kernel/include/linux: clocksource.h
Only in /home/build_kernel/include/linux: cm4000_cs.h
Only in /home/build_kernel/include/linux: cn_proc.h
Only in /home/build_kernel/include/linux: cnt32_to_63.h
Only in /home/build_kernel/include/linux: coda.h
Only in /home/build_kernel/include/linux: coda_psdev.h
Only in /home/build_kernel/include/linux: coff.h
Only in /home/build_kernel/include/linux: com20020.h
Only in /home/build_kernel/include/linux: compaction.h
Only in /home/build_kernel/include/linux: compat.h
Only in /home/build_kernel/include/linux: compiler-gcc3.h
Only in /home/build_kernel/include/linux: compiler-gcc4.h
Only in /home/build_kernel/include/linux: compiler-gcc5.h
Only in /home/build_kernel/include/linux: compiler-gcc.h
Only in /home/build_kernel/include/linux: compiler.h
Only in /home/build_kernel/include/linux: compiler-intel.h
Only in /home/build_kernel/include/linux: completion.h
Only in /home/build_kernel/include/linux: comstats.h
Only in /home/build_kernel/include/linux: concap.h
Only in /home/build_kernel/include/linux: configfs.h
Only in /home/build_kernel/include/linux: connector.h
Only in /home/build_kernel/include/linux: console.h
Only in /home/build_kernel/include/linux: consolemap.h
Only in /home/build_kernel/include/linux: console_struct.h
Only in /home/build_kernel/include/linux: const.h
Only in /home/build_kernel/include/linux: cordic.h
Only in /home/build_kernel/include/linux: coredump.h
Only in /home/build_kernel/include/linux: cper.h
Only in /home/build_kernel/include/linux: cpufreq.h
Only in /home/build_kernel/include/linux: cpu.h
Only in /home/build_kernel/include/linux: cpuidle.h
Only in /home/build_kernel/include/linux: cpumask.h
Only in /home/build_kernel/include/linux: cpu_pm.h
Only in /home/build_kernel/include/linux: cpu_rmap.h
Only in /home/build_kernel/include/linux: cpuset.h
Only in /home/build_kernel/include/linux: cramfs_fs.h
Only in /home/build_kernel/include/linux: cramfs_fs_sb.h
Only in /home/build_kernel/include/linux: crash_dump.h
Only in /home/build_kernel/include/linux: crc16.h
Only in /home/build_kernel/include/linux: crc32c.h
Only in /home/build_kernel/include/linux: crc32.h
Only in /home/build_kernel/include/linux: crc7.h
Only in /home/build_kernel/include/linux: crc8.h
Only in /home/build_kernel/include/linux: crc-ccitt.h
Only in /home/build_kernel/include/linux: crc-itu-t.h
Only in /home/build_kernel/include/linux: crc-t10dif.h
Only in /home/build_kernel/include/linux: cred.h
Only in /home/build_kernel/include/linux: crush
Only in /home/build_kernel/include/linux: crypto.h
Only in /home/build_kernel/include/linux: cryptohash.h
Only in /home/build_kernel/include/linux: cryptouser.h
Only in /home/build_kernel/include/linux: cs5535.h
Only in /home/build_kernel/include/linux: ctype.h
Only in /home/build_kernel/include/linux: cuda.h
Only in /home/build_kernel/include/linux: cyclades.h
Only in /home/build_kernel/include/linux: cyclomx.h
Only in /home/build_kernel/include/linux: cycx_cfm.h
Only in /home/build_kernel/include/linux: cycx_drv.h
Only in /home/build_kernel/include/linux: cycx_x25.h
Only in /home/build_kernel/include/linux: davinci_emac.h
Only in /home/build_kernel/include/linux: dcache.h
Only in /home/build_kernel/include/linux: dca.h
Only in /home/build_kernel/include/linux: dcbnl.h
Only in /home/build_kernel/include/linux: dccp.h
Only in /home/build_kernel/include/linux: dcookies.h
Only in /home/build_kernel/include/linux: debugfs.h
Only in /home/build_kernel/include/linux: debug_locks.h
Only in /home/build_kernel/include/linux: debugobjects.h
Only in /home/build_kernel/include/linux: decompress
Only in /home/build_kernel/include/linux: delayacct.h
Only in /home/build_kernel/include/linux: delay.h
Only in /home/build_kernel/include/linux: devfreq.h
Only in /home/build_kernel/include/linux: device_cgroup.h
Only in /home/build_kernel/include/linux: device.h
Only in /home/build_kernel/include/linux: device-mapper.h
Only in /home/build_kernel/include/linux: devpts_fs.h
Only in /home/build_kernel/include/linux: digsig.h
Only in /home/build_kernel/include/linux: dio.h
Only in /home/build_kernel/include/linux: dirent.h
Only in /home/build_kernel/include/linux: dlmconstants.h
Only in /home/build_kernel/include/linux: dlm_device.h
Only in /home/build_kernel/include/linux: dlm.h
Only in /home/build_kernel/include/linux: dlm_netlink.h
Only in /home/build_kernel/include/linux: dlm_plock.h
Only in /home/build_kernel/include/linux: dm9000.h
Only in /home/build_kernel/include/linux: dma-attrs.h
Only in /home/build_kernel/include/linux: dma-buf.h
Only in /home/build_kernel/include/linux: dma-contiguous.h
Only in /home/build_kernel/include/linux: dma-debug.h
Only in /home/build_kernel/include/linux: dma-direction.h
Only in /home/build_kernel/include/linux: dmaengine.h
Only in /home/build_kernel/include/linux: dma-mapping.h
Only in /home/build_kernel/include/linux: dmapool.h
Only in /home/build_kernel/include/linux: dma_remapping.h
Only in /home/build_kernel/include/linux: dmar.h
Only in /home/build_kernel/include/linux: dm-dirty-log.h
Only in /home/build_kernel/include/linux: dmi.h
Only in /home/build_kernel/include/linux: dm-ioctl.h
Only in /home/build_kernel/include/linux: dm-io.h
Only in /home/build_kernel/include/linux: dm-kcopyd.h
Only in /home/build_kernel/include/linux: dm-log-userspace.h
Only in /home/build_kernel/include/linux: dm-region-hash.h
Only in /home/build_kernel/include/linux: dn.h
Only in /home/build_kernel/include/linux: dnotify.h
Only in /home/build_kernel/include/linux: dns_resolver.h
Only in /home/build_kernel/include/linux: dqblk_qtree.h
Only in /home/build_kernel/include/linux: dqblk_v1.h
Only in /home/build_kernel/include/linux: dqblk_v2.h
Only in /home/build_kernel/include/linux: dqblk_xfs.h
Only in /home/build_kernel/include/linux: drbd.h
Only in /home/build_kernel/include/linux: drbd_limits.h
Only in /home/build_kernel/include/linux: drbd_nl.h
Only in /home/build_kernel/include/linux: drbd_tag_magic.h
Only in /home/build_kernel/include/linux: drv_hdmi.h
Only in /home/build_kernel/include/linux: ds1286.h
Only in /home/build_kernel/include/linux: ds17287rtc.h
Only in /home/build_kernel/include/linux: ds2782_battery.h
Only in /home/build_kernel/include/linux: dtlk.h
Only in /home/build_kernel/include/linux: dvb
Only in /home/build_kernel/include/linux: dw_apb_timer.h
Only in /home/build_kernel/include/linux: dw_dmac.h
Only in /home/build_kernel/include/linux: dynamic_debug.h
Only in /home/build_kernel/include/linux: dynamic_queue_limits.h
Only in /home/build_kernel/include/linux: ecryptfs.h
Only in /home/build_kernel/include/linux: edac.h
Only in /home/build_kernel/include/linux: edd.h
Only in /home/build_kernel/include/linux: eeprom_93cx6.h
Only in /home/build_kernel/include/linux: eeprom_93xx46.h
Only in /home/build_kernel/include/linux: efi.h
Only in /home/build_kernel/include/linux: efs_fs_sb.h
Only in /home/build_kernel/include/linux: efs_vh.h
Only in /home/build_kernel/include/linux: eisa.h
Only in /home/build_kernel/include/linux: elevator.h
Only in /home/build_kernel/include/linux: elfcore-compat.h
Only in /home/build_kernel/include/linux: elfcore.h
Only in /home/build_kernel/include/linux: elf-em.h
Only in /home/build_kernel/include/linux: elf-fdpic.h
Only in /home/build_kernel/include/linux: elf.h
Only in /home/build_kernel/include/linux: elfnote.h
Only in /home/build_kernel/include/linux: enclosure.h
Only in /home/build_kernel/include/linux: err.h
Only in /home/build_kernel/include/linux: errno.h
Only in /home/build_kernel/include/linux: errqueue.h
Only in /home/build_kernel/include/linux: etherdevice.h
Only in /home/build_kernel/include/linux: ethtool.h
Only in /home/build_kernel/include/linux: eventfd.h
Only in /home/build_kernel/include/linux: eventpoll.h
Only in /home/build_kernel/include/linux: evm.h
Only in /home/build_kernel/include/linux: exportfs.h
Only in /home/build_kernel/include/linux: export.h
Only in /home/build_kernel/include/linux: ext2_fs.h
Only in /home/build_kernel/include/linux: f75375s.h
Only in /home/build_kernel/include/linux: fadvise.h
Only in /home/build_kernel/include/linux: falloc.h
Only in /home/build_kernel/include/linux: fanotify.h
Only in /home/build_kernel/include/linux: fault-inject.h
Only in /home/build_kernel/include/linux: fb.h
Only in /home/build_kernel/include/linux: fcdevice.h
Only in /home/build_kernel/include/linux: fcntl.h
Only in /home/build_kernel/include/linux: fddidevice.h
Only in /home/build_kernel/include/linux: fd.h
Only in /home/build_kernel/include/linux: fdreg.h
Only in /home/build_kernel/include/linux: fdtable.h
Only in /home/build_kernel/include/linux: fec.h
Only in /home/build_kernel/include/linux: fib_rules.h
Only in /home/build_kernel/include/linux: fiemap.h
Only in /home/build_kernel/include/linux: file.h
Only in /home/build_kernel/include/linux: filter.h
Only in /home/build_kernel/include/linux: fips.h
Only in /home/build_kernel/include/linux: firewire-cdev.h
Only in /home/build_kernel/include/linux: firewire-constants.h
Only in /home/build_kernel/include/linux: firewire.h
Only in /home/build_kernel/include/linux: firmware.h
Only in /home/build_kernel/include/linux: firmware-map.h
Only in /home/build_kernel/include/linux: flat.h
Only in /home/build_kernel/include/linux: flex_array.h
Only in /home/build_kernel/include/linux: font.h
Only in /home/build_kernel/include/linux: freezer.h
Only in /home/build_kernel/include/linux: fscache-cache.h
Only in /home/build_kernel/include/linux: fscache.h
Only in /home/build_kernel/include/linux: fs_enet_pd.h
Only in /home/build_kernel/include/linux: fs.h
Only in /home/build_kernel/include/linux: fsl
Only in /home/build_kernel/include/linux: fsl_devices.h
Only in /home/build_kernel/include/linux: fsl-diu-fb.h
Only in /home/build_kernel/include/linux: fsl_hypervisor.h
Only in /home/build_kernel/include/linux: fsnotify_backend.h
Only in /home/build_kernel/include/linux: fsnotify.h
Only in /home/build_kernel/include/linux: fs_stack.h
Only in /home/build_kernel/include/linux: fs_struct.h
Only in /home/build_kernel/include/linux: fs_uart_pd.h
Only in /home/build_kernel/include/linux: ftrace_event.h
Only in /home/build_kernel/include/linux: ftrace.h
Only in /home/build_kernel/include/linux: ftrace_irq.h
Only in /home/build_kernel/include/linux: fuse.h
Only in /home/build_kernel/include/linux: futex.h
Only in /home/build_kernel/include/linux: g2d_driver.h
Only in /home/build_kernel/include/linux: gameport.h
Only in /home/build_kernel/include/linux: gcd.h
Only in /home/build_kernel/include/linux: genalloc.h
Only in /home/build_kernel/include/linux: generic_acl.h
Only in /home/build_kernel/include/linux: generic_serial.h
Only in /home/build_kernel/include/linux: genetlink.h
Only in /home/build_kernel/include/linux: genhd.h
Only in /home/build_kernel/include/linux: gen_stats.h
Only in /home/build_kernel/include/linux: getcpu.h
Only in /home/build_kernel/include/linux: gfp.h
Only in /home/build_kernel/include/linux: gfs2_ondisk.h
Only in /home/build_kernel/include/linux: gigaset_dev.h
Only in /home/build_kernel/include/linux: gpio_event.h
Only in /home/build_kernel/include/linux: gpio-fan.h
Only in /home/build_kernel/include/linux: gpio.h
Only in /home/build_kernel/include/linux: gpio-i2cmux.h
Only in /home/build_kernel/include/linux: gpio_keys.h
Only in /home/build_kernel/include/linux: gpio_mouse.h
Only in /home/build_kernel/include/linux: gpio-pxa.h
Only in /home/build_kernel/include/linux: gsmmux.h
Only in /home/build_kernel/include/linux: hardirq.h
Only in /home/build_kernel/include/linux: hash.h
Only in /home/build_kernel/include/linux: hdlc
Only in /home/build_kernel/include/linux: hdlcdrv.h
Only in /home/build_kernel/include/linux: hdlc.h
Only in /home/build_kernel/include/linux: hdmi-cec
Only in /home/build_kernel/include/linux: hdreg.h
Only in /home/build_kernel/include/linux: hid-debug.h
Only in /home/build_kernel/include/linux: hiddev.h
Only in /home/build_kernel/include/linux: hid.h
Only in /home/build_kernel/include/linux: hidraw.h
Only in /home/build_kernel/include/linux: hid-roccat.h
Only in /home/build_kernel/include/linux: highmem.h
Only in /home/build_kernel/include/linux: highuid.h
Only in /home/build_kernel/include/linux: hil.h
Only in /home/build_kernel/include/linux: hil_mlc.h
Only in /home/build_kernel/include/linux: hippidevice.h
Only in /home/build_kernel/include/linux: hpet.h
Only in /home/build_kernel/include/linux: hp_sdc.h
Only in /home/build_kernel/include/linux: hrtimer.h
Only in /home/build_kernel/include/linux: hsi
Only in /home/build_kernel/include/linux: htcpld.h
Only in /home/build_kernel/include/linux: htirq.h
Only in /home/build_kernel/include/linux: huge_mm.h
Only in /home/build_kernel/include/linux: hugetlb.h
Only in /home/build_kernel/include/linux: hugetlb_inline.h
Only in /home/build_kernel/include/linux: hw_breakpoint.h
Only in /home/build_kernel/include/linux: hwmon.h
Only in /home/build_kernel/include/linux: hwmon-sysfs.h
Only in /home/build_kernel/include/linux: hwmon-vid.h
Only in /home/build_kernel/include/linux: hw_random.h
Only in /home/build_kernel/include/linux: hwspinlock.h
Only in /home/build_kernel/include/linux: hyperv.h
Only in /home/build_kernel/include/linux: hysdn_if.h
Only in /home/build_kernel/include/linux: i2c
Only in /home/build_kernel/include/linux: i2c-algo-bit.h
Only in /home/build_kernel/include/linux: i2c-algo-pca.h
Only in /home/build_kernel/include/linux: i2c-algo-pcf.h
Only in /home/build_kernel/include/linux: i2c-dev.h
Only in /home/build_kernel/include/linux: i2c-gpio.h
Only in /home/build_kernel/include/linux: i2c.h
Only in /home/build_kernel/include/linux: i2c-mux.h
Only in /home/build_kernel/include/linux: i2c-ocores.h
Only in /home/build_kernel/include/linux: i2c-omap.h
Only in /home/build_kernel/include/linux: i2c-pca-platform.h
Only in /home/build_kernel/include/linux: i2c-pnx.h
Only in /home/build_kernel/include/linux: i2c-pxa.h
Only in /home/build_kernel/include/linux: i2c-smbus.h
Only in /home/build_kernel/include/linux: i2c-tegra.h
Only in /home/build_kernel/include/linux: i2c-xiic.h
Only in /home/build_kernel/include/linux: i2o-dev.h
Only in /home/build_kernel/include/linux: i2o.h
Only in /home/build_kernel/include/linux: i7300_idle.h
Only in /home/build_kernel/include/linux: i8042.h
Only in /home/build_kernel/include/linux: i8253.h
Only in /home/build_kernel/include/linux: i82593.h
Only in /home/build_kernel/include/linux: i8k.h
Only in /home/build_kernel/include/linux: ibmtr.h
Only in /home/build_kernel/include/linux: icmp.h
Only in /home/build_kernel/include/linux: icmpv6.h
Only in /home/build_kernel/include/linux: ide.h
Only in /home/build_kernel/include/linux: idr.h
Only in /home/build_kernel/include/linux: ieee80211.h
Only in /home/build_kernel/include/linux: if_addr.h
Only in /home/build_kernel/include/linux: if_addrlabel.h
Only in /home/build_kernel/include/linux: if_alg.h
Only in /home/build_kernel/include/linux: if_arcnet.h
Only in /home/build_kernel/include/linux: if_arp.h
Only in /home/build_kernel/include/linux: if_bonding.h
Only in /home/build_kernel/include/linux: if_bridge.h
Only in /home/build_kernel/include/linux: if_cablemodem.h
Only in /home/build_kernel/include/linux: if_ec.h
Only in /home/build_kernel/include/linux: if_eql.h
Only in /home/build_kernel/include/linux: if_ether.h
Only in /home/build_kernel/include/linux: if_fc.h
Only in /home/build_kernel/include/linux: if_fddi.h
Only in /home/build_kernel/include/linux: if_frad.h
Only in /home/build_kernel/include/linux: if.h
Only in /home/build_kernel/include/linux: if_hippi.h
Only in /home/build_kernel/include/linux: if_infiniband.h
Only in /home/build_kernel/include/linux: if_link.h
Only in /home/build_kernel/include/linux: if_ltalk.h
Only in /home/build_kernel/include/linux: if_macvlan.h
Only in /home/build_kernel/include/linux: if_packet.h
Only in /home/build_kernel/include/linux: if_phonet.h
Only in /home/build_kernel/include/linux: if_plip.h
Only in /home/build_kernel/include/linux: if_ppp.h
Only in /home/build_kernel/include/linux: if_pppol2tp.h
Only in /home/build_kernel/include/linux: if_pppolac.h
Only in /home/build_kernel/include/linux: if_pppopns.h
Only in /home/build_kernel/include/linux: if_pppox.h
Only in /home/build_kernel/include/linux: if_slip.h
Only in /home/build_kernel/include/linux: if_strip.h
Only in /home/build_kernel/include/linux: if_team.h
Only in /home/build_kernel/include/linux: if_tr.h
Only in /home/build_kernel/include/linux: if_tun.h
Only in /home/build_kernel/include/linux: if_tunnel.h
Only in /home/build_kernel/include/linux: if_vlan.h
Only in /home/build_kernel/include/linux: if_x25.h
Only in /home/build_kernel/include/linux: igmp.h
Only in /home/build_kernel/include/linux: ihex.h
Only in /home/build_kernel/include/linux: ima.h
Only in /home/build_kernel/include/linux: in6.h
Only in /home/build_kernel/include/linux: inetdevice.h
Only in /home/build_kernel/include/linux: inet_diag.h
Only in /home/build_kernel/include/linux: inet.h
Only in /home/build_kernel/include/linux: inet_lro.h
Only in /home/build_kernel/include/linux: in.h
Only in /home/build_kernel/include/linux: init.h
Only in /home/build_kernel/include/linux: init_ohci1394_dma.h
Only in /home/build_kernel/include/linux: initrd.h
diff -rup /home/build_kernel/include/linux/init_task.h ./include/linux/init_task.h
--- /home/build_kernel/include/linux/init_task.h	2016-11-25 07:46:11.000000000 +0000
+++ ./include/linux/init_task.h	2017-03-15 20:33:17.216050187 +0000
@@ -142,6 +142,15 @@ extern struct task_group root_task_group
 # define INIT_PERF_EVENTS(tsk)
 #endif
 
+#ifdef CONFIG_VIRT_CPU_ACCOUNTING_GEN
+# define INIT_VTIME(tsk)                                                \
+  .vtime_seqlock = __SEQLOCK_UNLOCKED(tsk,vtime_seqlock),               \
+    .vtime_snap=0,                                                      \
+    .vtime_snap_whence = VTIME_SYS,
+#else
+# define INIT_VTIME(tsk)
+#endif
+
 #define INIT_TASK_COMM "swapper"
 
 /*
@@ -175,7 +184,14 @@ extern struct task_group root_task_group
 	.ptraced	= LIST_HEAD_INIT(tsk.ptraced),			\
 	.ptrace_entry	= LIST_HEAD_INIT(tsk.ptrace_entry),		\
 	.real_parent	= &tsk,						\
-	.parent		= &tsk,						\
+        .dilation       = 0,                                            \
+           .physical_start_nsec = 0,                                    \
+           .physical_past_nsec = 0,                                     \
+           .vitural_start_nsec = 0,                                     \
+           .vitural_past_nsec = 0,                                      \
+           .freeze_start_nsec = 0,                                      \
+           .freeze_past_nsec = 0,                                       \
+           .parent	= &tsk,                                         \
 	.children	= LIST_HEAD_INIT(tsk.children),			\
 	.sibling	= LIST_HEAD_INIT(tsk.sibling),			\
 	.group_leader	= &tsk,						\
Only in /home/build_kernel/include/linux: inotify.h
Only in /home/build_kernel/include/linux: input
Only in /home/build_kernel/include/linux: input.h
Only in /home/build_kernel/include/linux: input-polldev.h
Only in /home/build_kernel/include/linux: in_route.h
Only in /home/build_kernel/include/linux: integrity.h
Only in /home/build_kernel/include/linux: intel-iommu.h
Only in /home/build_kernel/include/linux: intel_mid_dma.h
Only in /home/build_kernel/include/linux: intel_pmic_gpio.h
Only in /home/build_kernel/include/linux: interrupt.h
Only in /home/build_kernel/include/linux: ioc3.h
Only in /home/build_kernel/include/linux: ioc4.h
Only in /home/build_kernel/include/linux: iocontext.h
Only in /home/build_kernel/include/linux: ioctl.h
Only in /home/build_kernel/include/linux: io.h
Only in /home/build_kernel/include/linux: io-mapping.h
Only in /home/build_kernel/include/linux: iommu.h
Only in /home/build_kernel/include/linux: iommu-helper.h
Only in /home/build_kernel/include/linux: ion.h
Only in /home/build_kernel/include/linux: ioport.h
Only in /home/build_kernel/include/linux: ioprio.h
Only in /home/build_kernel/include/linux: iova.h
Only in /home/build_kernel/include/linux: ip6_tunnel.h
Only in /home/build_kernel/include/linux: ipc.h
Only in /home/build_kernel/include/linux: ipc_namespace.h
Only in /home/build_kernel/include/linux: ip.h
Only in /home/build_kernel/include/linux: ipmi.h
Only in /home/build_kernel/include/linux: ipmi_msgdefs.h
Only in /home/build_kernel/include/linux: ipmi_smi.h
Only in /home/build_kernel/include/linux: ipsec.h
Only in /home/build_kernel/include/linux: ipv6.h
Only in /home/build_kernel/include/linux: ipv6_route.h
Only in /home/build_kernel/include/linux: ip_vs.h
Only in /home/build_kernel/include/linux: ipx.h
Only in /home/build_kernel/include/linux: irda.h
Only in /home/build_kernel/include/linux: irq_cpustat.h
Only in /home/build_kernel/include/linux: irqdesc.h
Only in /home/build_kernel/include/linux: irqdomain.h
Only in /home/build_kernel/include/linux: irqflags.h
Only in /home/build_kernel/include/linux: irq.h
Only in /home/build_kernel/include/linux: irqnr.h
Only in /home/build_kernel/include/linux: irqreturn.h
Only in /home/build_kernel/include/linux: irq_work.h
Only in /home/build_kernel/include/linux: isa.h
Only in /home/build_kernel/include/linux: isapnp.h
Only in /home/build_kernel/include/linux: iscsi_boot_sysfs.h
Only in /home/build_kernel/include/linux: iscsi_ibft.h
Only in /home/build_kernel/include/linux: isdn
Only in /home/build_kernel/include/linux: isdn_divertif.h
Only in /home/build_kernel/include/linux: isdn.h
Only in /home/build_kernel/include/linux: isdnif.h
Only in /home/build_kernel/include/linux: isdn_ppp.h
Only in /home/build_kernel/include/linux: isicom.h
Only in /home/build_kernel/include/linux: iso_fs.h
Only in /home/build_kernel/include/linux: istallion.h
Only in /home/build_kernel/include/linux: ivtvfb.h
Only in /home/build_kernel/include/linux: ivtv.h
Only in /home/build_kernel/include/linux: ixjuser.h
Only in /home/build_kernel/include/linux: jbd2.h
Only in /home/build_kernel/include/linux: jbd_common.h
Only in /home/build_kernel/include/linux: jbd.h
Only in /home/build_kernel/include/linux: jffs2.h
Only in /home/build_kernel/include/linux: jhash.h
Only in /home/build_kernel/include/linux: jiffies.h
Only in /home/build_kernel/include/linux: journal-head.h
Only in /home/build_kernel/include/linux: joystick.h
Only in /home/build_kernel/include/linux: jump_label.h
Only in /home/build_kernel/include/linux: jz4740-adc.h
Only in /home/build_kernel/include/linux: kallsyms.h
Only in /home/build_kernel/include/linux: kbd_diacr.h
Only in /home/build_kernel/include/linux: kbd_kern.h
Only in /home/build_kernel/include/linux: Kbuild
Only in /home/build_kernel/include/linux: kbuild.h
Only in /home/build_kernel/include/linux: kconfig.h
Only in /home/build_kernel/include/linux: kdb.h
Only in /home/build_kernel/include/linux: kdebug.h
Only in /home/build_kernel/include/linux: kdev_t.h
Only in /home/build_kernel/include/linux: kd.h
Only in /home/build_kernel/include/linux: kernelcapi.h
Only in /home/build_kernel/include/linux: kernel.h
Only in /home/build_kernel/include/linux: kernel-page-flags.h
Only in /home/build_kernel/include/linux: kernel_stat.h
Only in /home/build_kernel/include/linux: kexec.h
Only in /home/build_kernel/include/linux: keyboard.h
Only in /home/build_kernel/include/linux: keychord.h
Only in /home/build_kernel/include/linux: keyctl.h
Only in /home/build_kernel/include/linux: key.h
Only in /home/build_kernel/include/linux: keyreset.h
Only in /home/build_kernel/include/linux: key-type.h
Only in /home/build_kernel/include/linux: kfifo.h
Only in /home/build_kernel/include/linux: kgdb.h
Only in /home/build_kernel/include/linux: khugepaged.h
Only in /home/build_kernel/include/linux: klist.h
Only in /home/build_kernel/include/linux: kmalloc_sizes.h
Only in /home/build_kernel/include/linux: kmemcheck.h
Only in /home/build_kernel/include/linux: kmemleak.h
Only in /home/build_kernel/include/linux: kmod.h
Only in /home/build_kernel/include/linux: kmsg_dump.h
Only in /home/build_kernel/include/linux: kobject.h
Only in /home/build_kernel/include/linux: kobject_ns.h
Only in /home/build_kernel/include/linux: kobj_map.h
Only in /home/build_kernel/include/linux: kprobes.h
Only in /home/build_kernel/include/linux: kref.h
Only in /home/build_kernel/include/linux: ks0108.h
Only in /home/build_kernel/include/linux: ks8842.h
Only in /home/build_kernel/include/linux: ksm.h
Only in /home/build_kernel/include/linux: kthread.h
diff -rup /home/build_kernel/include/linux/ktime.h ./include/linux/ktime.h
--- /home/build_kernel/include/linux/ktime.h	2016-11-25 07:46:11.000000000 +0000
+++ ./include/linux/ktime.h	2017-03-15 20:33:17.216050187 +0000
@@ -69,7 +69,7 @@ typedef union ktime ktime_t;		/* Kill th
  * @secs:	seconds to set
  * @nsecs:	nanoseconds to set
  *
- * Return the ktime_t representation of the value
+ * Return: The ktime_t representation of the value.
  */
 static inline ktime_t ktime_set(const long secs, const unsigned long nsecs)
 {
@@ -151,7 +151,7 @@ static inline ktime_t ktime_set(const lo
  * @lhs:	minuend
  * @rhs:	subtrahend
  *
- * Returns the remainder of the subtraction
+ * Return: The remainder of the subtraction.
  */
 static inline ktime_t ktime_sub(const ktime_t lhs, const ktime_t rhs)
 {
@@ -169,7 +169,7 @@ static inline ktime_t ktime_sub(const kt
  * @add1:	addend1
  * @add2:	addend2
  *
- * Returns the sum of @add1 and @add2.
+ * Return: The sum of @add1 and @add2.
  */
 static inline ktime_t ktime_add(const ktime_t add1, const ktime_t add2)
 {
@@ -195,7 +195,7 @@ static inline ktime_t ktime_add(const kt
  * @kt:		addend
  * @nsec:	the scalar nsec value to add
  *
- * Returns the sum of @kt and @nsec in ktime_t format
+ * Return: The sum of @kt and @nsec in ktime_t format.
  */
 extern ktime_t ktime_add_ns(const ktime_t kt, u64 nsec);
 
@@ -204,7 +204,7 @@ extern ktime_t ktime_add_ns(const ktime_
  * @kt:		minuend
  * @nsec:	the scalar nsec value to subtract
  *
- * Returns the subtraction of @nsec from @kt in ktime_t format
+ * Return: The subtraction of @nsec from @kt in ktime_t format.
  */
 extern ktime_t ktime_sub_ns(const ktime_t kt, u64 nsec);
 
@@ -212,7 +212,7 @@ extern ktime_t ktime_sub_ns(const ktime_
  * timespec_to_ktime - convert a timespec to ktime_t format
  * @ts:		the timespec variable to convert
  *
- * Returns a ktime_t variable with the converted timespec value
+ * Return: A ktime_t variable with the converted timespec value.
  */
 static inline ktime_t timespec_to_ktime(const struct timespec ts)
 {
@@ -224,19 +224,20 @@ static inline ktime_t timespec_to_ktime(
  * timeval_to_ktime - convert a timeval to ktime_t format
  * @tv:		the timeval variable to convert
  *
- * Returns a ktime_t variable with the converted timeval value
+ * Return: A ktime_t variable with the converted timeval value.
  */
 static inline ktime_t timeval_to_ktime(const struct timeval tv)
 {
 	return (ktime_t) { .tv = { .sec = (s32)tv.tv_sec,
-				   .nsec = (s32)tv.tv_usec * 1000 } };
+				   .nsec = (s32)(tv.tv_usec *
+						 NSEC_PER_USEC) } };
 }
 
 /**
  * ktime_to_timespec - convert a ktime_t variable to timespec format
  * @kt:		the ktime_t variable to convert
  *
- * Returns the timespec representation of the ktime value
+ * Return: The timespec representation of the ktime value.
  */
 static inline struct timespec ktime_to_timespec(const ktime_t kt)
 {
@@ -248,7 +249,7 @@ static inline struct timespec ktime_to_t
  * ktime_to_timeval - convert a ktime_t variable to timeval format
  * @kt:		the ktime_t variable to convert
  *
- * Returns the timeval representation of the ktime value
+ * Return: The timeval representation of the ktime value.
  */
 static inline struct timeval ktime_to_timeval(const ktime_t kt)
 {
@@ -261,7 +262,7 @@ static inline struct timeval ktime_to_ti
  * ktime_to_ns - convert a ktime_t variable to scalar nanoseconds
  * @kt:		the ktime_t variable to convert
  *
- * Returns the scalar nanoseconds representation of @kt
+ * Return: The scalar nanoseconds representation of @kt.
  */
 static inline s64 ktime_to_ns(const ktime_t kt)
 {
@@ -275,13 +276,58 @@ static inline s64 ktime_to_ns(const ktim
  * @cmp1:	comparable1
  * @cmp2:	comparable2
  *
- * Compare two ktime_t variables, returns 1 if equal
+ * Compare two ktime_t variables.
+ *
+ * Return: 1 if equal.
  */
 static inline int ktime_equal(const ktime_t cmp1, const ktime_t cmp2)
 {
 	return cmp1.tv64 == cmp2.tv64;
 }
 
+/**
+ * ktime_compare - Compares two ktime_t variables for less, greater or equal
+ * @cmp1:	comparable1
+ * @cmp2:	comparable2
+ *
+ * Return: ...
+ *   cmp1  < cmp2: return <0
+ *   cmp1 == cmp2: return 0
+ *   cmp1  > cmp2: return >0
+ */
+static inline int ktime_compare(const ktime_t cmp1, const ktime_t cmp2)
+{
+	if (cmp1.tv64 < cmp2.tv64)
+		return -1;
+	if (cmp1.tv64 > cmp2.tv64)
+		return 1;
+	return 0;
+}
+
+/**
+ * ktime_after - Compare if a ktime_t value is bigger than another one.
+ * @cmp1:	comparable1
+ * @cmp2:	comparable2
+ *
+ * Return: true if cmp1 happened after cmp2.
+ */
+static inline bool ktime_after(const ktime_t cmp1, const ktime_t cmp2)
+{
+	return ktime_compare(cmp1, cmp2) > 0;
+}
+
+/**
+ * ktime_before - Compare if a ktime_t value is smaller than another one.
+ * @cmp1:	comparable1
+ * @cmp2:	comparable2
+ *
+ * Return: true if cmp1 happened before cmp2.
+ */
+static inline bool ktime_before(const ktime_t cmp1, const ktime_t cmp2)
+{
+	return ktime_compare(cmp1, cmp2) < 0;
+}
+
 static inline s64 ktime_to_us(const ktime_t kt)
 {
 	struct timeval tv = ktime_to_timeval(kt);
@@ -301,16 +347,40 @@ static inline s64 ktime_us_delta(const k
 
 static inline ktime_t ktime_add_us(const ktime_t kt, const u64 usec)
 {
-	return ktime_add_ns(kt, usec * 1000);
+	return ktime_add_ns(kt, usec * NSEC_PER_USEC);
+}
+
+static inline ktime_t ktime_add_ms(const ktime_t kt, const u64 msec)
+{
+	return ktime_add_ns(kt, msec * NSEC_PER_MSEC);
 }
 
 static inline ktime_t ktime_sub_us(const ktime_t kt, const u64 usec)
 {
-	return ktime_sub_ns(kt, usec * 1000);
+	return ktime_sub_ns(kt, usec * NSEC_PER_USEC);
 }
 
 extern ktime_t ktime_add_safe(const ktime_t lhs, const ktime_t rhs);
 
+/**
+ * ktime_to_timespec_cond - convert a ktime_t variable to timespec
+ *			    format only if the variable contains data
+ * @kt:		the ktime_t variable to convert
+ * @ts:		the timespec variable to store the result in
+ *
+ * Return: %true if there was a successful conversion, %false if kt was 0.
+ */
+static inline __must_check bool ktime_to_timespec_cond(const ktime_t kt,
+						       struct timespec *ts)
+{
+	if (kt.tv64) {
+		*ts = ktime_to_timespec(kt);
+		return true;
+	} else {
+		return false;
+	}
+}
+
 /*
  * The resolution of the clocks. The resolution value is returned in
  * the clock_getres() system call to give application programmers an
@@ -324,12 +394,20 @@ extern ktime_t ktime_add_safe(const ktim
 extern void ktime_get_ts(struct timespec *ts);
 
 /* Get the real (wall-) time in timespec format: */
-#define ktime_get_real_ts(ts)	getnstimeofday(ts)
+#define ktime_get_real_ts(ts) getnstimeofday(ts)
 
 static inline ktime_t ns_to_ktime(u64 ns)
 {
 	static const ktime_t ktime_zero = { .tv64 = 0 };
+
 	return ktime_add_ns(ktime_zero, ns);
 }
 
+static inline ktime_t ms_to_ktime(u64 ms)
+{
+	static const ktime_t ktime_zero = { .tv64 = 0 };
+
+	return ktime_add_ms(ktime_zero, ms);
+}
+
 #endif
Only in /home/build_kernel/include/linux: kvm.h
Only in /home/build_kernel/include/linux: kvm_host.h
Only in /home/build_kernel/include/linux: kvm_para.h
Only in /home/build_kernel/include/linux: kvm_types.h
Only in /home/build_kernel/include/linux: l2tp.h
Only in /home/build_kernel/include/linux: lapb.h
Only in /home/build_kernel/include/linux: latencytop.h
Only in /home/build_kernel/include/linux: lcd.h
Only in /home/build_kernel/include/linux: lcm.h
Only in /home/build_kernel/include/linux: led-lm3530.h
Only in /home/build_kernel/include/linux: leds-bd2802.h
Only in /home/build_kernel/include/linux: leds.h
Only in /home/build_kernel/include/linux: leds-lp3944.h
Only in /home/build_kernel/include/linux: leds-lp5521.h
Only in /home/build_kernel/include/linux: leds-lp5523.h
Only in /home/build_kernel/include/linux: leds-pca9532.h
Only in /home/build_kernel/include/linux: leds_pwm.h
Only in /home/build_kernel/include/linux: leds-regulator.h
Only in /home/build_kernel/include/linux: leds-tca6507.h
Only in /home/build_kernel/include/linux: lglock.h
Only in /home/build_kernel/include/linux: lguest.h
Only in /home/build_kernel/include/linux: lguest_launcher.h
Only in /home/build_kernel/include/linux: libata.h
Only in /home/build_kernel/include/linux: libps2.h
Only in /home/build_kernel/include/linux: license.h
Only in /home/build_kernel/include/linux: limits.h
Only in /home/build_kernel/include/linux: linkage.h
Only in /home/build_kernel/include/linux: linux_logo.h
Only in /home/build_kernel/include/linux: lis3lv02d.h
Only in /home/build_kernel/include/linux: list_bl.h
Only in /home/build_kernel/include/linux: list.h
Only in /home/build_kernel/include/linux: list_nulls.h
Only in /home/build_kernel/include/linux: list_sort.h
Only in /home/build_kernel/include/linux: llc.h
Only in /home/build_kernel/include/linux: llist.h
Only in /home/build_kernel/include/linux: lockd
Only in /home/build_kernel/include/linux: lockdep.h
Only in /home/build_kernel/include/linux: log2.h
Only in /home/build_kernel/include/linux: loop.h
Only in /home/build_kernel/include/linux: lp855x.h
Only in /home/build_kernel/include/linux: lp8727.h
Only in /home/build_kernel/include/linux: lp.h
Only in /home/build_kernel/include/linux: lru_cache.h
Only in /home/build_kernel/include/linux: lsm_audit.h
Only in /home/build_kernel/include/linux: lzo.h
Only in /home/build_kernel/include/linux: m48t86.h
Only in /home/build_kernel/include/linux: magic.h
Only in /home/build_kernel/include/linux: major.h
Only in /home/build_kernel/include/linux: maple.h
Only in /home/build_kernel/include/linux: map_to_7segment.h
Only in /home/build_kernel/include/linux: marvell_phy.h
Only in /home/build_kernel/include/linux: math64.h
Only in /home/build_kernel/include/linux: matroxfb.h
Only in /home/build_kernel/include/linux: max17040_battery.h
Only in /home/build_kernel/include/linux: mbcache.h
Only in /home/build_kernel/include/linux: mbus.h
Only in /home/build_kernel/include/linux: mc146818rtc.h
Only in /home/build_kernel/include/linux: mc6821.h
Only in /home/build_kernel/include/linux: mca.h
Only in /home/build_kernel/include/linux: mca-legacy.h
Only in /home/build_kernel/include/linux: mdio-bitbang.h
Only in /home/build_kernel/include/linux: mdio-gpio.h
Only in /home/build_kernel/include/linux: mdio.h
Only in /home/build_kernel/include/linux: media.h
Only in /home/build_kernel/include/linux: memblock.h
Only in /home/build_kernel/include/linux: memcontrol.h
Only in /home/build_kernel/include/linux: memory.h
Only in /home/build_kernel/include/linux: memory_hotplug.h
Only in /home/build_kernel/include/linux: mempolicy.h
Only in /home/build_kernel/include/linux: mempool.h
Only in /home/build_kernel/include/linux: memstick.h
Only in /home/build_kernel/include/linux: meye.h
Only in /home/build_kernel/include/linux: mfd
Only in /home/build_kernel/include/linux: mg_disk.h
Only in /home/build_kernel/include/linux: micrel_phy.h
Only in /home/build_kernel/include/linux: migrate.h
Only in /home/build_kernel/include/linux: migrate_mode.h
Only in /home/build_kernel/include/linux: mii.h
Only in /home/build_kernel/include/linux: minix_fs.h
Only in /home/build_kernel/include/linux: miscdevice.h
Only in /home/build_kernel/include/linux: mISDNdsp.h
Only in /home/build_kernel/include/linux: mISDNhw.h
Only in /home/build_kernel/include/linux: mISDNif.h
Only in /home/build_kernel/include/linux: mlx4
Only in /home/build_kernel/include/linux: mman.h
Only in /home/build_kernel/include/linux: mmc
Only in /home/build_kernel/include/linux: mmdebug.h
Only in /home/build_kernel/include/linux: mm.h
Only in /home/build_kernel/include/linux: mm_inline.h
Only in /home/build_kernel/include/linux: mmiotrace.h
Only in /home/build_kernel/include/linux: mmtimer.h
Only in /home/build_kernel/include/linux: mm_types.h
Only in /home/build_kernel/include/linux: mmu_context.h
Only in /home/build_kernel/include/linux: mmu_notifier.h
Only in /home/build_kernel/include/linux: mmzone.h
Only in /home/build_kernel/include/linux: mnt_namespace.h
Only in /home/build_kernel/include/linux: mod_devicetable.h
Only in /home/build_kernel/include/linux: module.h
Only in /home/build_kernel/include/linux: moduleloader.h
Only in /home/build_kernel/include/linux: moduleparam.h
Only in /home/build_kernel/include/linux: mount.h
Only in /home/build_kernel/include/linux: mpage.h
Only in /home/build_kernel/include/linux: mpi.h
Only in /home/build_kernel/include/linux: mqueue.h
Only in /home/build_kernel/include/linux: mroute6.h
Only in /home/build_kernel/include/linux: mroute.h
Only in /home/build_kernel/include/linux: msdos_fs.h
Only in /home/build_kernel/include/linux: msg.h
Only in /home/build_kernel/include/linux: msi.h
Only in /home/build_kernel/include/linux: msm_mdp.h
Only in /home/build_kernel/include/linux: mtd
Only in /home/build_kernel/include/linux: mtio.h
Only in /home/build_kernel/include/linux: mutex-debug.h
Only in /home/build_kernel/include/linux: mutex.h
Only in /home/build_kernel/include/linux: mv643xx_eth.h
Only in /home/build_kernel/include/linux: mv643xx.h
Only in /home/build_kernel/include/linux: mv643xx_i2c.h
Only in /home/build_kernel/include/linux: mxm-wmi.h
Only in /home/build_kernel/include/linux: namei.h
Only in /home/build_kernel/include/linux: nbd.h
Only in /home/build_kernel/include/linux: ncp_fs.h
Only in /home/build_kernel/include/linux: ncp.h
Only in /home/build_kernel/include/linux: ncp_mount.h
Only in /home/build_kernel/include/linux: ncp_no.h
Only in /home/build_kernel/include/linux: neighbour.h
Only in /home/build_kernel/include/linux: netdev_features.h
Only in /home/build_kernel/include/linux: netdevice.h
Only in /home/build_kernel/include/linux: net_dropmon.h
Only in /home/build_kernel/include/linux: netfilter
Only in /home/build_kernel/include/linux: netfilter_arp
Only in /home/build_kernel/include/linux: netfilter_arp.h
Only in /home/build_kernel/include/linux: netfilter_bridge
Only in /home/build_kernel/include/linux: netfilter_bridge.h
Only in /home/build_kernel/include/linux: netfilter_decnet.h
Only in /home/build_kernel/include/linux: netfilter.h
Only in /home/build_kernel/include/linux: netfilter_ipv4
Only in /home/build_kernel/include/linux: netfilter_ipv4.h
Only in /home/build_kernel/include/linux: netfilter_ipv6
Only in /home/build_kernel/include/linux: netfilter_ipv6.h
Only in /home/build_kernel/include/linux: net.h
Only in /home/build_kernel/include/linux: netlink.h
Only in /home/build_kernel/include/linux: netpoll.h
Only in /home/build_kernel/include/linux: netrom.h
Only in /home/build_kernel/include/linux: net_tstamp.h
Only in /home/build_kernel/include/linux: nfc
Only in /home/build_kernel/include/linux: nfc.h
Only in /home/build_kernel/include/linux: nfs2.h
Only in /home/build_kernel/include/linux: nfs3.h
Only in /home/build_kernel/include/linux: nfs4.h
Only in /home/build_kernel/include/linux: nfs4_mount.h
Only in /home/build_kernel/include/linux: nfsacl.h
Only in /home/build_kernel/include/linux: nfsd
Only in /home/build_kernel/include/linux: nfs_fs.h
Only in /home/build_kernel/include/linux: nfs_fs_i.h
Only in /home/build_kernel/include/linux: nfs_fs_sb.h
Only in /home/build_kernel/include/linux: nfs.h
Only in /home/build_kernel/include/linux: nfs_idmap.h
Only in /home/build_kernel/include/linux: nfs_iostat.h
Only in /home/build_kernel/include/linux: nfs_mount.h
Only in /home/build_kernel/include/linux: nfs_page.h
Only in /home/build_kernel/include/linux: nfs_xdr.h
Only in /home/build_kernel/include/linux: nilfs2_fs.h
Only in /home/build_kernel/include/linux: nl80211.h
Only in /home/build_kernel/include/linux: nl802154.h
Only in /home/build_kernel/include/linux: nls.h
Only in /home/build_kernel/include/linux: nmi.h
Only in /home/build_kernel/include/linux: node.h
Only in /home/build_kernel/include/linux: nodemask.h
Only in /home/build_kernel/include/linux: notifier.h
Only in /home/build_kernel/include/linux: n_r3964.h
Only in /home/build_kernel/include/linux: nsc_gpio.h
Only in /home/build_kernel/include/linux: nsproxy.h
Only in /home/build_kernel/include/linux: nubus.h
Only in /home/build_kernel/include/linux: numa.h
Only in /home/build_kernel/include/linux: nvme.h
Only in /home/build_kernel/include/linux: nvram.h
Only in /home/build_kernel/include/linux: nwpserial.h
Only in /home/build_kernel/include/linux: of_address.h
Only in /home/build_kernel/include/linux: of_device.h
Only in /home/build_kernel/include/linux: of_fdt.h
Only in /home/build_kernel/include/linux: of_gpio.h
Only in /home/build_kernel/include/linux: of.h
Only in /home/build_kernel/include/linux: of_i2c.h
Only in /home/build_kernel/include/linux: of_irq.h
Only in /home/build_kernel/include/linux: of_mdio.h
Only in /home/build_kernel/include/linux: of_mtd.h
Only in /home/build_kernel/include/linux: of_net.h
Only in /home/build_kernel/include/linux: of_pci.h
Only in /home/build_kernel/include/linux: of_pdt.h
Only in /home/build_kernel/include/linux: of_platform.h
Only in /home/build_kernel/include/linux: of_spi.h
Only in /home/build_kernel/include/linux: omap3isp.h
Only in /home/build_kernel/include/linux: omapfb.h
Only in /home/build_kernel/include/linux: oom.h
Only in /home/build_kernel/include/linux: openvswitch.h
Only in /home/build_kernel/include/linux: opp.h
Only in /home/build_kernel/include/linux: oprofile.h
Only in /home/build_kernel/include/linux: oxu210hp.h
Only in /home/build_kernel/include/linux: padata.h
Only in /home/build_kernel/include/linux: pageblock-flags.h
Only in /home/build_kernel/include/linux: page_cgroup.h
Only in /home/build_kernel/include/linux: page-debug-flags.h
Only in /home/build_kernel/include/linux: page-flags.h
Only in /home/build_kernel/include/linux: page-isolation.h
Only in /home/build_kernel/include/linux: pagemap.h
Only in /home/build_kernel/include/linux: pagevec.h
Only in /home/build_kernel/include/linux: param.h
Only in /home/build_kernel/include/linux: parport.h
Only in /home/build_kernel/include/linux: parport_pc.h
Only in /home/build_kernel/include/linux: parser.h
Only in /home/build_kernel/include/linux: pata_arasan_cf_data.h
Only in /home/build_kernel/include/linux: patchkey.h
Only in /home/build_kernel/include/linux: path.h
Only in /home/build_kernel/include/linux: pch_dma.h
Only in /home/build_kernel/include/linux: pci-acpi.h
Only in /home/build_kernel/include/linux: pci-aspm.h
Only in /home/build_kernel/include/linux: pci-ats.h
Only in /home/build_kernel/include/linux: pci-dma.h
Only in /home/build_kernel/include/linux: pcieport_if.h
Only in /home/build_kernel/include/linux: pci.h
Only in /home/build_kernel/include/linux: pci_hotplug.h
Only in /home/build_kernel/include/linux: pci_ids.h
Only in /home/build_kernel/include/linux: pci_regs.h
Only in /home/build_kernel/include/linux: pda_power.h
Only in /home/build_kernel/include/linux: percpu_counter.h
Only in /home/build_kernel/include/linux: percpu-defs.h
Only in /home/build_kernel/include/linux: percpu.h
Only in /home/build_kernel/include/linux: perf_event.h
Only in /home/build_kernel/include/linux: persistent_ram.h
Only in /home/build_kernel/include/linux: personality.h
Only in /home/build_kernel/include/linux: pfkeyv2.h
Only in /home/build_kernel/include/linux: pfn.h
Only in /home/build_kernel/include/linux: pg.h
Only in /home/build_kernel/include/linux: phantom.h
Only in /home/build_kernel/include/linux: phonedev.h
Only in /home/build_kernel/include/linux: phonet.h
Only in /home/build_kernel/include/linux: phy_fixed.h
Only in /home/build_kernel/include/linux: phy.h
Only in /home/build_kernel/include/linux: pid.h
Only in /home/build_kernel/include/linux: pid_namespace.h
Only in /home/build_kernel/include/linux: pim.h
Only in /home/build_kernel/include/linux: pinctrl
Only in /home/build_kernel/include/linux: pipe_fs_i.h
Only in /home/build_kernel/include/linux: pktcdvd.h
Only in /home/build_kernel/include/linux: pkt_cls.h
Only in /home/build_kernel/include/linux: pkt_sched.h
Only in /home/build_kernel/include/linux: platform_data
Only in /home/build_kernel/include/linux: platform_device.h
Only in /home/build_kernel/include/linux: plist.h
Only in /home/build_kernel/include/linux: pm_clock.h
Only in /home/build_kernel/include/linux: pm_domain.h
Only in /home/build_kernel/include/linux: pm.h
Only in /home/build_kernel/include/linux: pm_qos.h
Only in /home/build_kernel/include/linux: pm_runtime.h
Only in /home/build_kernel/include/linux: pmu.h
Only in /home/build_kernel/include/linux: pm_wakeup.h
Only in /home/build_kernel/include/linux: pnfs_osd_xdr.h
Only in /home/build_kernel/include/linux: pnp.h
Only in /home/build_kernel/include/linux: poison.h
Only in /home/build_kernel/include/linux: poll.h
Only in /home/build_kernel/include/linux: posix_acl.h
Only in /home/build_kernel/include/linux: posix_acl_xattr.h
Only in /home/build_kernel/include/linux: posix-clock.h
Only in /home/build_kernel/include/linux: posix-timers.h
Only in /home/build_kernel/include/linux: posix_types.h
Only in /home/build_kernel/include/linux: power
Only in /home/build_kernel/include/linux: power_supply.h
Only in /home/build_kernel/include/linux: ppdev.h
Only in /home/build_kernel/include/linux: ppp_channel.h
Only in /home/build_kernel/include/linux: ppp-comp.h
Only in /home/build_kernel/include/linux: ppp_defs.h
Only in /home/build_kernel/include/linux: ppp-ioctl.h
Only in /home/build_kernel/include/linux: pps-gpio.h
Only in /home/build_kernel/include/linux: pps.h
Only in /home/build_kernel/include/linux: pps_kernel.h
Only in /home/build_kernel/include/linux: prctl.h
Only in /home/build_kernel/include/linux: preempt.h
Only in /home/build_kernel/include/linux: prefetch.h
Only in /home/build_kernel/include/linux: printk.h
Only in /home/build_kernel/include/linux: prio_heap.h
Only in /home/build_kernel/include/linux: prio_tree.h
Only in /home/build_kernel/include/linux: proc_fs.h
Only in /home/build_kernel/include/linux: profile.h
Only in /home/build_kernel/include/linux: proportions.h
Only in /home/build_kernel/include/linux: pstore.h
Only in /home/build_kernel/include/linux: pti.h
Only in /home/build_kernel/include/linux: ptp_classify.h
Only in /home/build_kernel/include/linux: ptp_clock.h
Only in /home/build_kernel/include/linux: ptp_clock_kernel.h
Only in /home/build_kernel/include/linux: ptrace.h
Only in /home/build_kernel/include/linux: pwm_backlight.h
Only in /home/build_kernel/include/linux: pwm.h
Only in /home/build_kernel/include/linux: pxa168_eth.h
Only in /home/build_kernel/include/linux: pxa2xx_ssp.h
Only in /home/build_kernel/include/linux: qnx4_fs.h
Only in /home/build_kernel/include/linux: qnx6_fs.h
Only in /home/build_kernel/include/linux: qnxtypes.h
Only in /home/build_kernel/include/linux: quicklist.h
Only in /home/build_kernel/include/linux: quota.h
Only in /home/build_kernel/include/linux: quotaops.h
Only in /home/build_kernel/include/linux: radeonfb.h
Only in /home/build_kernel/include/linux: radix-tree.h
Only in /home/build_kernel/include/linux: raid
Only in /home/build_kernel/include/linux: raid_class.h
Only in /home/build_kernel/include/linux: ramfs.h
Only in /home/build_kernel/include/linux: ramoops.h
Only in /home/build_kernel/include/linux: random.h
Only in /home/build_kernel/include/linux: range.h
Only in /home/build_kernel/include/linux: ratelimit.h
Only in /home/build_kernel/include/linux: rational.h
Only in /home/build_kernel/include/linux: raw.h
Only in /home/build_kernel/include/linux: rbtree.h
Only in /home/build_kernel/include/linux: rculist_bl.h
Only in /home/build_kernel/include/linux: rculist.h
Only in /home/build_kernel/include/linux: rculist_nulls.h
Only in /home/build_kernel/include/linux: rcupdate.h
Only in /home/build_kernel/include/linux: rcutiny.h
Only in /home/build_kernel/include/linux: rcutree.h
Only in /home/build_kernel/include/linux: rds.h
Only in /home/build_kernel/include/linux: reboot.h
Only in /home/build_kernel/include/linux: reciprocal_div.h
Only in /home/build_kernel/include/linux: regmap.h
Only in /home/build_kernel/include/linux: regset.h
Only in /home/build_kernel/include/linux: regulator
Only in /home/build_kernel/include/linux: reiserfs_fs.h
Only in /home/build_kernel/include/linux: reiserfs_xattr.h
Only in /home/build_kernel/include/linux: relay.h
Only in /home/build_kernel/include/linux: remoteproc.h
Only in /home/build_kernel/include/linux: res_counter.h
Only in /home/build_kernel/include/linux: resource.h
Only in /home/build_kernel/include/linux: resume-trace.h
Only in /home/build_kernel/include/linux: rfkill-gpio.h
Only in /home/build_kernel/include/linux: rfkill.h
Only in /home/build_kernel/include/linux: rfkill-regulator.h
Only in /home/build_kernel/include/linux: ring_buffer.h
Only in /home/build_kernel/include/linux: rio_drv.h
Only in /home/build_kernel/include/linux: rio.h
Only in /home/build_kernel/include/linux: rio_ids.h
Only in /home/build_kernel/include/linux: rio_regs.h
Only in /home/build_kernel/include/linux: rmap.h
Only in /home/build_kernel/include/linux: romfs_fs.h
Only in /home/build_kernel/include/linux: root_dev.h
Only in /home/build_kernel/include/linux: rose.h
Only in /home/build_kernel/include/linux: rotary_encoder.h
Only in /home/build_kernel/include/linux: route.h
Only in /home/build_kernel/include/linux: rpmsg.h
Only in /home/build_kernel/include/linux: rslib.h
Only in /home/build_kernel/include/linux: rtc
Only in /home/build_kernel/include/linux: rtc.h
Only in /home/build_kernel/include/linux: rtc-v3020.h
Only in /home/build_kernel/include/linux: rtmutex.h
Only in /home/build_kernel/include/linux: rtnetlink.h
Only in /home/build_kernel/include/linux: rwlock_api_smp.h
Only in /home/build_kernel/include/linux: rwlock.h
Only in /home/build_kernel/include/linux: rwlock_types.h
Only in /home/build_kernel/include/linux: rwsem.h
Only in /home/build_kernel/include/linux: rwsem-spinlock.h
Only in /home/build_kernel/include/linux: rxrpc.h
Only in /home/build_kernel/include/linux: s3c_adc_battery.h
Only in /home/build_kernel/include/linux: sa11x0-dma.h
Only in /home/build_kernel/include/linux: sc26198.h
Only in /home/build_kernel/include/linux: scatterlist.h
Only in /home/build_kernel/include/linux: scc.h
diff -rup /home/build_kernel/include/linux/sched.h ./include/linux/sched.h
--- /home/build_kernel/include/linux/sched.h	2016-11-25 07:46:11.000000000 +0000
+++ ./include/linux/sched.h	2017-03-15 20:33:17.226049412 +0000
@@ -1370,9 +1370,9 @@ struct task_struct {
 	unsigned long stack_canary;
 #endif
 
-	/* 
+	/*
 	 * pointers to (original) parent process, youngest child, younger sibling,
-	 * older sibling, respectively.  (p->father can be replaced with 
+	 * older sibling, respectively.  (p->father can be replaced with
 	 * p->real_parent->pid)
 	 */
 	struct task_struct __rcu *real_parent; /* real parent process */
@@ -1448,6 +1448,23 @@ struct task_struct {
 	struct signal_struct *signal;
 	struct sighand_struct *sighand;
 
+  /* virtual time vars */
+  int dilation;
+
+  s64 physical_start_nsec;
+  s64 physical_past_nsec;
+
+  s64 virtual_start_nsec;
+  s64 virtual_past_nsec;
+
+  s64 freeze_start_nsec;
+  s64 freeze_past_nsec;
+
+
+
+  /* end vitrual time vars */
+
+
 	sigset_t blocked, real_blocked;
 	sigset_t saved_sigmask;	/* restored if set_restore_sigmask() was used */
 	struct sigpending pending;
@@ -1631,6 +1648,10 @@ struct task_struct {
 #endif
 };
 
+/* Virtual time */
+extern void init_virtual_start_time(struct task_struct *tsk, int tdf);
+/* end vt */
+
 /* Future-safe accessor for struct task_struct's cpus_allowed. */
 #define tsk_cpus_allowed(tsk) (&(tsk)->cpus_allowed)
 
Only in /home/build_kernel/include/linux: screen_info.h
Only in /home/build_kernel/include/linux: sctp.h
Only in /home/build_kernel/include/linux: scx200_gpio.h
Only in /home/build_kernel/include/linux: scx200.h
Only in /home/build_kernel/include/linux: sdla.h
Only in /home/build_kernel/include/linux: seccomp.h
Only in /home/build_kernel/include/linux: securebits.h
Only in /home/build_kernel/include/linux: security.h
Only in /home/build_kernel/include/linux: selection.h
Only in /home/build_kernel/include/linux: selinux.h
Only in /home/build_kernel/include/linux: selinux_netlink.h
Only in /home/build_kernel/include/linux: semaphore.h
Only in /home/build_kernel/include/linux: sem.h
Only in /home/build_kernel/include/linux: seq_file.h
Only in /home/build_kernel/include/linux: seq_file_net.h
Only in /home/build_kernel/include/linux: seqlock.h
Only in /home/build_kernel/include/linux: serial167.h
Only in /home/build_kernel/include/linux: serial_8250.h
Only in /home/build_kernel/include/linux: serial_core.h
Only in /home/build_kernel/include/linux: serial.h
Only in /home/build_kernel/include/linux: serial_max3100.h
Only in /home/build_kernel/include/linux: serial_mfd.h
Only in /home/build_kernel/include/linux: serial_pnx8xxx.h
Only in /home/build_kernel/include/linux: serial_reg.h
Only in /home/build_kernel/include/linux: serial_sci.h
Only in /home/build_kernel/include/linux: serio.h
Only in /home/build_kernel/include/linux: sfi_acpi.h
Only in /home/build_kernel/include/linux: sfi.h
Only in /home/build_kernel/include/linux: sh_clk.h
Only in /home/build_kernel/include/linux: sh_dma.h
Only in /home/build_kernel/include/linux: sh_eth.h
Only in /home/build_kernel/include/linux: sh_intc.h
Only in /home/build_kernel/include/linux: shmem_fs.h
Only in /home/build_kernel/include/linux: shm.h
Only in /home/build_kernel/include/linux: sh_pfc.h
Only in /home/build_kernel/include/linux: shrinker.h
Only in /home/build_kernel/include/linux: sht15.h
Only in /home/build_kernel/include/linux: sh_timer.h
Only in /home/build_kernel/include/linux: signalfd.h
Only in /home/build_kernel/include/linux: signal.h
Only in /home/build_kernel/include/linux: sirfsoc_dma.h
Only in /home/build_kernel/include/linux: skbuff.h
Only in /home/build_kernel/include/linux: slab_def.h
Only in /home/build_kernel/include/linux: slab.h
Only in /home/build_kernel/include/linux: slob_def.h
Only in /home/build_kernel/include/linux: slub_def.h
Only in /home/build_kernel/include/linux: sm501.h
Only in /home/build_kernel/include/linux: sm501-regs.h
Only in /home/build_kernel/include/linux: smc911x.h
Only in /home/build_kernel/include/linux: smc91x.h
Only in /home/build_kernel/include/linux: smp.h
Only in /home/build_kernel/include/linux: smsc911x.h
Only in /home/build_kernel/include/linux: smscphy.h
Only in /home/build_kernel/include/linux: snmp.h
Only in /home/build_kernel/include/linux: sock_diag.h
Only in /home/build_kernel/include/linux: socket.h
Only in /home/build_kernel/include/linux: sockios.h
Only in /home/build_kernel/include/linux: som.h
Only in /home/build_kernel/include/linux: sonet.h
Only in /home/build_kernel/include/linux: sony-laptop.h
Only in /home/build_kernel/include/linux: sonypi.h
Only in /home/build_kernel/include/linux: sort.h
Only in /home/build_kernel/include/linux: soundcard.h
Only in /home/build_kernel/include/linux: sound.h
Only in /home/build_kernel/include/linux: spi
Only in /home/build_kernel/include/linux: spinlock_api_smp.h
Only in /home/build_kernel/include/linux: spinlock_api_up.h
Only in /home/build_kernel/include/linux: spinlock.h
Only in /home/build_kernel/include/linux: spinlock_types.h
Only in /home/build_kernel/include/linux: spinlock_types_up.h
Only in /home/build_kernel/include/linux: spinlock_up.h
Only in /home/build_kernel/include/linux: splice.h
Only in /home/build_kernel/include/linux: srcu.h
Only in /home/build_kernel/include/linux: ssb
Only in /home/build_kernel/include/linux: stackprotector.h
Only in /home/build_kernel/include/linux: stacktrace.h
Only in /home/build_kernel/include/linux: stallion.h
Only in /home/build_kernel/include/linux: start_kernel.h
Only in /home/build_kernel/include/linux: statfs.h
Only in /home/build_kernel/include/linux: stat.h
Only in /home/build_kernel/include/linux: static_key.h
Only in /home/build_kernel/include/linux: stddef.h
Only in /home/build_kernel/include/linux: stmmac.h
Only in /home/build_kernel/include/linux: stop_machine.h
Only in /home/build_kernel/include/linux: string.h
Only in /home/build_kernel/include/linux: string_helpers.h
Only in /home/build_kernel/include/linux: stringify.h
Only in /home/build_kernel/include/linux: sungem_phy.h
Only in /home/build_kernel/include/linux: sunrpc
Only in /home/build_kernel/include/linux: sunserialcore.h
Only in /home/build_kernel/include/linux: superhyway.h
Only in /home/build_kernel/include/linux: suspend.h
Only in /home/build_kernel/include/linux: suspend_ioctls.h
Only in /home/build_kernel/include/linux: svga.h
Only in /home/build_kernel/include/linux: swab.h
Only in /home/build_kernel/include/linux: swap.h
Only in /home/build_kernel/include/linux: swapops.h
Only in /home/build_kernel/include/linux: swiotlb.h
Only in /home/build_kernel/include/linux: switch.h
Only in /home/build_kernel/include/linux: sw_sync.h
Only in /home/build_kernel/include/linux: synaptics_i2c_rmi.h
Only in /home/build_kernel/include/linux: sync.h
Only in /home/build_kernel/include/linux: synclink.h
Only in /home/build_kernel/include/linux: syscalls.h
Only in /home/build_kernel/include/linux: syscore_ops.h
Only in /home/build_kernel/include/linux: sysctl.h
Only in /home/build_kernel/include/linux: sysfs.h
Only in /home/build_kernel/include/linux: sys.h
Only in /home/build_kernel/include/linux: sysinfo.h
Only in /home/build_kernel/include/linux: syslog.h
Only in /home/build_kernel/include/linux: sysrq.h
Only in /home/build_kernel/include/linux: sys_soc.h
Only in /home/build_kernel/include/linux: sysv_fs.h
Only in /home/build_kernel/include/linux: task_io_accounting.h
Only in /home/build_kernel/include/linux: task_io_accounting_ops.h
Only in /home/build_kernel/include/linux: taskstats.h
Only in /home/build_kernel/include/linux: taskstats_kern.h
Only in /home/build_kernel/include/linux: tboot.h
Only in /home/build_kernel/include/linux: tca6416_keypad.h
Only in /home/build_kernel/include/linux: tc_act
Only in /home/build_kernel/include/linux: tc_ematch
Only in /home/build_kernel/include/linux: tc.h
Only in /home/build_kernel/include/linux: tcp.h
Only in /home/build_kernel/include/linux: telephony.h
Only in /home/build_kernel/include/linux: termios.h
Only in /home/build_kernel/include/linux: textsearch_fsm.h
Only in /home/build_kernel/include/linux: textsearch.h
Only in /home/build_kernel/include/linux: tfrc.h
Only in /home/build_kernel/include/linux: thermal.h
Only in /home/build_kernel/include/linux: thread_info.h
Only in /home/build_kernel/include/linux: threads.h
Only in /home/build_kernel/include/linux: tick.h
Only in /home/build_kernel/include/linux: tifm.h
Only in /home/build_kernel/include/linux: timb_dma.h
Only in /home/build_kernel/include/linux: timb_gpio.h
Only in /home/build_kernel/include/linux: timecompare.h
Only in /home/build_kernel/include/linux: timed_output.h
diff -rup /home/build_kernel/include/linux/time.h ./include/linux/time.h
--- /home/build_kernel/include/linux/time.h	2016-11-25 07:46:11.000000000 +0000
+++ ./include/linux/time.h	2017-03-15 20:33:17.226049412 +0000
@@ -211,6 +211,10 @@ extern int timekeeping_inject_offset(str
 struct tms;
 extern void do_sys_times(struct tms *);
 
+extern int set_dilation(struct task_struct *tsk, int new_tdf);
+extern void freeze_time(struct task_struct *group_leader);
+extern void unfreeze_time(struct task_struct *group_leader);
+
 /*
  * Similar to the struct tm in userspace <time.h>, but it needs to be here so
  * that the kernel source is self contained.
Only in ./include/linux: timekeeper_internal.h
Only in /home/build_kernel/include/linux: timerfd.h
Only in /home/build_kernel/include/linux: timer.h
Only in /home/build_kernel/include/linux: timeriomem-rng.h
Only in /home/build_kernel/include/linux: timerqueue.h
Only in /home/build_kernel/include/linux: times.h
Only in /home/build_kernel/include/linux: timex.h
Only in /home/build_kernel/include/linux: tiocl.h
Only in /home/build_kernel/include/linux: tipc_config.h
Only in /home/build_kernel/include/linux: tipc.h
Only in /home/build_kernel/include/linux: ti_wilink_st.h
Only in /home/build_kernel/include/linux: topology.h
Only in /home/build_kernel/include/linux: toshiba.h
Only in /home/build_kernel/include/linux: tpm_command.h
Only in /home/build_kernel/include/linux: tpm.h
Only in /home/build_kernel/include/linux: trace_clock.h
Only in /home/build_kernel/include/linux: tracehook.h
Only in /home/build_kernel/include/linux: tracepoint.h
Only in /home/build_kernel/include/linux: trace_seq.h
Only in /home/build_kernel/include/linux: transport_class.h
Only in /home/build_kernel/include/linux: trdevice.h
Only in /home/build_kernel/include/linux: tsacct_kern.h
Only in /home/build_kernel/include/linux: tty_driver.h
Only in /home/build_kernel/include/linux: tty_flip.h
Only in /home/build_kernel/include/linux: tty.h
Only in /home/build_kernel/include/linux: tty_ldisc.h
Only in /home/build_kernel/include/linux: typecheck.h
Only in /home/build_kernel/include/linux: types.h
Only in /home/build_kernel/include/linux: u64_stats_sync.h
Only in /home/build_kernel/include/linux: uaccess.h
Only in /home/build_kernel/include/linux: ucb1400.h
Only in /home/build_kernel/include/linux: udf_fs_i.h
Only in /home/build_kernel/include/linux: udp.h
Only in /home/build_kernel/include/linux: uhid.h
Only in /home/build_kernel/include/linux: uid_stat.h
Only in /home/build_kernel/include/linux: uinput.h
Only in /home/build_kernel/include/linux: uio_driver.h
Only in /home/build_kernel/include/linux: uio.h
Only in /home/build_kernel/include/linux: ultrasound.h
Only in /home/build_kernel/include/linux: unaligned
Only in /home/build_kernel/include/linux: un.h
Only in /home/build_kernel/include/linux: unistd.h
Only in /home/build_kernel/include/linux: unix_diag.h
Only in /home/build_kernel/include/linux: usb
Only in /home/build_kernel/include/linux: usbdevice_fs.h
Only in /home/build_kernel/include/linux: usb.h
Only in /home/build_kernel/include/linux: usb_usual.h
Only in /home/build_kernel/include/linux: user.h
Only in /home/build_kernel/include/linux: user_namespace.h
Only in /home/build_kernel/include/linux: user-return-notifier.h
Only in /home/build_kernel/include/linux: utime.h
Only in /home/build_kernel/include/linux: uts.h
Only in /home/build_kernel/include/linux: utsname.h
Only in /home/build_kernel/include/linux: uuid.h
Only in /home/build_kernel/include/linux: uvcvideo.h
Only in /home/build_kernel/include/linux: uwb
Only in /home/build_kernel/include/linux: uwb.h
Only in /home/build_kernel/include/linux: v4l2-mediabus.h
Only in /home/build_kernel/include/linux: v4l2-subdev.h
Only in /home/build_kernel/include/linux: vermagic.h
Only in /home/build_kernel/include/linux: veth.h
Only in /home/build_kernel/include/linux: vfs.h
Only in /home/build_kernel/include/linux: vgaarb.h
Only in /home/build_kernel/include/linux: vga_switcheroo.h
Only in /home/build_kernel/include/linux: vhost.h
Only in /home/build_kernel/include/linux: via-core.h
Only in /home/build_kernel/include/linux: via-gpio.h
Only in /home/build_kernel/include/linux: via.h
Only in /home/build_kernel/include/linux: via_i2c.h
Only in /home/build_kernel/include/linux: videodev2.h
Only in /home/build_kernel/include/linux: video_output.h
Only in /home/build_kernel/include/linux: virtio_9p.h
Only in /home/build_kernel/include/linux: virtio_balloon.h
Only in /home/build_kernel/include/linux: virtio_blk.h
Only in /home/build_kernel/include/linux: virtio_config.h
Only in /home/build_kernel/include/linux: virtio_console.h
Only in /home/build_kernel/include/linux: virtio.h
Only in /home/build_kernel/include/linux: virtio_ids.h
Only in /home/build_kernel/include/linux: virtio_mmio.h
Only in /home/build_kernel/include/linux: virtio_net.h
Only in /home/build_kernel/include/linux: virtio_pci.h
Only in /home/build_kernel/include/linux: virtio_ring.h
Only in /home/build_kernel/include/linux: virtio_rng.h
Only in /home/build_kernel/include/linux: virtio_scsi.h
Only in /home/build_kernel/include/linux: vlynq.h
Only in /home/build_kernel/include/linux: vmalloc.h
Only in /home/build_kernel/include/linux: vm_event_item.h
Only in /home/build_kernel/include/linux: vmpressure.h
Only in /home/build_kernel/include/linux: vmstat.h
Only in /home/build_kernel/include/linux: vt_buffer.h
Only in /home/build_kernel/include/linux: vt.h
Only in /home/build_kernel/include/linux: vt_kern.h
Only in /home/build_kernel/include/linux: w1-gpio.h
Only in /home/build_kernel/include/linux: wait.h
Only in /home/build_kernel/include/linux: wakelock.h
Only in /home/build_kernel/include/linux: wakeup_reason.h
Only in /home/build_kernel/include/linux: wanrouter.h
Only in /home/build_kernel/include/linux: watchdog.h
Only in /home/build_kernel/include/linux: wifi_tiwlan.h
Only in /home/build_kernel/include/linux: wimax
Only in /home/build_kernel/include/linux: wimax.h
Only in /home/build_kernel/include/linux: wireless.h
Only in /home/build_kernel/include/linux: wl127x-rfkill.h
Only in /home/build_kernel/include/linux: wl12xx.h
Only in /home/build_kernel/include/linux: wlan_plat.h
Only in /home/build_kernel/include/linux: wm97xx.h
Only in /home/build_kernel/include/linux: workqueue.h
Only in /home/build_kernel/include/linux: writeback.h
Only in /home/build_kernel/include/linux: x25.h
Only in /home/build_kernel/include/linux: xattr.h
Only in /home/build_kernel/include/linux: xfrm.h
Only in /home/build_kernel/include/linux: xilinxfb.h
Only in /home/build_kernel/include/linux: xz.h
Only in /home/build_kernel/include/linux: yam.h
Only in /home/build_kernel/include/linux: z2_battery.h
Only in /home/build_kernel/include/linux: zconf.h
Only in /home/build_kernel/include/linux: zlib.h
Only in /home/build_kernel/include/linux: zorro.h
Only in /home/build_kernel/include/linux: zorro_ids.h
Only in /home/build_kernel/include/linux: zutil.h
Only in /home/build_kernel/include: math-emu
Only in /home/build_kernel/include: media
Only in /home/build_kernel/include: misc
Only in /home/build_kernel/include: mtd
Only in /home/build_kernel/include/net: 9p
Only in /home/build_kernel/include/net: act_api.h
Only in /home/build_kernel/include/net: activity_stats.h
Only in /home/build_kernel/include/net: addrconf.h
Only in /home/build_kernel/include/net: af_ieee802154.h
Only in /home/build_kernel/include/net: af_rxrpc.h
Only in /home/build_kernel/include/net: af_unix.h
Only in /home/build_kernel/include/net: ah.h
Only in /home/build_kernel/include/net: arp.h
Only in /home/build_kernel/include/net: atmclip.h
Only in /home/build_kernel/include/net: ax25.h
Only in /home/build_kernel/include/net: ax88796.h
Only in /home/build_kernel/include/net: bluetooth
Only in /home/build_kernel/include/net: caif
Only in /home/build_kernel/include/net: cfg80211.h
Only in /home/build_kernel/include/net: cfg80211-wext.h
Only in /home/build_kernel/include/net: checksum.h
Only in /home/build_kernel/include/net: cipso_ipv4.h
Only in /home/build_kernel/include/net: cls_cgroup.h
Only in /home/build_kernel/include/net: compat.h
Only in /home/build_kernel/include/net: datalink.h
Only in /home/build_kernel/include/net: dcbevent.h
Only in /home/build_kernel/include/net: dcbnl.h
Only in /home/build_kernel/include/net: dn_dev.h
Only in /home/build_kernel/include/net: dn_fib.h
Only in /home/build_kernel/include/net: dn.h
Only in /home/build_kernel/include/net: dn_neigh.h
Only in /home/build_kernel/include/net: dn_nsp.h
Only in /home/build_kernel/include/net: dn_route.h
Only in /home/build_kernel/include/net: dsa.h
Only in /home/build_kernel/include/net: dsfield.h
Only in /home/build_kernel/include/net: dst.h
Only in /home/build_kernel/include/net: dst_ops.h
Only in /home/build_kernel/include/net: esp.h
Only in /home/build_kernel/include/net: ethoc.h
Only in /home/build_kernel/include/net: fib_rules.h
Only in /home/build_kernel/include/net: flow.h
Only in /home/build_kernel/include/net: flow_keys.h
Only in /home/build_kernel/include/net: garp.h
Only in /home/build_kernel/include/net: genetlink.h
Only in /home/build_kernel/include/net: gen_stats.h
Only in /home/build_kernel/include/net: gre.h
Only in /home/build_kernel/include/net: icmp.h
Only in /home/build_kernel/include/net: ieee80211_radiotap.h
Only in /home/build_kernel/include/net: ieee802154.h
Only in /home/build_kernel/include/net: ieee802154_netdev.h
Only in /home/build_kernel/include/net: if_inet6.h
Only in /home/build_kernel/include/net: inet6_connection_sock.h
Only in /home/build_kernel/include/net: inet6_hashtables.h
Only in /home/build_kernel/include/net: inet_common.h
Only in /home/build_kernel/include/net: inet_connection_sock.h
Only in /home/build_kernel/include/net: inet_ecn.h
Only in /home/build_kernel/include/net: inet_frag.h
Only in /home/build_kernel/include/net: inet_hashtables.h
Only in /home/build_kernel/include/net: inetpeer.h
Only in /home/build_kernel/include/net: inet_sock.h
Only in /home/build_kernel/include/net: inet_timewait_sock.h
Only in /home/build_kernel/include/net: ip6_checksum.h
Only in /home/build_kernel/include/net: ip6_fib.h
Only in /home/build_kernel/include/net: ip6_route.h
Only in /home/build_kernel/include/net: ip6_tunnel.h
Only in /home/build_kernel/include/net: ipcomp.h
Only in /home/build_kernel/include/net: ipconfig.h
Only in /home/build_kernel/include/net: ip_fib.h
Only in /home/build_kernel/include/net: ip.h
Only in /home/build_kernel/include/net: ipip.h
Only in /home/build_kernel/include/net: ipv6.h
Only in /home/build_kernel/include/net: ip_vs.h
Only in /home/build_kernel/include/net: ipx.h
Only in /home/build_kernel/include/net: irda
Only in /home/build_kernel/include/net: iucv
Only in /home/build_kernel/include/net: iw_handler.h
Only in /home/build_kernel/include/net: lapb.h
Only in /home/build_kernel/include/net: lib80211.h
Only in /home/build_kernel/include/net: llc_c_ac.h
Only in /home/build_kernel/include/net: llc_c_ev.h
Only in /home/build_kernel/include/net: llc_conn.h
Only in /home/build_kernel/include/net: llc_c_st.h
Only in /home/build_kernel/include/net: llc.h
Only in /home/build_kernel/include/net: llc_if.h
Only in /home/build_kernel/include/net: llc_pdu.h
Only in /home/build_kernel/include/net: llc_s_ac.h
Only in /home/build_kernel/include/net: llc_sap.h
Only in /home/build_kernel/include/net: llc_s_ev.h
Only in /home/build_kernel/include/net: llc_s_st.h
Only in /home/build_kernel/include/net: mac80211.h
Only in /home/build_kernel/include/net: mip6.h
Only in /home/build_kernel/include/net: mld.h
Only in /home/build_kernel/include/net: ndisc.h
Only in /home/build_kernel/include/net: neighbour.h
Only in /home/build_kernel/include/net: netdma.h
Only in /home/build_kernel/include/net: netevent.h
Only in /home/build_kernel/include/net: netfilter
Only in /home/build_kernel/include/net: netlabel.h
Only in /home/build_kernel/include/net: netlink.h
Only in /home/build_kernel/include/net: net_namespace.h
Only in /home/build_kernel/include/net: netns
Only in /home/build_kernel/include/net: netprio_cgroup.h
Only in /home/build_kernel/include/net: net_ratelimit.h
Only in /home/build_kernel/include/net: netrom.h
Only in /home/build_kernel/include/net: nexthop.h
Only in /home/build_kernel/include/net: nfc
Only in /home/build_kernel/include/net: nl802154.h
Only in /home/build_kernel/include/net: p8022.h
Only in /home/build_kernel/include/net: phonet
Only in /home/build_kernel/include/net: ping.h
Only in /home/build_kernel/include/net: pkt_cls.h
Only in /home/build_kernel/include/net: pkt_sched.h
Only in /home/build_kernel/include/net: protocol.h
Only in /home/build_kernel/include/net: psnap.h
Only in /home/build_kernel/include/net: raw.h
Only in /home/build_kernel/include/net: rawv6.h
Only in /home/build_kernel/include/net: red.h
Only in /home/build_kernel/include/net: regulatory.h
Only in /home/build_kernel/include/net: request_sock.h
Only in /home/build_kernel/include/net: rose.h
Only in /home/build_kernel/include/net: route.h
Only in /home/build_kernel/include/net: rtnetlink.h
Only in /home/build_kernel/include/net: scm.h
Only in /home/build_kernel/include/net: sctp
Only in /home/build_kernel/include/net: secure_seq.h
Only in /home/build_kernel/include/net: slhc_vj.h
Only in /home/build_kernel/include/net: snmp.h
Only in /home/build_kernel/include/net: sock.h
Only in /home/build_kernel/include/net: stp.h
Only in /home/build_kernel/include/net: tc_act
Only in /home/build_kernel/include/net: tcp.h
Only in /home/build_kernel/include/net: tcp_memcontrol.h
Only in /home/build_kernel/include/net: tcp_states.h
Only in /home/build_kernel/include/net: timewait_sock.h
Only in /home/build_kernel/include/net: transp_v6.h
Only in /home/build_kernel/include/net: udp.h
Only in /home/build_kernel/include/net: udplite.h
Only in /home/build_kernel/include/net: wext.h
Only in /home/build_kernel/include/net: wimax.h
Only in /home/build_kernel/include/net: wpan-phy.h
Only in /home/build_kernel/include/net: x25device.h
Only in /home/build_kernel/include/net: x25.h
Only in /home/build_kernel/include/net: xfrm.h
Only in /home/build_kernel/include: pcmcia
Only in /home/build_kernel/include: rdma
Only in /home/build_kernel/include: rxrpc
Only in /home/build_kernel/include: scsi
Only in /home/build_kernel/include: sound
Only in /home/build_kernel/include: target
Only in /home/build_kernel/include: trace
Only in /home/build_kernel/include/uapi: Kbuild
Only in /home/build_kernel/include/uapi/linux: Kbuild
Only in ./include/uapi/linux: sched.h
Only in /home/build_kernel/include/uapi/linux: switch.h
Only in /home/build_kernel/include: video
Only in /home/build_kernel/include: xen
Only in /home/build_kernel: init
Only in ./: install2.sh
Only in ./: install2.sh~
Only in ./: install.sh
Only in /home/build_kernel: ipc
Only in ./: iputils
Only in /home/build_kernel: Kbuild
Only in /home/build_kernel: Kconfig
Only in /home/build_kernel/kernel: acct.c
Only in /home/build_kernel/kernel: async.c
Only in /home/build_kernel/kernel: audit.c
Only in /home/build_kernel/kernel: auditfilter.c
Only in /home/build_kernel/kernel: audit.h
Only in /home/build_kernel/kernel: auditsc.c
Only in /home/build_kernel/kernel: audit_tree.c
Only in /home/build_kernel/kernel: audit_watch.c
Only in /home/build_kernel/kernel: backtracetest.c
Only in /home/build_kernel/kernel: bounds.c
Only in /home/build_kernel/kernel: capability.c
Only in /home/build_kernel/kernel: cgroup.c
Only in /home/build_kernel/kernel: cgroup_freezer.c
Only in /home/build_kernel/kernel: compat.c
Only in /home/build_kernel/kernel: configs.c
Only in /home/build_kernel/kernel: cpu.c
Only in /home/build_kernel/kernel: cpu_pm.c
Only in /home/build_kernel/kernel: cpuset.c
Only in /home/build_kernel/kernel: crash_dump.c
Only in /home/build_kernel/kernel: cred.c
Only in /home/build_kernel/kernel: debug
Only in /home/build_kernel/kernel: delayacct.c
Only in /home/build_kernel/kernel: dma.c
Only in /home/build_kernel/kernel: elfcore.c
Only in /home/build_kernel/kernel: events
Only in /home/build_kernel/kernel: exec_domain.c
Only in /home/build_kernel/kernel: exit.c
Only in /home/build_kernel/kernel: extable.c
diff -rup /home/build_kernel/kernel/fork.c ./kernel/fork.c
--- /home/build_kernel/kernel/fork.c	2016-11-25 07:46:11.000000000 +0000
+++ ./kernel/fork.c	2017-03-15 20:33:17.246047862 +0000
@@ -1555,6 +1555,37 @@ struct task_struct * __cpuinit fork_idle
 	return task;
 }
 
+
+/**
+ * Initialize virtual start time as this moment
+ */
+void init_virtual_start_time(struct task_struct *tsk, int tdf)
+{
+  struct timespec ts;
+  s64 now;
+
+  if(tdf > 0) {
+    /**
+     * must make sure __getnstimeofday return wall-clock time
+     * now = nano seconds since Epoch 1970
+     * as well as all the xxx_nsec variables in tsk
+     */
+    __getnstimeofday(&ts);
+    now = timespec_to_ns(&ts);
+
+    /* initialize fields of nsec */
+    tsk->virtual_start_nsec = now;
+    tsk->virtual_past_nsec = 0;
+    tsk->physical_start_nsec = now;
+    tsk->physical_past_nsec = 0;
+    tsk->freeze_start_nsec = 0;
+    tsk->freeze_past_nsec = 0;
+    tsk->dilation = tdf;
+  }
+}
+EXPORT_SYMBOL(init_virtual_start_time);
+
+
 /*
  *  Ok, this is the main fork-routine.
  *
@@ -1692,7 +1723,7 @@ static int check_unshare_flags(unsigned
 {
 	if (unshare_flags & ~(CLONE_THREAD|CLONE_FS|CLONE_NEWNS|CLONE_SIGHAND|
 				CLONE_VM|CLONE_FILES|CLONE_SYSVSEM|
-				CLONE_NEWUTS|CLONE_NEWIPC|CLONE_NEWNET))
+				CLONE_NEWUTS|CLONE_NEWIPC|CLONE_NEWNET|CLONE_NEWTIME))
 		return -EINVAL;
 	/*
 	 * Not implemented, but pretend it works if there is nothing to
@@ -1747,6 +1778,20 @@ static int unshare_fd(unsigned long unsh
 	return 0;
 }
 
+static void unshare_virtual_time(unsigned long unshare_flags)
+{
+  /**
+   * If pack virtual time info into a struct "virtual_time"
+   * then every process have a pointer to a NULL object.
+   * Here we should allocate it, which may fail.
+   * Also, init allocated object may fail due to "dilation"
+   */
+  if (unshare_flags & CLONE_NEWTIME) {
+    /* default TDF = 1 (actually, it is 1000) */
+    init_virtual_start_time(current, 1000);
+  }
+}
+
 /*
  * unshare allows a process to 'unshare' part of the process
  * context which was originally shared using clone.  copy_*
@@ -1789,6 +1834,9 @@ SYSCALL_DEFINE1(unshare, unsigned long,
 	if (err)
 		goto bad_unshare_cleanup_fd;
 
+        // init virtual time if CLONE_NEWTIME is on
+        unshare_virtual_time(unshare_flags);
+
 	if (new_fs || new_fd || do_sysvsem || new_nsproxy) {
 		if (do_sysvsem) {
 			/*
Only in /home/build_kernel/kernel: freezer.c
Only in /home/build_kernel/kernel: futex.c
Only in /home/build_kernel/kernel: futex_compat.c
Only in /home/build_kernel/kernel: gcov
Only in /home/build_kernel/kernel: .gitignore
Only in /home/build_kernel/kernel: groups.c
Only in /home/build_kernel/kernel: hrtimer.c
Only in /home/build_kernel/kernel: hung_task.c
Only in /home/build_kernel/kernel: irq
Only in /home/build_kernel/kernel: irq_work.c
Only in /home/build_kernel/kernel: itimer.c
Only in /home/build_kernel/kernel: jump_label.c
Only in /home/build_kernel/kernel: kallsyms.c
Only in /home/build_kernel/kernel: Kconfig.freezer
Only in /home/build_kernel/kernel: Kconfig.hz
Only in /home/build_kernel/kernel: Kconfig.locks
Only in /home/build_kernel/kernel: Kconfig.preempt
Only in /home/build_kernel/kernel: kexec.c
Only in /home/build_kernel/kernel: kfifo.c
Only in /home/build_kernel/kernel: kmod.c
Only in /home/build_kernel/kernel: kprobes.c
Only in /home/build_kernel/kernel: ksysfs.c
Only in /home/build_kernel/kernel: kthread.c
Only in /home/build_kernel/kernel: latencytop.c
Only in /home/build_kernel/kernel: lockdep.c
Only in /home/build_kernel/kernel: lockdep_internals.h
Only in /home/build_kernel/kernel: lockdep_proc.c
Only in /home/build_kernel/kernel: lockdep_states.h
Only in /home/build_kernel/kernel: Makefile
Only in /home/build_kernel/kernel: module.c
Only in /home/build_kernel/kernel: mutex.c
Only in /home/build_kernel/kernel: mutex-debug.c
Only in /home/build_kernel/kernel: mutex-debug.h
Only in /home/build_kernel/kernel: mutex.h
Only in /home/build_kernel/kernel: notifier.c
Only in /home/build_kernel/kernel: nsproxy.c
Only in /home/build_kernel/kernel: padata.c
Only in /home/build_kernel/kernel: panic.c
Only in /home/build_kernel/kernel: params.c
Only in /home/build_kernel/kernel: pid.c
Only in /home/build_kernel/kernel: pid_namespace.c
Only in /home/build_kernel/kernel: posix-cpu-timers.c
Only in /home/build_kernel/kernel: power
Only in /home/build_kernel/kernel: printk.c
Only in /home/build_kernel/kernel: profile.c
Only in /home/build_kernel/kernel: ptrace.c
Only in /home/build_kernel/kernel: range.c
Only in /home/build_kernel/kernel: rcu.h
Only in /home/build_kernel/kernel: rcupdate.c
Only in /home/build_kernel/kernel: rcutiny.c
Only in /home/build_kernel/kernel: rcutiny_plugin.h
Only in /home/build_kernel/kernel: rcutorture.c
Only in /home/build_kernel/kernel: rcutree.c
Only in /home/build_kernel/kernel: rcutree.h
Only in /home/build_kernel/kernel: rcutree_plugin.h
Only in /home/build_kernel/kernel: rcutree_trace.c
Only in /home/build_kernel/kernel: relay.c
Only in /home/build_kernel/kernel: res_counter.c
Only in /home/build_kernel/kernel: resource.c
Only in /home/build_kernel/kernel: rtmutex.c
Only in /home/build_kernel/kernel: rtmutex_common.h
Only in /home/build_kernel/kernel: rtmutex-debug.c
Only in /home/build_kernel/kernel: rtmutex-debug.h
Only in /home/build_kernel/kernel: rtmutex.h
Only in /home/build_kernel/kernel: rtmutex-tester.c
Only in /home/build_kernel/kernel: rwsem.c
Only in /home/build_kernel/kernel: sched
Only in /home/build_kernel/kernel: seccomp.c
Only in /home/build_kernel/kernel: semaphore.c
Only in /home/build_kernel/kernel: signal.c
Only in /home/build_kernel/kernel: smp.c
Only in /home/build_kernel/kernel: softirq.c
Only in /home/build_kernel/kernel: spinlock.c
Only in /home/build_kernel/kernel: srcu.c
Only in /home/build_kernel/kernel: stacktrace.c
Only in /home/build_kernel/kernel: stop_machine.c
Only in /home/build_kernel/kernel: sys.c
Only in /home/build_kernel/kernel: sysctl_binary.c
Only in /home/build_kernel/kernel: sysctl.c
Only in /home/build_kernel/kernel: sys_ni.c
Only in /home/build_kernel/kernel: taskstats.c
Only in /home/build_kernel/kernel: test_kprobes.c
Only in /home/build_kernel/kernel/time: alarmtimer.c
Only in /home/build_kernel/kernel/time: clockevents.c
Only in /home/build_kernel/kernel/time: clocksource.c
Only in /home/build_kernel/kernel/time: jiffies.c
Only in /home/build_kernel/kernel/time: Kconfig
Only in /home/build_kernel/kernel/time: Makefile
Only in /home/build_kernel/kernel/time: ntp.c
Only in /home/build_kernel/kernel/time: posix-clock.c
Only in /home/build_kernel/kernel/time: tick-broadcast.c
Only in /home/build_kernel/kernel/time: tick-common.c
Only in /home/build_kernel/kernel/time: tick-internal.h
Only in /home/build_kernel/kernel/time: tick-oneshot.c
Only in /home/build_kernel/kernel/time: tick-sched.c
Only in /home/build_kernel/kernel/time: timecompare.c
Only in /home/build_kernel/kernel/time: timeconv.c
diff -rup /home/build_kernel/kernel/time/timekeeping.c ./kernel/time/timekeeping.c
--- /home/build_kernel/kernel/time/timekeeping.c	2016-11-25 07:46:11.000000000 +0000
+++ ./kernel/time/timekeeping.c	2017-03-15 20:33:17.246047862 +0000
@@ -20,6 +20,7 @@
 #include <linux/time.h>
 #include <linux/tick.h>
 #include <linux/stop_machine.h>
+#include <linux/math64.h>
 
 extern ktime_t ntp_get_next_leap(void);
 extern int __do_adjtimex(struct timex *);
@@ -247,6 +248,85 @@ static void timekeeping_forward_now(void
 }
 
 /**
+ * Add support of freeze
+ */
+static s64 update_physical_past_nsec(struct timespec *ts)
+{
+  s64 now;
+  s64 delta_ppn; /* delta physical_past_nsec */
+
+  now = timespec_to_ns(ts);
+  delta_ppn = now;
+  delta_ppn -= current->physical_past_nsec;
+  delta_ppn -= current->physical_start_nsec;
+  /**
+   * substract frozen duration
+   */
+  delta_ppn -= current->freeze_past_nsec;
+  current->physical_past_nsec += delta_ppn;
+
+  return delta_ppn;
+}
+
+/**
+ * Invariant: for processes(task_struct):
+ * virtual_past_nsec = physical_past_nsec / TDF
+ */
+static void update_virtual_past_nsec(s64 delta_ppn, int tdf)
+{
+  s32 rem;
+  s64 delta_vpn; // delta virtual_past_nsec
+
+  /**
+   * Actual dilation in the range of (0,100], but "1000==1".
+   * Go through following calculations even if TDF=1.
+   */
+  if (tdf > 0 && tdf <= 100000) {
+    if (tdf == 1000) { /* optimized for freeze */
+      current->virtual_past_nsec += delta_ppn;
+    } else {
+      /**
+       * Accuracy of s64 for nanoseconds:
+       * 2^63ns > 9*10^18ns => 9*10^9s
+       * To guarantee (physical_past_nsec * 1000) won't overflow:
+       * 9*10^9s / 1000 = 9*10^6s => 2500h > 104d
+       */
+      delta_vpn = div_s64_rem(delta_ppn * 1000, tdf, &rem);
+      current->virtual_past_nsec += delta_vpn;
+    }
+  }
+}
+
+/**
+ * Maintain process's @virtual_past_nsec and @virtual_start_nsec
+ * in the context of freeze and time dilation
+ */
+static void do_virtual_time_keeping(struct timespec* ts)
+{
+  struct timespec virtual_ts;
+  s64 virtual_now, delta_ppn;
+  int tdf;
+
+  /* make sure vt has been initialized */
+  if (current->virtual_start_nsec > 0) {
+    tdf = current->dilation;
+    delta_ppn = update_physical_past_nsec(ts);
+    update_virtual_past_nsec(delta_ppn, tdf);
+
+    virtual_now = current->virtual_start_nsec +
+      current->virtual_past_nsec;
+    virtual_ts = ns_to_timespec(virtual_now);
+    /* for debug */
+    /*s64 now = timespec_to_ns(ts);*/
+    /*printk("[VT-%s(%d)] FT=%lld us; RT=%lld us; VT=%lld us\n", */
+    /*current->comm, current->pid, current->freeze_past_nsec / 1000, */
+    /*now / 1000, virtual_now / 1000);*/
+    ts->tv_sec = virtual_ts.tv_sec;
+    ts->tv_nsec = virtual_ts.tv_nsec;
+  }
+}
+
+/**
  * getnstimeofday - Returns the time of day in a timespec
  * @ts:		pointer to the timespec to be set
  *
@@ -271,6 +351,7 @@ void getnstimeofday(struct timespec *ts)
 	} while (read_seqretry(&timekeeper.lock, seq));
 
 	timespec_add_ns(ts, nsecs);
+        do_virtual_time_keeping(ts);
 }
 
 EXPORT_SYMBOL(getnstimeofday);
Only in /home/build_kernel/kernel/time: timer_list.c
Only in /home/build_kernel/kernel/time: timer_stats.c
diff -rup /home/build_kernel/kernel/time.c ./kernel/time.c
--- /home/build_kernel/kernel/time.c	2016-11-25 07:46:11.000000000 +0000
+++ ./kernel/time.c	2017-03-15 20:33:17.246047862 +0000
@@ -38,6 +38,8 @@
 #include <linux/math64.h>
 #include <linux/ptrace.h>
 
+#include <linux/rcupdate.h> // for accessing current's parent
+
 #include <asm/uaccess.h>
 #include <asm/unistd.h>
 
@@ -114,6 +116,147 @@ SYSCALL_DEFINE2(gettimeofday, struct tim
 	return 0;
 }
 
+
+/**
+ * Change a process's time dilation factor, fail when @dilation < 0
+ * Since @tsk should be the root of a process subtree(host in emulation)
+ * it's his job to set/update all its children's dilation
+ **/
+int set_dilation(struct task_struct *tsk, int new_tdf)
+{
+  struct timespec ts;
+  s64 now, delta_ppn, delta_vpn;
+  s32 rem;
+  int old_tdf;
+  struct list_head *list;
+  struct task_struct *child;
+
+  /* save anything we may need */
+  old_tdf = tsk->dilation;
+  if (old_tdf == new_tdf) { /* no need to do anything */
+    return 0;
+  } else if (old_tdf == 0) { /* enter virtual time */
+    init_virtual_start_time(tsk, new_tdf);
+  } else if (new_tdf == 0) { /* exit virtual time */
+    tsk->dilation = 0;
+    /* Forget any_past_nsec */
+    tsk->virtual_start_nsec = 0;
+    tsk->virtual_past_nsec = 0;
+    tsk->physical_start_nsec = 0;
+    tsk->physical_past_nsec = 0;
+    tsk->freeze_start_nsec = 0;
+    tsk->freeze_past_nsec = 0;
+  } else if (old_tdf != 0 && new_tdf > 0) { /* already in virtual time */
+    /**
+     * @now is the moment we change TDF,
+     * get it by calling original wall clock time
+     */
+    __getnstimeofday(&ts);
+    now = timespec_to_ns(&ts);
+
+    /**
+     * advance virtual_past_nsec, e.g. add delta_vpn
+     * from last calculation to right now
+     */
+    delta_ppn = now;
+    delta_ppn -= tsk->physical_past_nsec;
+    delta_ppn -= tsk->physical_start_nsec;
+    /* tsk's freeze_past_nsec is either its own or populated */
+    delta_ppn -= tsk->freeze_past_nsec;
+    delta_vpn = div_s64_rem(delta_ppn * 1000, old_tdf, &rem);
+    tsk->virtual_past_nsec += delta_vpn;
+
+    /* reset virtual_start_nsec as now */
+    tsk->virtual_start_nsec = now;
+
+    /**
+     * New physcial_start_nsec from now on
+     * No need to substract frozen time since
+     * we do it in update_physical_past_nsec
+     **/
+    tsk->physical_start_nsec = now;
+    tsk->physical_past_nsec = 0;
+
+    tsk->dilation = new_tdf;
+  } else {
+    return -EINVAL;
+  }
+
+  /* recursive part, downward process-subtree */
+  list_for_each(list, &(tsk->children)) {
+    child = list_entry(list, struct task_struct, sibling);
+    set_dilation(child, new_tdf);
+  }
+
+  return 0;
+}
+EXPORT_SYMBOL(set_dilation);
+
+/**
+ * FIXME: for now just populate downward
+ * How to populate to parent && grandparent...?
+ **/
+static void populate_frozen_time(struct task_struct *tsk)
+{
+  struct list_head *list;
+  struct task_struct *child;
+  /*char comm[TASK_COMM_LEN]; [> put me outside the loop!!! <]*/
+
+  list_for_each(list, &(tsk->children)) {
+    child = list_entry(list, struct task_struct, sibling);
+    child->freeze_past_nsec = tsk->freeze_past_nsec;
+    child->freeze_start_nsec = tsk->freeze_start_nsec;
+    populate_frozen_time(child);
+  }
+}
+
+/**
+ * Freeze a group of processes, only call on group leader
+ * This is a "last freeze count" implementation. If you call
+ * F -> F -> F -> U, tsk->freeze_past_nsec will be the duration
+ * from the U to last F
+ */
+void freeze_time(struct task_struct *tsk)
+{
+  struct timespec ts;
+  s64 now;
+
+  /* signal STOP to freeze this @tsk's children */;
+  kill_pgrp(task_pid(tsk), SIGSTOP, 1);
+  __getnstimeofday(&ts);
+  now = timespec_to_ns(&ts);
+  /**
+   * freeze_past_nsec is accumulated frozen duration,
+   * so we MUST NOT zero it here
+   */
+  tsk->freeze_start_nsec = now;
+}
+EXPORT_SYMBOL(freeze_time);
+
+/**
+ * Unfreeze a group of processes, only call on group leader.
+ * This is a last unfreeze count implementation. If you call
+ * F -> U -> U -> U, tsk->freeze_past_nsec will be the duration
+ * from the last U to F
+ */
+void unfreeze_time(struct task_struct *tsk)
+{
+  struct timespec ts;
+  s64 now;
+
+  __getnstimeofday(&ts);
+  now = timespec_to_ns(&ts);
+  tsk->freeze_past_nsec += (now - tsk->freeze_start_nsec);
+  /* current unfreeze may not be the last one */
+  tsk->freeze_start_nsec = now;
+  populate_frozen_time(tsk);
+
+  /* signal CONTINUE to unfreeze @tsk's children after timekeeping */
+  kill_pgrp(task_pid(tsk), SIGCONT, 1);
+}
+EXPORT_SYMBOL(unfreeze_time);
+
+
 /*
  * Adjust the time obtained from the CMOS to be UTC time instead of
  * local time.
Only in /home/build_kernel/kernel: timeconst.pl
Only in /home/build_kernel/kernel: timer.c
Only in /home/build_kernel/kernel: trace
Only in /home/build_kernel/kernel: tracepoint.c
Only in /home/build_kernel/kernel: tsacct.c
Only in /home/build_kernel/kernel: uid16.c
Only in /home/build_kernel/kernel: up.c
Only in /home/build_kernel/kernel: user.c
Only in /home/build_kernel/kernel: user_namespace.c
Only in /home/build_kernel/kernel: user-return-notifier.c
Only in /home/build_kernel/kernel: utsname.c
Only in /home/build_kernel/kernel: utsname_sysctl.c
Only in /home/build_kernel/kernel: wait.c
Only in /home/build_kernel/kernel: watchdog.c
Only in /home/build_kernel/kernel: workqueue.c
Only in /home/build_kernel/kernel: workqueue_sched.h
Only in /home/build_kernel: lib
Only in ./: linux-bananapi-bananapi-3.4
Only in /home/build_kernel: MAINTAINERS
diff -rup /home/build_kernel/Makefile ./Makefile
--- /home/build_kernel/Makefile	2016-11-25 07:46:11.000000000 +0000
+++ ./Makefile	2017-03-15 20:33:17.206050962 +0000
@@ -1,8 +1,8 @@
 VERSION = 3
-PATCHLEVEL = 4
-SUBLEVEL = 113
+PATCHLEVEL = 16
+SUBLEVEL = 3
 EXTRAVERSION =
-NAME = Saber-toothed Squirrel
+NAME = Museum of Fishiegoodies
 
 # *DOCUMENTATION*
 # To see a list of typical targets execute "make help"
@@ -22,6 +22,9 @@ LC_COLLATE=C
 LC_NUMERIC=C
 export LC_COLLATE LC_NUMERIC
 
+# Avoid interference with shell env settings
+unexport GREP_OPTIONS
+
 # We are using a recursive build, so we need to do a little thinking
 # to get the ordering right.
 #
@@ -38,6 +41,29 @@ export LC_COLLATE LC_NUMERIC
 # descending is started. They are now explicitly listed as the
 # prepare rule.
 
+# Beautify output
+# ---------------------------------------------------------------------------
+#
+# Normally, we echo the whole command before executing it. By making
+# that echo $($(quiet)$(cmd)), we now have the possibility to set
+# $(quiet) to choose other forms of output instead, e.g.
+#
+#         quiet_cmd_cc_o_c = Compiling $(RELDIR)/$@
+#         cmd_cc_o_c       = $(CC) $(c_flags) -c -o $@ $<
+#
+# If $(quiet) is empty, the whole command will be printed.
+# If it is set to "quiet_", only the short version will be printed.
+# If it is set to "silent_", nothing will be printed at all, since
+# the variable $(silent_cmd_cc_o_c) doesn't exist.
+#
+# A simple variant is to prefix commands with $(Q) - that's useful
+# for commands that shall be hidden in non-verbose mode.
+#
+#	$(Q)ln $@ :<
+#
+# If KBUILD_VERBOSE equals 0 then the above command will be hidden.
+# If KBUILD_VERBOSE equals 1 then the above command is displayed.
+#
 # To put more focus on warnings, be less verbose as default
 # Use 'make V=1' to see the full commands
 
@@ -48,6 +74,29 @@ ifndef KBUILD_VERBOSE
   KBUILD_VERBOSE = 0
 endif
 
+ifeq ($(KBUILD_VERBOSE),1)
+  quiet =
+  Q =
+else
+  quiet=quiet_
+  Q = @
+endif
+
+# If the user is running make -s (silent mode), suppress echoing of
+# commands
+
+ifneq ($(filter 4.%,$(MAKE_VERSION)),)	# make-4
+ifneq ($(filter %s ,$(firstword x$(MAKEFLAGS))),)
+  quiet=silent_
+endif
+else					# make-3.8x
+ifneq ($(filter s% -s%,$(MAKEFLAGS)),)
+  quiet=silent_
+endif
+endif
+
+export quiet Q KBUILD_VERBOSE
+
 # Call a source code checker (by default, "sparse") as part of the
 # C compilation.
 #
@@ -102,10 +151,6 @@ ifeq ("$(origin O)", "command line")
   KBUILD_OUTPUT := $(O)
 endif
 
-ifeq ("$(origin W)", "command line")
-  export KBUILD_ENABLE_EXTRA_GCC_CHECKS := $(W)
-endif
-
 # That's our default target when none is given on the command line
 PHONY := _all
 _all:
@@ -117,16 +162,23 @@ ifneq ($(KBUILD_OUTPUT),)
 # Invoke a second make in the output directory, passing relevant variables
 # check that the output directory actually exists
 saved-output := $(KBUILD_OUTPUT)
-KBUILD_OUTPUT := $(shell cd $(KBUILD_OUTPUT) && /bin/pwd)
+KBUILD_OUTPUT := $(shell mkdir -p $(KBUILD_OUTPUT) && cd $(KBUILD_OUTPUT) \
+								&& /bin/pwd)
 $(if $(KBUILD_OUTPUT),, \
-     $(error output directory "$(saved-output)" does not exist))
+     $(error failed to create output directory "$(saved-output)"))
 
 PHONY += $(MAKECMDGOALS) sub-make
 
 $(filter-out _all sub-make $(CURDIR)/Makefile, $(MAKECMDGOALS)) _all: sub-make
-	$(Q)@:
+	@:
 
+# Fake the "Entering directory" message once, so that IDEs/editors are
+# able to understand relative filenames.
+       echodir := @echo
+ quiet_echodir := @echo
+silent_echodir := @:
 sub-make: FORCE
+	$($(quiet)echodir) "make[1]: Entering directory \`$(KBUILD_OUTPUT)'"
 	$(if $(KBUILD_VERBOSE:1=),@)$(MAKE) -C $(KBUILD_OUTPUT) \
 	KBUILD_SRC=$(CURDIR) \
 	KBUILD_EXTMOD="$(KBUILD_EXTMOD)" -f $(CURDIR)/Makefile \
@@ -149,8 +201,18 @@ else
 _all: modules
 endif
 
-srctree		:= $(if $(KBUILD_SRC),$(KBUILD_SRC),$(CURDIR))
-objtree		:= $(CURDIR)
+ifeq ($(KBUILD_SRC),)
+        # building in the source tree
+        srctree := .
+else
+        ifeq ($(KBUILD_SRC)/,$(dir $(CURDIR)))
+                # building in a subdirectory of the source tree
+                srctree := ..
+        else
+                srctree := $(KBUILD_SRC)
+        endif
+endif
+objtree		:= .
 src		:= $(srctree)
 obj		:= $(objtree)
 
@@ -162,14 +224,15 @@ export srctree objtree VPATH
 # SUBARCH tells the usermode build what the underlying arch is.  That is set
 # first, and if a usermode build is happening, the "ARCH=um" on the command
 # line overrides the setting of ARCH below.  If a native build is happening,
-# then ARCH is assigned, getting whatever value it gets normally, and 
+# then ARCH is assigned, getting whatever value it gets normally, and
 # SUBARCH is subsequently ignored.
 
-SUBARCH := $(shell uname -m | sed -e s/i.86/i386/ -e s/sun4u/sparc64/ \
+SUBARCH := $(shell uname -m | sed -e s/i.86/x86/ -e s/x86_64/x86/ \
+				  -e s/sun4u/sparc64/ \
 				  -e s/arm.*/arm/ -e s/sa110/arm/ \
 				  -e s/s390x/s390/ -e s/parisc64/parisc/ \
 				  -e s/ppc.*/powerpc/ -e s/mips.*/mips/ \
-				  -e s/sh[234].*/sh/ )
+				  -e s/sh[234].*/sh/ -e s/aarch64.*/arm64/ )
 
 # Cross compiling and selecting different set of gcc/bin-utils
 # ---------------------------------------------------------------------------
@@ -191,7 +254,6 @@ SUBARCH := $(shell uname -m | sed -e s/i
 # "make" in the configured kernel build directory always uses that.
 # Default value for CROSS_COMPILE is not to prefix executables
 # Note: Some architectures assign CROSS_COMPILE in their arch/*/Makefile
-export KBUILD_BUILDHOST := $(SUBARCH)
 ARCH		?= $(SUBARCH)
 CROSS_COMPILE	?= $(CONFIG_CROSS_COMPILE:"%"=%)
 
@@ -231,10 +293,6 @@ endif
 # Where to locate arch specific headers
 hdr-arch  := $(SRCARCH)
 
-ifeq ($(ARCH),m68knommu)
-       hdr-arch  := m68k
-endif
-
 KCONFIG_CONFIG	?= .config
 export KCONFIG_CONFIG
 
@@ -248,24 +306,29 @@ HOSTCXX      = g++
 HOSTCFLAGS   = -Wall -Wmissing-prototypes -Wstrict-prototypes -O2 -fomit-frame-pointer
 HOSTCXXFLAGS = -O2
 
+ifeq ($(shell $(HOSTCC) -v 2>&1 | grep -c "clang version"), 1)
+HOSTCFLAGS  += -Wno-unused-value -Wno-unused-parameter \
+		-Wno-missing-field-initializers -fno-delete-null-pointer-checks
+endif
+
 # Decide whether to build built-in, modular, or both.
 # Normally, just do built-in.
 
 KBUILD_MODULES :=
 KBUILD_BUILTIN := 1
 
-#	If we have only "make modules", don't compile built-in objects.
-#	When we're building modules with modversions, we need to consider
-#	the built-in objects during the descend as well, in order to
-#	make sure the checksums are up to date before we record them.
+# If we have only "make modules", don't compile built-in objects.
+# When we're building modules with modversions, we need to consider
+# the built-in objects during the descend as well, in order to
+# make sure the checksums are up to date before we record them.
 
 ifeq ($(MAKECMDGOALS),modules)
   KBUILD_BUILTIN := $(if $(CONFIG_MODVERSIONS),1)
 endif
 
-#	If we have "make <whatever> modules", compile modules
-#	in addition to whatever we do anyway.
-#	Just "make" or "make all" shall build modules as well
+# If we have "make <whatever> modules", compile modules
+# in addition to whatever we do anyway.
+# Just "make" or "make all" shall build modules as well
 
 ifneq ($(filter all _all modules,$(MAKECMDGOALS)),)
   KBUILD_MODULES := 1
@@ -278,47 +341,15 @@ endif
 export KBUILD_MODULES KBUILD_BUILTIN
 export KBUILD_CHECKSRC KBUILD_SRC KBUILD_EXTMOD
 
-# Beautify output
-# ---------------------------------------------------------------------------
-#
-# Normally, we echo the whole command before executing it. By making
-# that echo $($(quiet)$(cmd)), we now have the possibility to set
-# $(quiet) to choose other forms of output instead, e.g.
-#
-#         quiet_cmd_cc_o_c = Compiling $(RELDIR)/$@
-#         cmd_cc_o_c       = $(CC) $(c_flags) -c -o $@ $<
-#
-# If $(quiet) is empty, the whole command will be printed.
-# If it is set to "quiet_", only the short version will be printed. 
-# If it is set to "silent_", nothing will be printed at all, since
-# the variable $(silent_cmd_cc_o_c) doesn't exist.
-#
-# A simple variant is to prefix commands with $(Q) - that's useful
-# for commands that shall be hidden in non-verbose mode.
-#
-#	$(Q)ln $@ :<
-#
-# If KBUILD_VERBOSE equals 0 then the above command will be hidden.
-# If KBUILD_VERBOSE equals 1 then the above command is displayed.
-
-ifeq ($(KBUILD_VERBOSE),1)
-  quiet =
-  Q =
+ifneq ($(CC),)
+ifeq ($(shell $(CC) -v 2>&1 | grep -c "clang version"), 1)
+COMPILER := clang
 else
-  quiet=quiet_
-  Q = @
+COMPILER := gcc
 endif
-
-# If the user is running make -s (silent mode), suppress echoing of
-# commands
-
-ifneq ($(filter s% -s%,$(MAKEFLAGS)),)
-  quiet=silent_
+export COMPILER
 endif
 
-export quiet Q KBUILD_VERBOSE
-
-
 # Look for make include files relative to root of kernel src
 MAKEFLAGS += --include-dir=$(srctree)
 
@@ -327,7 +358,6 @@ $(srctree)/scripts/Kbuild.include: ;
 include $(srctree)/scripts/Kbuild.include
 
 # Make variables (CC, etc...)
-
 AS		= $(CROSS_COMPILE)as
 LD		= $(CROSS_COMPILE)ld
 CC		= $(CROSS_COMPILE)gcc
@@ -341,7 +371,6 @@ AWK		= awk
 GENKSYMS	= scripts/genksyms/genksyms
 INSTALLKERNEL  := installkernel
 DEPMOD		= /sbin/depmod
-KALLSYMS	= scripts/kallsyms
 PERL		= perl
 CHECK		= sparse
 
@@ -355,20 +384,30 @@ AFLAGS_KERNEL	=
 CFLAGS_GCOV	= -fprofile-arcs -ftest-coverage
 
 
+# Use USERINCLUDE when you must reference the UAPI directories only.
+USERINCLUDE    := \
+		-I$(srctree)/arch/$(hdr-arch)/include/uapi \
+		-Iarch/$(hdr-arch)/include/generated/uapi \
+		-I$(srctree)/include/uapi \
+		-Iinclude/generated/uapi \
+                -include $(srctree)/include/linux/kconfig.h
+
 # Use LINUXINCLUDE when you must reference the include/ directory.
 # Needed to be compatible with the O= option
-LINUXINCLUDE    := -I$(srctree)/arch/$(hdr-arch)/include \
-                   -Iarch/$(hdr-arch)/include/generated -Iinclude \
-                   $(if $(KBUILD_SRC), -I$(srctree)/include) \
-                   -include $(srctree)/include/linux/kconfig.h
+LINUXINCLUDE    := \
+		-I$(srctree)/arch/$(hdr-arch)/include \
+		-Iarch/$(hdr-arch)/include/generated \
+		$(if $(KBUILD_SRC), -I$(srctree)/include) \
+		-Iinclude \
+		$(USERINCLUDE)
 
 KBUILD_CPPFLAGS := -D__KERNEL__
 
 KBUILD_CFLAGS   := -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs \
 		   -fno-strict-aliasing -fno-common \
 		   -Werror-implicit-function-declaration \
-		   -Wno-format-security \
-		   -fno-delete-null-pointer-checks
+		   -Wno-format-security
+
 KBUILD_AFLAGS_KERNEL :=
 KBUILD_CFLAGS_KERNEL :=
 KBUILD_AFLAGS   := -D__ASSEMBLY__
@@ -400,8 +439,11 @@ export MODVERDIR := $(if $(KBUILD_EXTMOD
 
 # Files to ignore in find ... statements
 
-RCS_FIND_IGNORE := \( -name SCCS -o -name BitKeeper -o -name .svn -o -name CVS -o -name .pc -o -name .hg -o -name .git \) -prune -o
-export RCS_TAR_IGNORE := --exclude SCCS --exclude BitKeeper --exclude .svn --exclude CVS --exclude .pc --exclude .hg --exclude .git
+export RCS_FIND_IGNORE := \( -name SCCS -o -name BitKeeper -o -name .svn -o    \
+			  -name CVS -o -name .pc -o -name .hg -o -name .git \) \
+			  -prune -o
+export RCS_TAR_IGNORE := --exclude SCCS --exclude BitKeeper --exclude .svn \
+			 --exclude CVS --exclude .pc --exclude .hg --exclude .git
 
 # ===========================================================================
 # Rules shared between *config targets and build targets
@@ -430,7 +472,9 @@ endif
 PHONY += asm-generic
 asm-generic:
 	$(Q)$(MAKE) -f $(srctree)/scripts/Makefile.asm-generic \
-	            obj=arch/$(SRCARCH)/include/generated/asm
+	            src=asm obj=arch/$(SRCARCH)/include/generated/asm
+	$(Q)$(MAKE) -f $(srctree)/scripts/Makefile.asm-generic \
+	            src=uapi/asm obj=arch/$(SRCARCH)/include/generated/uapi/asm
 
 # To make sure we do not include .config for any of the *config targets
 # catch them early, and hand them over to scripts/kconfig/Makefile
@@ -440,9 +484,11 @@ asm-generic:
 # Detect when mixed targets is specified, and make a second invocation
 # of make so .config is not included in this case either (for *config).
 
+version_h := include/generated/uapi/linux/version.h
+
 no-dot-config-targets := clean mrproper distclean \
 			 cscope gtags TAGS tags help %docs check% coccicheck \
-			 include/linux/version.h headers_% archheaders archscripts \
+			 $(version_h) headers_% archheaders archscripts \
 			 kernelversion %src-pkg
 
 config-targets := 0
@@ -469,8 +515,16 @@ ifeq ($(mixed-targets),1)
 # We're called with mixed targets (*config and build targets).
 # Handle them one by one.
 
-%:: FORCE
-	$(Q)$(MAKE) -C $(srctree) KBUILD_SRC= $@
+PHONY += $(MAKECMDGOALS) __build_one_by_one
+
+$(filter-out __build_one_by_one, $(MAKECMDGOALS)): __build_one_by_one
+	@:
+
+__build_one_by_one:
+	$(Q)set -e; \
+	for i in $(MAKECMDGOALS); do \
+		$(MAKE) -f $(srctree)/Makefile $$i; \
+	done
 
 else
 ifeq ($(config-targets),1)
@@ -485,11 +539,9 @@ include $(srctree)/arch/$(SRCARCH)/Makef
 export KBUILD_DEFCONFIG KBUILD_KCONFIG
 
 config: scripts_basic outputmakefile FORCE
-	$(Q)mkdir -p include/linux include/config
 	$(Q)$(MAKE) $(build)=scripts/kconfig $@
 
 %config: scripts_basic outputmakefile FORCE
-	$(Q)mkdir -p include/linux include/config
 	$(Q)$(MAKE) $(build)=scripts/kconfig $@
 
 else
@@ -502,7 +554,8 @@ ifeq ($(KBUILD_EXTMOD),)
 # Carefully list dependencies so we do not try to build scripts twice
 # in parallel
 PHONY += scripts
-scripts: scripts_basic include/config/auto.conf include/config/tristate.conf
+scripts: scripts_basic include/config/auto.conf include/config/tristate.conf \
+	 asm-generic
 	$(Q)$(MAKE) $(build)=$(@)
 
 # Objects we will link into vmlinux / subdirs we need to visit
@@ -538,11 +591,11 @@ PHONY += include/config/auto.conf
 
 include/config/auto.conf:
 	$(Q)test -e include/generated/autoconf.h -a -e $@ || (		\
-	echo;								\
-	echo "  ERROR: Kernel configuration is invalid.";		\
-	echo "         include/generated/autoconf.h or $@ are missing.";\
-	echo "         Run 'make oldconfig && make prepare' on kernel src to fix it.";	\
-	echo;								\
+	echo >&2;							\
+	echo >&2 "  ERROR: Kernel configuration is invalid.";		\
+	echo >&2 "         include/generated/autoconf.h or $@ are missing.";\
+	echo >&2 "         Run 'make oldconfig && make prepare' on kernel src to fix it.";	\
+	echo >&2 ;							\
 	/bin/false)
 
 endif # KBUILD_EXTMOD
@@ -558,26 +611,69 @@ endif # $(dot-config)
 # Defaults to vmlinux, but the arch makefile usually adds further targets
 all: vmlinux
 
+include $(srctree)/arch/$(SRCARCH)/Makefile
+
+KBUILD_CFLAGS	+= $(call cc-option,-fno-delete-null-pointer-checks,)
+
 ifdef CONFIG_CC_OPTIMIZE_FOR_SIZE
-KBUILD_CFLAGS	+= -Os
+KBUILD_CFLAGS	+= -Os $(call cc-disable-warning,maybe-uninitialized,)
 else
 KBUILD_CFLAGS	+= -O2
 endif
 
-include $(srctree)/arch/$(SRCARCH)/Makefile
+ifdef CONFIG_READABLE_ASM
+# Disable optimizations that make assembler listings hard to read.
+# reorder blocks reorders the control in the function
+# ipa clone creates specialized cloned functions
+# partial inlining inlines only parts of functions
+KBUILD_CFLAGS += $(call cc-option,-fno-reorder-blocks,) \
+                 $(call cc-option,-fno-ipa-cp-clone,) \
+                 $(call cc-option,-fno-partial-inlining)
+endif
 
 ifneq ($(CONFIG_FRAME_WARN),0)
 KBUILD_CFLAGS += $(call cc-option,-Wframe-larger-than=${CONFIG_FRAME_WARN})
 endif
 
-# Force gcc to behave correct even for buggy distributions
-ifndef CONFIG_CC_STACKPROTECTOR
-KBUILD_CFLAGS += $(call cc-option, -fno-stack-protector)
+# Handle stack protector mode.
+ifdef CONFIG_CC_STACKPROTECTOR_REGULAR
+  stackp-flag := -fstack-protector
+  ifeq ($(call cc-option, $(stackp-flag)),)
+    $(warning Cannot use CONFIG_CC_STACKPROTECTOR_REGULAR: \
+             -fstack-protector not supported by compiler)
+  endif
+else
+ifdef CONFIG_CC_STACKPROTECTOR_STRONG
+  stackp-flag := -fstack-protector-strong
+  ifeq ($(call cc-option, $(stackp-flag)),)
+    $(warning Cannot use CONFIG_CC_STACKPROTECTOR_STRONG: \
+	      -fstack-protector-strong not supported by compiler)
+  endif
+else
+  # Force off for distro compilers that enable stack protector by default.
+  stackp-flag := $(call cc-option, -fno-stack-protector)
+endif
 endif
+KBUILD_CFLAGS += $(stackp-flag)
+
+ifeq ($(COMPILER),clang)
+KBUILD_CPPFLAGS += $(call cc-option,-Qunused-arguments,)
+KBUILD_CPPFLAGS += $(call cc-option,-Wno-unknown-warning-option,)
+KBUILD_CFLAGS += $(call cc-disable-warning, unused-variable)
+KBUILD_CFLAGS += $(call cc-disable-warning, format-invalid-specifier)
+KBUILD_CFLAGS += $(call cc-disable-warning, gnu)
+# Quiet clang warning: comparison of unsigned expression < 0 is always false
+KBUILD_CFLAGS += $(call cc-disable-warning, tautological-compare)
+# CLANG uses a _MergedGlobals as optimization, but this breaks modpost, as the
+# source of a reference will be _MergedGlobals and not on of the whitelisted names.
+# See modpost pattern 2
+KBUILD_CFLAGS += $(call cc-option, -mno-global-merge,)
+else
 
 # This warning generated too much noise in a regular build.
 # Use make W=1 to enable this warning (see scripts/Makefile.build)
 KBUILD_CFLAGS += $(call cc-disable-warning, unused-but-set-variable)
+endif
 
 ifdef CONFIG_FRAME_POINTER
 KBUILD_CFLAGS	+= -fno-omit-frame-pointer -fno-optimize-sibling-calls
@@ -596,15 +692,20 @@ KBUILD_CFLAGS   += $(call cc-option, -fn
 
 ifdef CONFIG_DEBUG_INFO
 KBUILD_CFLAGS	+= -g
-KBUILD_AFLAGS	+= -gdwarf-2
+KBUILD_AFLAGS	+= -Wa,-gdwarf-2
 endif
 
 ifdef CONFIG_DEBUG_INFO_REDUCED
-KBUILD_CFLAGS 	+= $(call cc-option, -femit-struct-debug-baseonly)
+KBUILD_CFLAGS 	+= $(call cc-option, -femit-struct-debug-baseonly) \
+		   $(call cc-option,-fno-var-tracking)
 endif
 
 ifdef CONFIG_FUNCTION_TRACER
-KBUILD_CFLAGS	+= -pg
+ifdef CONFIG_HAVE_FENTRY
+CC_USING_FENTRY	:= $(call cc-option, -mfentry -DCC_USING_FENTRY)
+endif
+KBUILD_CFLAGS	+= -pg $(CC_USING_FENTRY)
+KBUILD_AFLAGS	+= $(CC_USING_FENTRY)
 ifdef CONFIG_DYNAMIC_FTRACE
 	ifdef CONFIG_HAVE_C_RECORDMCOUNT
 		BUILD_C_RECORDMCOUNT := y
@@ -634,6 +735,15 @@ KBUILD_CFLAGS	+= $(call cc-option,-fno-s
 # conserve stack if available
 KBUILD_CFLAGS   += $(call cc-option,-fconserve-stack)
 
+# disallow errors like 'EXPORT_GPL(foo);' with missing header
+KBUILD_CFLAGS   += $(call cc-option,-Werror=implicit-int)
+
+# require functions to have arguments in prototypes, not empty 'int foo()'
+KBUILD_CFLAGS   += $(call cc-option,-Werror=strict-prototypes)
+
+# Prohibit date/time macros, which would make the build non-deterministic
+KBUILD_CFLAGS   += $(call cc-option,-Werror=date-time)
+
 # use the deterministic mode of AR if available
 KBUILD_ARFLAGS := $(call ar-option,D)
 
@@ -642,23 +752,12 @@ ifeq ($(shell $(CONFIG_SHELL) $(srctree)
 	KBUILD_CFLAGS += -DCC_HAVE_ASM_GOTO
 endif
 
+include $(srctree)/scripts/Makefile.extrawarn
+
 # Add user supplied CPPFLAGS, AFLAGS and CFLAGS as the last assignments
-# But warn user when we do so
-warn-assign = \
-$(warning "WARNING: Appending $$K$(1) ($(K$(1))) from $(origin K$(1)) to kernel $$$(1)")
-
-ifneq ($(KCPPFLAGS),)
-        $(call warn-assign,CPPFLAGS)
-        KBUILD_CPPFLAGS += $(KCPPFLAGS)
-endif
-ifneq ($(KAFLAGS),)
-        $(call warn-assign,AFLAGS)
-        KBUILD_AFLAGS += $(KAFLAGS)
-endif
-ifneq ($(KCFLAGS),)
-        $(call warn-assign,CFLAGS)
-        KBUILD_CFLAGS += $(KCFLAGS)
-endif
+KBUILD_CPPFLAGS += $(KCPPFLAGS)
+KBUILD_AFLAGS += $(KAFLAGS)
+KBUILD_CFLAGS += $(KCFLAGS)
 
 # Use --build-id when available.
 LDFLAGS_BUILD_ID = $(patsubst -Wl$(comma)%,%,\
@@ -683,6 +782,13 @@ export KBUILD_IMAGE ?= vmlinux
 export	INSTALL_PATH ?= /boot
 
 #
+# INSTALL_DTBS_PATH specifies a prefix for relocations required by build roots.
+# Like INSTALL_MOD_PATH, it isn't defined in the Makefile, but can be passed as
+# an argument if needed. Otherwise it defaults to the kernel install path
+#
+export INSTALL_DTBS_PATH ?= $(INSTALL_PATH)/dtbs/$(KERNELRELEASE)
+
+#
 # INSTALL_MOD_PATH specifies a prefix to MODLIB for module directory
 # relocations required by build roots.  This is not defined in the
 # makefile but the argument can be passed to make if needed.
@@ -692,10 +798,10 @@ MODLIB	= $(INSTALL_MOD_PATH)/lib/modules
 export MODLIB
 
 #
-#  INSTALL_MOD_STRIP, if defined, will cause modules to be
-#  stripped after they are installed.  If INSTALL_MOD_STRIP is '1', then
-#  the default option --strip-debug will be used.  Otherwise,
-#  INSTALL_MOD_STRIP value will be used as the options to the strip command.
+# INSTALL_MOD_STRIP, if defined, will cause modules to be
+# stripped after they are installed.  If INSTALL_MOD_STRIP is '1', then
+# the default option --strip-debug will be used.  Otherwise,
+# INSTALL_MOD_STRIP value will be used as the options to the strip command.
 
 ifdef INSTALL_MOD_STRIP
 ifeq ($(INSTALL_MOD_STRIP),1)
@@ -708,6 +814,29 @@ mod_strip_cmd = true
 endif # INSTALL_MOD_STRIP
 export mod_strip_cmd
 
+# Select initial ramdisk compression format, default is gzip(1).
+# This shall be used by the dracut(8) tool while creating an initramfs image.
+#
+INITRD_COMPRESS-y                  := gzip
+INITRD_COMPRESS-$(CONFIG_RD_BZIP2) := bzip2
+INITRD_COMPRESS-$(CONFIG_RD_LZMA)  := lzma
+INITRD_COMPRESS-$(CONFIG_RD_XZ)    := xz
+INITRD_COMPRESS-$(CONFIG_RD_LZO)   := lzo
+INITRD_COMPRESS-$(CONFIG_RD_LZ4)   := lz4
+# do not export INITRD_COMPRESS, since we didn't actually
+# choose a sane default compression above.
+# export INITRD_COMPRESS := $(INITRD_COMPRESS-y)
+
+ifdef CONFIG_MODULE_SIG_ALL
+MODSECKEY = ./signing_key.priv
+MODPUBKEY = ./signing_key.x509
+export MODPUBKEY
+mod_sign_cmd = perl $(srctree)/scripts/sign-file $(CONFIG_MODULE_SIG_HASH) $(MODSECKEY) $(MODPUBKEY)
+else
+mod_sign_cmd = true
+endif
+export mod_sign_cmd
+
 
 ifeq ($(KBUILD_EXTMOD),)
 core-y		+= kernel/ mm/ fs/ ipc/ security/ crypto/ block/
@@ -729,187 +858,23 @@ libs-y1		:= $(patsubst %/, %/lib.a, $(li
 libs-y2		:= $(patsubst %/, %/built-in.o, $(libs-y))
 libs-y		:= $(libs-y1) $(libs-y2)
 
-# Build vmlinux
-# ---------------------------------------------------------------------------
-# vmlinux is built from the objects selected by $(vmlinux-init) and
-# $(vmlinux-main). Most are built-in.o files from top-level directories
-# in the kernel tree, others are specified in arch/$(ARCH)/Makefile.
-# Ordering when linking is important, and $(vmlinux-init) must be first.
-#
-# vmlinux
-#   ^
-#   |
-#   +-< $(vmlinux-init)
-#   |   +--< init/version.o + more
-#   |
-#   +--< $(vmlinux-main)
-#   |    +--< driver/built-in.o mm/built-in.o + more
-#   |
-#   +-< kallsyms.o (see description in CONFIG_KALLSYMS section)
-#
-# vmlinux version (uname -v) cannot be updated during normal
-# descending-into-subdirs phase since we do not yet know if we need to
-# update vmlinux.
-# Therefore this step is delayed until just before final link of vmlinux -
-# except in the kallsyms case where it is done just before adding the
-# symbols to the kernel.
-#
-# System.map is generated to document addresses of all kernel symbols
-
-vmlinux-init := $(head-y) $(init-y)
-vmlinux-main := $(core-y) $(libs-y) $(drivers-y) $(net-y)
-vmlinux-all  := $(vmlinux-init) $(vmlinux-main)
-vmlinux-lds  := arch/$(SRCARCH)/kernel/vmlinux.lds
-export KBUILD_VMLINUX_OBJS := $(vmlinux-all)
-
-# Rule to link vmlinux - also used during CONFIG_KALLSYMS
-# May be overridden by arch/$(ARCH)/Makefile
-quiet_cmd_vmlinux__ ?= LD      $@
-      cmd_vmlinux__ ?= $(LD) $(LDFLAGS) $(LDFLAGS_vmlinux) -o $@ \
-      -T $(vmlinux-lds) $(vmlinux-init)                          \
-      --start-group $(vmlinux-main) --end-group                  \
-      $(filter-out $(vmlinux-lds) $(vmlinux-init) $(vmlinux-main) vmlinux.o FORCE ,$^)
-
-# Generate new vmlinux version
-quiet_cmd_vmlinux_version = GEN     .version
-      cmd_vmlinux_version = set -e;                     \
-	if [ ! -r .version ]; then			\
-	  rm -f .version;				\
-	  echo 1 >.version;				\
-	else						\
-	  mv .version .old_version;			\
-	  expr 0$$(cat .old_version) + 1 >.version;	\
-	fi;						\
-	$(MAKE) $(build)=init
-
-# Generate System.map
-quiet_cmd_sysmap = SYSMAP
-      cmd_sysmap = $(CONFIG_SHELL) $(srctree)/scripts/mksysmap
-
-# Link of vmlinux
-# If CONFIG_KALLSYMS is set .version is already updated
-# Generate System.map and verify that the content is consistent
-# Use + in front of the vmlinux_version rule to silent warning with make -j2
-# First command is ':' to allow us to use + in front of the rule
-define rule_vmlinux__
-	:
-	$(if $(CONFIG_KALLSYMS),,+$(call cmd,vmlinux_version))
-
-	$(call cmd,vmlinux__)
-	$(Q)echo 'cmd_$@ := $(cmd_vmlinux__)' > $(@D)/.$(@F).cmd
-
-	$(Q)$(if $($(quiet)cmd_sysmap),                                      \
-	  echo '  $($(quiet)cmd_sysmap)  System.map' &&)                     \
-	$(cmd_sysmap) $@ System.map;                                         \
-	if [ $$? -ne 0 ]; then                                               \
-		rm -f $@;                                                    \
-		/bin/false;                                                  \
-	fi;
-	$(verify_kallsyms)
-endef
-
-
-ifdef CONFIG_KALLSYMS
-# Generate section listing all symbols and add it into vmlinux $(kallsyms.o)
-# It's a three stage process:
-# o .tmp_vmlinux1 has all symbols and sections, but __kallsyms is
-#   empty
-#   Running kallsyms on that gives us .tmp_kallsyms1.o with
-#   the right size - vmlinux version (uname -v) is updated during this step
-# o .tmp_vmlinux2 now has a __kallsyms section of the right size,
-#   but due to the added section, some addresses have shifted.
-#   From here, we generate a correct .tmp_kallsyms2.o
-# o The correct .tmp_kallsyms2.o is linked into the final vmlinux.
-# o Verify that the System.map from vmlinux matches the map from
-#   .tmp_vmlinux2, just in case we did not generate kallsyms correctly.
-# o If 'make KALLSYMS_EXTRA_PASS=1" was used, do an extra pass using
-#   .tmp_vmlinux3 and .tmp_kallsyms3.o.  This is only meant as a
-#   temporary bypass to allow the kernel to be built while the
-#   maintainers work out what went wrong with kallsyms.
-
-last_kallsyms := 2
-
-ifdef KALLSYMS_EXTRA_PASS
-ifneq ($(KALLSYMS_EXTRA_PASS),0)
-last_kallsyms := 3
-endif
-endif
-
-kallsyms.o := .tmp_kallsyms$(last_kallsyms).o
-
-define verify_kallsyms
-	$(Q)$(if $($(quiet)cmd_sysmap),                                      \
-	  echo '  $($(quiet)cmd_sysmap)  .tmp_System.map' &&)                \
-	  $(cmd_sysmap) .tmp_vmlinux$(last_kallsyms) .tmp_System.map
-	$(Q)cmp -s System.map .tmp_System.map ||                             \
-		(echo Inconsistent kallsyms data;                            \
-		 echo This is a bug - please report about it;                \
-		 echo Try "make KALLSYMS_EXTRA_PASS=1" as a workaround;      \
-		 rm .tmp_kallsyms* ; /bin/false )
-endef
-
-# Update vmlinux version before link
-# Use + in front of this rule to silent warning about make -j1
-# First command is ':' to allow us to use + in front of this rule
-cmd_ksym_ld = $(cmd_vmlinux__)
-define rule_ksym_ld
-	: 
-	+$(call cmd,vmlinux_version)
-	$(call cmd,vmlinux__)
-	$(Q)echo 'cmd_$@ := $(cmd_vmlinux__)' > $(@D)/.$(@F).cmd
-endef
-
-# Generate .S file with all kernel symbols
-quiet_cmd_kallsyms = KSYM    $@
-      cmd_kallsyms = $(NM) -n $< | $(KALLSYMS) \
-                     $(if $(CONFIG_KALLSYMS_ALL),--all-symbols) > $@
-
-.tmp_kallsyms1.o .tmp_kallsyms2.o .tmp_kallsyms3.o: %.o: %.S scripts FORCE
-	$(call if_changed_dep,as_o_S)
-
-.tmp_kallsyms%.S: .tmp_vmlinux% $(KALLSYMS)
-	$(call cmd,kallsyms)
-
-# .tmp_vmlinux1 must be complete except kallsyms, so update vmlinux version
-.tmp_vmlinux1: $(vmlinux-lds) $(vmlinux-all) FORCE
-	$(call if_changed_rule,ksym_ld)
-
-.tmp_vmlinux2: $(vmlinux-lds) $(vmlinux-all) .tmp_kallsyms1.o FORCE
-	$(call if_changed,vmlinux__)
-
-.tmp_vmlinux3: $(vmlinux-lds) $(vmlinux-all) .tmp_kallsyms2.o FORCE
-	$(call if_changed,vmlinux__)
-
-# Needs to visit scripts/ before $(KALLSYMS) can be used.
-$(KALLSYMS): scripts ;
-
-# Generate some data for debugging strange kallsyms problems
-debug_kallsyms: .tmp_map$(last_kallsyms)
-
-.tmp_map%: .tmp_vmlinux% FORCE
-	($(OBJDUMP) -h $< | $(AWK) '/^ +[0-9]/{print $$4 " 0 " $$2}'; $(NM) $<) | sort > $@
-
-.tmp_map3: .tmp_map2
-
-.tmp_map2: .tmp_map1
-
-endif # ifdef CONFIG_KALLSYMS
-
-# Do modpost on a prelinked vmlinux. The finally linked vmlinux has
-# relevant sections renamed as per the linker script.
-quiet_cmd_vmlinux-modpost = LD      $@
-      cmd_vmlinux-modpost = $(LD) $(LDFLAGS) -r -o $@                          \
-	 $(vmlinux-init) --start-group $(vmlinux-main) --end-group             \
-	 $(filter-out $(vmlinux-init) $(vmlinux-main) FORCE ,$^)
-define rule_vmlinux-modpost
-	:
-	+$(call cmd,vmlinux-modpost)
-	$(Q)$(MAKE) -f $(srctree)/scripts/Makefile.modpost $@
-	$(Q)echo 'cmd_$@ := $(cmd_vmlinux-modpost)' > $(dot-target).cmd
-endef
-
-# vmlinux image - including updated kernel symbols
-vmlinux: $(vmlinux-lds) $(vmlinux-init) $(vmlinux-main) vmlinux.o $(kallsyms.o) FORCE
+# Externally visible symbols (used by link-vmlinux.sh)
+export KBUILD_VMLINUX_INIT := $(head-y) $(init-y)
+export KBUILD_VMLINUX_MAIN := $(core-y) $(libs-y) $(drivers-y) $(net-y)
+export KBUILD_LDS          := arch/$(SRCARCH)/kernel/vmlinux.lds
+export LDFLAGS_vmlinux
+# used by scripts/pacmage/Makefile
+export KBUILD_ALLDIRS := $(sort $(filter-out arch/%,$(vmlinux-alldirs)) arch Documentation include samples scripts tools virt)
+
+vmlinux-deps := $(KBUILD_LDS) $(KBUILD_VMLINUX_INIT) $(KBUILD_VMLINUX_MAIN)
+
+# Final link of vmlinux
+      cmd_link-vmlinux = $(CONFIG_SHELL) $< $(LD) $(LDFLAGS) $(LDFLAGS_vmlinux)
+quiet_cmd_link-vmlinux = LINK    $@
+
+# Include targets which we want to
+# execute if the rest of the kernel build went well.
+vmlinux: scripts/link-vmlinux.sh $(vmlinux-deps) FORCE
 ifdef CONFIG_HEADERS_CHECK
 	$(Q)$(MAKE) -f $(srctree)/Makefile headers_check
 endif
@@ -919,22 +884,11 @@ endif
 ifdef CONFIG_BUILD_DOCSRC
 	$(Q)$(MAKE) $(build)=Documentation
 endif
-	$(call vmlinux-modpost)
-	$(call if_changed_rule,vmlinux__)
-	$(Q)rm -f .old_version
-
-# build vmlinux.o first to catch section mismatch errors early
-ifdef CONFIG_KALLSYMS
-.tmp_vmlinux1: vmlinux.o
-endif
-
-modpost-init := $(filter-out init/built-in.o, $(vmlinux-init))
-vmlinux.o: $(modpost-init) $(vmlinux-main) FORCE
-	$(call if_changed_rule,vmlinux-modpost)
+	+$(call if_changed,link-vmlinux)
 
-# The actual objects are generated when descending, 
+# The actual objects are generated when descending,
 # make sure no implicit rule kicks in
-$(sort $(vmlinux-init) $(vmlinux-main)) $(vmlinux-lds): $(vmlinux-dirs) ;
+$(sort $(vmlinux-deps)): $(vmlinux-dirs) ;
 
 # Handle descending into subdirectories listed in $(vmlinux-dirs)
 # Preset locale variables to speed up the build process. Limit locale
@@ -946,10 +900,13 @@ PHONY += $(vmlinux-dirs)
 $(vmlinux-dirs): prepare scripts
 	$(Q)$(MAKE) $(build)=$@
 
-# Store (new) KERNELRELASE string in include/config/kernel.release
+define filechk_kernel.release
+	echo "$(KERNELVERSION)$$($(CONFIG_SHELL) $(srctree)/scripts/setlocalversion $(srctree))"
+endef
+
+# Store (new) KERNELRELEASE string in include/config/kernel.release
 include/config/kernel.release: include/config/auto.conf FORCE
-	$(Q)rm -f $@
-	$(Q)echo "$(KERNELVERSION)$$($(CONFIG_SHELL) $(srctree)/scripts/setlocalversion $(srctree))" > $@
+	$(call filechk,kernel.release)
 
 
 # Things we need to do before we recursively start building the kernel
@@ -968,8 +925,8 @@ prepare3: include/config/kernel.release
 ifneq ($(KBUILD_SRC),)
 	@$(kecho) '  Using $(srctree) as source for kernel'
 	$(Q)if [ -f $(srctree)/.config -o -d $(srctree)/include/config ]; then \
-		echo "  $(srctree) is not clean, please run 'make mrproper'";\
-		echo "  in the '$(srctree)' directory.";\
+		echo >&2 "  $(srctree) is not clean, please run 'make mrproper'"; \
+		echo >&2 "  in the '$(srctree)' directory.";\
 		/bin/false; \
 	fi;
 endif
@@ -977,7 +934,7 @@ endif
 # prepare2 creates a makefile if using a separate output directory
 prepare2: prepare3 outputmakefile asm-generic
 
-prepare1: prepare2 include/linux/version.h include/generated/utsrelease.h \
+prepare1: prepare2 $(version_h) include/generated/utsrelease.h \
                    include/config/auto.conf
 	$(cmd_crmodverdir)
 
@@ -1005,12 +962,12 @@ define filechk_utsrelease.h
 endef
 
 define filechk_version.h
-	(echo \#define LINUX_VERSION_CODE $(shell                             \
-	expr $(VERSION) \* 65536 + 0$(PATCHLEVEL) \* 256 + 0$(SUBLEVEL));    \
+	(echo \#define LINUX_VERSION_CODE $(shell                         \
+	expr $(VERSION) \* 65536 + 0$(PATCHLEVEL) \* 256 + 0$(SUBLEVEL)); \
 	echo '#define KERNEL_VERSION(a,b,c) (((a) << 16) + ((b) << 8) + (c))';)
 endef
 
-include/linux/version.h: $(srctree)/Makefile FORCE
+$(version_h): $(srctree)/Makefile FORCE
 	$(call filechk,version.h)
 
 include/generated/utsrelease.h: include/config/kernel.release FORCE
@@ -1055,7 +1012,7 @@ PHONY += archscripts
 archscripts:
 
 PHONY += __headers
-__headers: include/linux/version.h scripts_basic asm-generic archheaders archscripts FORCE
+__headers: $(version_h) scripts_basic asm-generic archheaders archscripts FORCE
 	$(Q)$(MAKE) $(build)=scripts build_unifdef
 
 PHONY += headers_install_all
@@ -1064,10 +1021,10 @@ headers_install_all:
 
 PHONY += headers_install
 headers_install: __headers
-	$(if $(wildcard $(srctree)/arch/$(hdr-arch)/include/asm/Kbuild),, \
-	$(error Headers not exportable for the $(SRCARCH) architecture))
-	$(Q)$(MAKE) $(hdr-inst)=include
-	$(Q)$(MAKE) $(hdr-inst)=arch/$(hdr-arch)/include/asm $(hdr-dst)
+	$(if $(wildcard $(srctree)/arch/$(hdr-arch)/include/uapi/asm/Kbuild),, \
+	  $(error Headers not exportable for the $(SRCARCH) architecture))
+	$(Q)$(MAKE) $(hdr-inst)=include/uapi
+	$(Q)$(MAKE) $(hdr-inst)=arch/$(hdr-arch)/include/uapi/asm $(hdr-dst)
 
 PHONY += headers_check_all
 headers_check_all: headers_install_all
@@ -1075,8 +1032,8 @@ headers_check_all: headers_install_all
 
 PHONY += headers_check
 headers_check: headers_install
-	$(Q)$(MAKE) $(hdr-inst)=include HDRCHECK=1
-	$(Q)$(MAKE) $(hdr-inst)=arch/$(hdr-arch)/include/asm $(hdr-dst) HDRCHECK=1
+	$(Q)$(MAKE) $(hdr-inst)=include/uapi HDRCHECK=1
+	$(Q)$(MAKE) $(hdr-inst)=arch/$(hdr-arch)/include/uapi/asm $(hdr-dst) HDRCHECK=1
 
 # ---------------------------------------------------------------------------
 # Modules
@@ -1087,11 +1044,11 @@ ifdef CONFIG_MODULES
 
 all: modules
 
-#	Build modules
+# Build modules
 #
-#	A module can be listed more than once in obj-m resulting in
-#	duplicate lines in modules.order files.  Those are removed
-#	using awk while concatenating to the final file.
+# A module can be listed more than once in obj-m resulting in
+# duplicate lines in modules.order files.  Those are removed
+# using awk while concatenating to the final file.
 
 PHONY += modules
 modules: $(vmlinux-dirs) $(if $(KBUILD_BUILTIN),vmlinux) modules.builtin
@@ -1120,10 +1077,10 @@ _modinst_:
 	@rm -rf $(MODLIB)/kernel
 	@rm -f $(MODLIB)/source
 	@mkdir -p $(MODLIB)/kernel
-	@ln -s $(srctree) $(MODLIB)/source
+	@ln -s `cd $(srctree) && /bin/pwd` $(MODLIB)/source
 	@if [ ! $(objtree) -ef  $(MODLIB)/build ]; then \
 		rm -f $(MODLIB)/build ; \
-		ln -s $(objtree) $(MODLIB)/build ; \
+		ln -s $(CURDIR) $(MODLIB)/build ; \
 	fi
 	@cp -f $(objtree)/modules.order $(MODLIB)/
 	@cp -f $(objtree)/modules.builtin $(MODLIB)/
@@ -1137,17 +1094,23 @@ _modinst_post: _modinst_
 	$(Q)$(MAKE) -f $(srctree)/scripts/Makefile.fwinst obj=firmware __fw_modinst
 	$(call cmd,depmod)
 
+ifeq ($(CONFIG_MODULE_SIG), y)
+PHONY += modules_sign
+modules_sign:
+	$(Q)$(MAKE) -f $(srctree)/scripts/Makefile.modsign
+endif
+
 else # CONFIG_MODULES
 
 # Modules not configured
 # ---------------------------------------------------------------------------
 
 modules modules_install: FORCE
-	@echo
-	@echo "The present kernel configuration has modules disabled."
-	@echo "Type 'make config' and enable loadable module support."
-	@echo "Then build a kernel with module support enabled."
-	@echo
+	@echo >&2
+	@echo >&2 "The present kernel configuration has modules disabled."
+	@echo >&2 "Type 'make config' and enable loadable module support."
+	@echo >&2 "Then build a kernel with module support enabled."
+	@echo >&2
 	@exit 1
 
 endif # CONFIG_MODULES
@@ -1161,15 +1124,15 @@ endif # CONFIG_MODULES
 
 # Directories & files removed with 'make clean'
 CLEAN_DIRS  += $(MODVERDIR)
-CLEAN_FILES +=	vmlinux System.map \
-                .tmp_kallsyms* .tmp_version .tmp_vmlinux* .tmp_System.map
 
 # Directories & files removed with 'make mrproper'
 MRPROPER_DIRS  += include/config usr/include include/generated          \
-                  arch/*/include/generated
-MRPROPER_FILES += .config .config.old .version .old_version             \
-                  include/linux/version.h                               \
-		  Module.symvers tags TAGS cscope* GPATH GTAGS GRTAGS GSYMS
+		  arch/*/include/generated .tmp_objdiff
+MRPROPER_FILES += .config .config.old .version .old_version $(version_h) \
+		  Module.symvers tags TAGS cscope* GPATH GTAGS GRTAGS GSYMS \
+		  signing_key.priv signing_key.x509 x509.genkey		\
+		  extra_certificates signing_key.x509.keyid		\
+		  signing_key.x509.signer include/linux/version.h
 
 # clean - Delete most, but leave enough to build external modules
 #
@@ -1177,11 +1140,14 @@ clean: rm-dirs  := $(CLEAN_DIRS)
 clean: rm-files := $(CLEAN_FILES)
 clean-dirs      := $(addprefix _clean_, . $(vmlinux-alldirs) Documentation samples)
 
-PHONY += $(clean-dirs) clean archclean
+PHONY += $(clean-dirs) clean archclean vmlinuxclean
 $(clean-dirs):
 	$(Q)$(MAKE) $(clean)=$(patsubst _clean_%,%,$@)
 
-clean: archclean
+vmlinuxclean:
+	$(Q)$(CONFIG_SHELL) $(srctree)/scripts/link-vmlinux.sh clean
+
+clean: archclean vmlinuxclean
 
 # mrproper - Delete all generated files, including .config
 #
@@ -1205,15 +1171,14 @@ distclean: mrproper
 	@find $(srctree) $(RCS_FIND_IGNORE) \
 		\( -name '*.orig' -o -name '*.rej' -o -name '*~' \
 		-o -name '*.bak' -o -name '#*#' -o -name '.*.orig' \
-		-o -name '.*.rej' \
-		-o -name '*%' -o -name '.*.cmd' -o -name 'core' \) \
+		-o -name '.*.rej' -o -name '*%'  -o -name 'core' \) \
 		-type f -print | xargs rm -f
 
 
 # Packaging of the kernel to various formats
 # ---------------------------------------------------------------------------
 # rpm target kept for backward compatibility
-package-dir	:= $(srctree)/scripts/package
+package-dir	:= scripts/package
 
 %src-pkg: FORCE
 	$(Q)$(MAKE) $(build)=$(package-dir) $@
@@ -1259,6 +1224,7 @@ help:
 	@echo  '  gtags           - Generate GNU GLOBAL index'
 	@echo  '  kernelrelease	  - Output the release version string'
 	@echo  '  kernelversion	  - Output the version stored in Makefile'
+	@echo  '  image_name	  - Output the image name'
 	@echo  '  headers_install - Install sanitised kernel headers to INSTALL_HDR_PATH'; \
 	 echo  '                    (default: $(INSTALL_HDR_PATH))'; \
 	 echo  ''
@@ -1412,6 +1378,7 @@ clean: $(clean-dirs)
 	$(call cmd,rmfiles)
 	@find $(if $(KBUILD_EXTMOD), $(KBUILD_EXTMOD), .) $(RCS_FIND_IGNORE) \
 		\( -name '*.[oas]' -o -name '*.ko' -o -name '.*.cmd' \
+		-o -name '*.ko.*' \
 		-o -name '.*.d' -o -name '.*.tmp' -o -name '*.mod.c' \
 		-o -name '*.symtypes' -o -name 'modules.order' \
 		-o -name modules.builtin -o -name '.tmp_*.o.*' \
@@ -1452,7 +1419,7 @@ export_report:
 endif #ifeq ($(config-targets),1)
 endif #ifeq ($(mixed-targets),1)
 
-PHONY += checkstack kernelrelease kernelversion
+PHONY += checkstack kernelrelease kernelversion image_name
 
 # UML needs a little special treatment here.  It wants to use the host
 # toolchain, so needs $(SUBARCH) passed to checkstack.pl.  Everyone
@@ -1473,6 +1440,18 @@ kernelrelease:
 kernelversion:
 	@echo $(KERNELVERSION)
 
+image_name:
+	@echo $(KBUILD_IMAGE)
+
+# Clear a bunch of variables before executing the submake
+tools/: FORCE
+	$(Q)mkdir -p $(objtree)/tools
+	$(Q)$(MAKE) LDFLAGS= MAKEFLAGS="$(filter --j% -j,$(MAKEFLAGS))" O=$(objtree) subdir=tools -C $(src)/tools/
+
+tools/%: FORCE
+	$(Q)mkdir -p $(objtree)/tools
+	$(Q)$(MAKE) LDFLAGS= MAKEFLAGS="$(filter --j% -j,$(MAKEFLAGS))" O=$(objtree) subdir=tools -C $(src)/tools/ $*
+
 # Single targets
 # ---------------------------------------------------------------------------
 # Single targets are compatible with:
@@ -1522,7 +1501,7 @@ endif
 	$(build)=$(build-dir) $(@:.ko=.o)
 	$(Q)$(MAKE) -f $(srctree)/scripts/Makefile.modpost
 
-# FIXME Should go into a make.lib or something 
+# FIXME Should go into a make.lib or something
 # ===========================================================================
 
 quiet_cmd_rmdirs = $(if $(wildcard $(rm-dirs)),CLEAN   $(wildcard $(rm-dirs)))
@@ -1534,21 +1513,13 @@ quiet_cmd_rmfiles = $(if $(wildcard $(rm
 # Run depmod only if we have System.map and depmod is executable
 quiet_cmd_depmod = DEPMOD  $(KERNELRELEASE)
       cmd_depmod = $(CONFIG_SHELL) $(srctree)/scripts/depmod.sh $(DEPMOD) \
-                   $(KERNELRELEASE)
+                   $(KERNELRELEASE) "$(patsubst y,_,$(CONFIG_HAVE_UNDERSCORE_SYMBOL_PREFIX))"
 
 # Create temporary dir for module support files
 # clean it up only when building all modules
 cmd_crmodverdir = $(Q)mkdir -p $(MODVERDIR) \
                   $(if $(KBUILD_MODULES),; rm -f $(MODVERDIR)/*)
 
-a_flags = -Wp,-MD,$(depfile) $(KBUILD_AFLAGS) $(AFLAGS_KERNEL) \
-	  $(KBUILD_AFLAGS_KERNEL)                              \
-	  $(NOSTDINC_FLAGS) $(LINUXINCLUDE) $(KBUILD_CPPFLAGS) \
-	  $(modkern_aflags) $(EXTRA_AFLAGS) $(AFLAGS_$(basetarget).o)
-
-quiet_cmd_as_o_S = AS      $@
-cmd_as_o_S       = $(CC) $(a_flags) -c -o $@ $<
-
 # read all saved command lines
 
 targets := $(wildcard $(sort $(targets)))
Only in ./: mininet
Only in /home/build_kernel: mm
Only in /home/build_kernel: modules
Only in /home/build_kernel: net
Only in ./: patch_description.md
Only in /home/build_kernel: README
Only in ./: README.md
Only in /home/build_kernel: REPORTING-BUGS
Only in /home/build_kernel: rootfs
Only in /home/build_kernel: samples
Only in /home/build_kernel: scripts
Only in /home/build_kernel: security
Only in /home/build_kernel: sound
Only in ./: syscall_wrapper
Only in ./: test_virtual_time
Only in ./: test_vtmininet
Only in /home/build_kernel: tools
Only in /home/build_kernel: usr
Only in /home/build_kernel: virt
Only in ./: virtual_time_module
Only in ./: VirtualTime.patch
