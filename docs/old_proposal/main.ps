%!PS-Adobe-2.0
%%Creator: dvips(k) 5.995 Copyright 2015 Radical Eye Software
%%Title: main.dvi
%%CreationDate: Sun Feb 12 17:20:39 2017
%%Pages: 2
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: NimbusSanL-Bold NimbusSanL-Regu NimbusRomNo9L-Medi CMR9
%%+ NimbusRomNo9L-Regu CMR8 CMSY9 CMBX9 CMTI9
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -t letter main.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2017.02.12:1720
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 919 2014-05-19 18:42:47Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.23, 2014/07/31
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def

%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 919 2014-05-19 18:42:47Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 801 2013-07-09 18:10:41Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not aload!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def/BorderArrayPatch{[exch{dup
dup type/integertype eq exch type/realtype eq or{BPToDvips}if}forall]}def/HyperBorder
{1 PDFToDvips} def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx
pdf@lly pdf@urx pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly
exch def dup DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx
exch def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def
 
@fedspecial end
%%BeginFont: CMTI9
%!PS-AdobeFont-1.0: CMTI9 003.002
%%Title: CMTI9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTI9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTI9 known{/CMTI9 findfont dup/UniqueID known{dup
/UniqueID get 5000827 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTI9 def
/FontBBox {-35 -250 1148 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTI9.) readonly def
/FullName (CMTI9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 38 /ampersand put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 58 /colon put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 79 /O put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 86 /V put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943DE1B57C50F9043B95BDF77C
1450E422362CCD41FB4AF30F73B66A85AC8DDEAFA65B4FCF0033D034E111830C
ACB981C2AC41AC32863D02E6D9CA81F8D407DE4AB20B4CB6418B8067D694DA02
6E76FF50A7197281B7E8E700C4A8824220374DE1CA077D50A8B751391E35FAAE
E0AB0604164A16D476EDD5E33B08639DCA14796F27A20EAA52D0BD8B61065AAD
083E4AAF626C2575C56F87AAC636FDC2E5ABF623F2D916D3CF5CE8703D297151
0A664F40B144A2F3900D053B709210AB8678EF35301AEF3696CF17A5B41B588F
539243F32FD78B62A0D80B17F1028CBD7234BA7513A4809B584092B95583CF1B
664929C33846E8F59A43220F79D8BE0DA051D17D09C1E9DBA6C60BCF99BAE773
3E9439791901546793B3CDF014E6AD9AA169483DB87A6CE4104A8B25AC117504
8D6DF6052EF491D510F67D730CA315915E77290A40D3F8EB8F004114BB64C5EE
9F1E18A47A785A04D4EE3FCEA794EB3438CBCAE35242782053277EFD6B67F6AF
97D892DA958EDBFAFDDEBEAC4451EF8E00D6D0E7E60C112F74999096428AFC5F
507D0DEAC778A81F8F47FBB1FD8C22FD22DF2AD0C9BDEFF2633F180E0186A9AB
B0680E661CF083B8DC5635D7DBD69A17E6BF1E86F7C19FF7E48EAE8D35F0B698
F990DC16CAE9D6E9D1C323FDD183096BE0EF3BCE379CE5E5CB0F58E4516C01B1
55004C20A6F2BF430D59368AD4F6D398B9A27B89DBCF70BB8A36AA24496CA621
0D28748646257C95B113209FA00B4525C582A8B223C64B658DA11CA08CB64F12
8BF230A57B4DC2FD0AA8C486D7B151C9713B12ABDF174ABDF52EC8034B0858CC
6D389B503A320AE42AF3BBE33135032FE83E6B7AE0D713BA6A56230A50C22FB8
597A5F21CDF98D70423E8AF8E3CBCE4756DEB5695D3A5E7C47E6EE62F4D06BC6
C9978DEFFF773BA6CB9B92D2B2638FA3A1D92806EAF9A9A9D6DE09D81FBD8622
AA7AE1FE01A1390427D270287D4A436A544D4F568640100F94518C113CCAA34B
28791F62F1C5B6207165A847AE2A9F1E3AF8B96203DDAEC2AF8F3450CA2FFB5D
E55DA538F39D6A5F13963857E2CE6D75E510E8287D4DDFE5FF5CDCC0FF51E346
B8717B28181DC56315751FC861DE7CAFECE8E350CECE6B324879ABC8D8206ED7
51D1D299BACD2F7F6EC2F8D3836EED6CCF09C205A7A76B82FE1AAFE0833C7693
FC7E22D373C10C34BC0B57382312646763F593AA91D90F6CBDB096CAF9F52C12
CB6E75237566C5D528DB58B92D0C7E16D6BB2D097C1FE565A07076209AC4DEE2
BB6147D06D65F403B6919D65D1C3D9D0FFFC0CEA7FE0EE002AA0EFBFC120A724
CCE85B3419C44ED7216E4C714FC85F72CA933D3707D2EDC6AC02335D4770B48E
0B64716C0E1B9DC8A4DA1BCF7B47FE7B37F9630E55E9868AD41AC770C5036E78
4D8B24AF41E90CE8358F97CCC43295371B73EF7E86BD1647EAB2E493EE912F74
EBDBB5CAC34EC1044114FDFEEE2FA8E3574F4D1E3EFB38C3BCDC341A0E53044C
0A19D619CB789E8C10100E413B8057373E6D77709B8019841DF04C8B27700FA8
B21E2955C9ADD9CBCECB52727BFF0E48029D46C695028CB3A7EA779EA69C8763
2BA38F274B4217F4D5C942042ABC9E4C1627D63C0BA9B1E03E9E3C7C8CB2812F
503564C0C02A6F2041D4CD59BFD6E465CD060D655C38FC5499F06E0323A4F359
37061EA5248B3AD809D16446E67B0267A3A929FBEB0A93DFEFEA3E8D5B7C564B
95AA458F532CBA8770DD90AE6D3A0BED3BA140A4AB6261CE41967038861D947F
20BCD353B32618537EACA0F1CA5C2708D67D46B6F9B6D4F12081485AF0699628
05AE00F008AA816DB07710E06AE2DBFA830C34851E5C63A7E9E02404ADF1DCA7
2185507F0CEAF858389E4F8DC3A1283FBEC373FB4A1720BA71F993D432425C2E
D0FB5A6FBC1E1904B959838FCCD085AF1778A5E3EF29166C6660B797C8ADAFF7
1EEDE9BD371E11CEE77D70008706E0BF2B6DA250F9C6A92BF91ADB7D32CA17D9
776CE695179FC5D1686E86E2B4C3E34D2741CDA86C0F343E7CDD52AD3059A8C8
134C7DAE20076E5EE5990CC56EF8AF66131243212C40480BBFDEA97FE0558ED5
7AECD669BA1AD9A50F1C0B21D75AD5A11FF9F577153C12F9789EDDF81FB683B1
F66244F6FB2DC1FF2B3BC8CDC6990E6C4CB835E552E2AC9A7540DDCFAD1F931C
44815C59118C7EB3C4CED4DE0D45C311D69576D5E6DAE9DF8265EC6E566DDBA7
22655E765C074082F346AB496F08F4E598D6D35472629273128157FA8608DD96
0CC4A3B97B430B1DF8EA4851CD54E742AC0170215F86D4612129F2CC3874D047
F485BE77D2FF57B8899E1E667D41E519948F0E60C5247F5483D20CB108BDDDA4
27F15C14A35FDC3CEA924E051D711D8D4EE36E7735E6DB443DBBD000A4CE0635
2727EF9C1AFC95E876A46FE001EFF903D64A2C1F00D734D32FF4A6C8E3956DF5
5E676815AA165DAA9E0AF2D56EFFF32BEC9897F45E40909F2F39BAF85A354420
5E6CBBC6626B98FF1A9BCC1F76D9AB0348C8E7540E42EEF3F3351006CDBFEB01
0FED065EBE147B5E36BB659D6AA429E6BF8121F147554BC0959E6F45C6990AE4
66A74CEBDEDD67A559C3E4937F50D3B51E7DACCA53A2DB98306E7AA86D21977A
A4CB7592590C94C8479530239945471408FA1F774CAD14F58AFFB59D8CE596B0
8DDC2E8CEAC94156D5FC69D70F2F779774503F168C48594C63F3180E8C93F423
7F1F1D44CCC5E5F766D7BECC470F880611C545FB3F4C0E171A30516DBD6477C6
2C478B4E3C2AC2241C68124C4570D476B1A18E7D093C97D16999E06CC1C8C485
15AFA4836718A40733ED145DFA4B80D3FC3AA074665316786E65706DA958BB71
67A4EE35FA629FE738CEC51D4F51431BCF8B14804F2C83453566253847077644
257AFB4D3D13CE77C9CD592F6C913F5AA3064E88779966EDCA52B2D9469FE48A
C8F6E5036AC9B0671508DA664E3F24BCE551D22434DBDF58196254D7D2C7C308
1A6822F2F21BDAE029F7F776C1FA7BA9CD94CA7D919B4E7BCB9B885FD767CD9E
96CC1604B95F0A8715837D7C27BBA08663FBC0DA33C2962577451DB48A4B76F4
8A4B66E7D2A2E465789D1E6B6D5F20413D84A47E5788CFA97BE43ED05FA176B1
F535C65F8FE60C72BE326737154602688AB71A8F12622648031414AB80C46289
1EAE582B933C87122DBDF3E3F1C4F4F5175E88AD0EC90B33CFC13DA07CBE8C49
EB1E86E0DCA68AF0BE3814595A4B2A4113FC8654A032BF00DAE293B4F2CCECC6
C0E804B658720C67DC156B4785D9A15274F2BF38748FAC7936275CDF42915CBD
FB21A739B80CE81B3897539492F113D589DA8A6C7B38621C8354625DC8B40FC0
7CFF21FD2D09E41AC9E99CB18FB9C92BB735C16FDEE7A8BB75A2258E76195AD2
1A88B0D64C130BE88CB2FEE3C723A46516DCE8DC6692EE27C6D8469FF511B7EA
F1B7EBA054708112981C79CFDCDD40BC55A1778FB3FDFC0AAA7EDC425FC2938D
694802705011B724423608C7BC1E803D344C9B5BDE13005D06C3F27DE0371EA4
0F836D5C0D6C0BE2D27700B08ABD09783D329EDD00415387C97C04F89607DCAB
62463E6A37E36C3A1CD92158353D45B443428177D1AE501F1CC0B50C100166B2
98C4824CAD58B3A396D097E2850B39130E743CF3CF59259A174586B9361D8F23
6DFDDAAC5B40CBA0495A3971399A95BAAC66CE5B472669E2C31ED0F2BE60E787
503EB379D332055EBF839B25802E076B1BA8DE3EC59782335AC80D1CB950948A
5EEA00C5F5829EB5293E05B982032207D41DDA035B3CAF26802A61751B17D0E5
170C99F6A0EE0EABB1576814EC3B4317A89C7F11022A0695FA3C2B2B80A2F73F
6A3FBD3A2B8C4820E7705CCEE368CE580434F3EBD2E9DBC162CB482278531546
74355C299E321C47D1C4C6D48C5100A4B8B2A16DD422AC3365B37A79D936FB24
786E9AD00E8E2666438B096BEF243BEC5C1AE35A9612D08CF7776E458265FC58
0D67659A4D5AB175ADB10F662536C8A9447DCF5173E620320A43B2AA5D5B5C34
78265F88656D2125C6E694AE4750193B05ED2A6DB4CD5A81E48B9912E25710DF
C66A0FCB7920479DBBF739D4BC746BB03C2F1FF89288DD807E805957EFB929CB
248F64A431C995F0300C0F836EBE1678C28DEA1F45034A4057520D17A25180A8
693BB0FE3FE6308A332A7E54A674B497471E2D13756CB0B991C4A4F9F4851A9C
49DDFB13416722223559BF7BBE8F1499BC93DC8BAC757E42E25369B182811ABC
FE4F1CBA5E5BC15ACB6344EBC575C2F443A508A46ADDEBF7C34D88702FE46A8E
D96C91AEA3EB989909A2B22E86FA80721E68A1385239B4883DC065A0C08ECCB3
693B0D13CA411A78C13BEE866D8AF8A634B81283B77FF62EEF25C5D48CCB10DB
BFA10E3066C116662395A6AF0B71D23C4047EE0352F4E02CCF28F959FD4394EF
43F0761B73B8D726B69D5111CF94B720D461E0AE42C974F2EDA6F7883BCC35FD
093304225534D8043D934772B0FEEE6427D0481A6CD8BD614669B875E1DCC6E8
EC423D9A0DA290D8571E97CB6CAEF274DF823767AF4E0576588CF2ADC239FDC6
437910EC0C2F01B4DC773E73C7FDE6E37D3E784E0E5B655600FBF3FBCC1FDCB4
CF356017BE2A663DD7983A46482A4C1B42A067381D58AB1B332CAB8E5C83FC78
1F0D9DBACEAAD372991BE3074D9911CBAA95E776008644F203D6B2EEAAFCDC57
C53DE48816934BF9D70F90F4186F6268522D260512492305533C1B0FB23D4726
6ACE20B872517CA01EF5EE275CCDC3BFE45C19FF225550E4E73B15E9BEE3CF21
1594CC1773CDAF0C659F3EDC2EA43C25D00AA68DA8D39DC46A1676099496DFD7
1155BCBC439742A80EC917BDB6E7593639CF1217C0265BA3183209DDDAF50E71
FA061C8978583D93EBD97C70A890230AA7123947B197E9536F0DA91373DECFD9
BD4E1C12B086B12077EBA19BA50B786AAE9244C60020F406AFF705CF029B43E8
D70CDD5DC7A61A75858E03657264392D9CAEA8C515DD98C2CB9E84BDBC6A62D2
36CA59D774BD889D64E6C9A0E043D04744D3D807D3A1B1B25266F0D9953266DC
662424A93FFEF40F47097F48D1904A1CC00030155AA3D9B07D281E055E6D033D
745856D9465D7349797A07396AE9026EE96DB8BAAA081D64EE4D86ADD8C4D1C1
CE8EDA25CF3242047E18E4C9870320052ADF3EA543D32E6EDC93264DCC2E5A1F
458369CC5CD73DDE165D5BF594C81FC992F35DF29A57464A0C6D72D5E7A92535
3CA14943640A67B23935409206FAAA6A11F598BE24373E7BF54A2B3C34551080
1B4DB4E3135AD0B61CB1C12A5154013E11B33393A1C16D74B16BB4D8E7B893FA
E6AA0C843BA5DC50FBE07407D8B16ED2963E36D021EB433609053BD19ACA31AC
53B1360A48F71D972E669D5357C22A33A7211F3380DF41069AFC7ABCB3300D72
FA1E9D6F2291E147988003554D2DCE165B5F316A390500D0273E83453381B13A
95D6E6F3300F36155573B8FB32A1691F6A9AAFC39541BAE0A4153C9F6B181B89
43D246EFEB5A2B5F66FC60A44E2E1A6D972C53B1E930CAA18A5B58820D8D2EF6
C1E798E9B744A31FB980C77D36728AEE6E682EA668F32E0C3EC70BCADC32A8D9
A2597F1A4AB9565FEE420056E8A8B0004C006AD981E94A84CB30ED6FC9642D65
0FADC7C9950BD962E0D86543EED6DE476E29A525183E52A8C97769E2FBC4149C
53A13C54341A9F554F0178211FA1E4731BFB84C11E6B776335F1F42864C70E9F
4C3F71F7DED7FB704A05FAEF7A2186B2C9C2AE9A3BEA55EC7F3334699BCD3D70
A675D3D1EBD9958BFE62267CAC06FA97421994C17D60879D8B847B39D5379B2C
079AD7BDB6FDDC56106127147297932F788184B0BBBEA5657DC92E4D6B097F30
97149A14677113EC8929C69FC93CCE56C068C015F46029110C7DB91DFE31E06C
CBB475E860D068ED6BE3B15B5C6F6F0D1D5FE6E7E4E47392C46FAA9CE932F928
FF628944653962EBFE4EE5AF7522BACB33ED77387B0247C146B81F7A860B84D0
D372252C89556DABA34913010DBA3576A6E13E3A184CD18D53FC758DDA762338
AF195F1F261D5F10AE0E733ECB98BA2F81F7B456A75D862C69D623CBDC50BE99
E3D1ED35ED4AEBD6CE39723F459AD508863C020FEE61980A17D41BBE0A54E120
1EB69BE8C1198663596A3678F11BB8F28D7BF5F713AAF61866B6C172EAD9D25F
02289C719F2C121A09DE6D8E47001FA41002DE821E739567F5D45F5C65D2A0D2
65D011472F8AA705C7BC3E0580BF4E2E007EA98AEAF9AFD2F25FB20B08EE26E2
E8F94A39F6240409F44E85FFAC9A46A2EA23A5A5F8BB0DBE50A7A1A9A6034D32
B777C38B88F25D392E59AFEC304C13CB1407C70B7DEC884B5B7AC97440CC198A
A949ABBCBABD1442C67E1828CE582D77F616A49BA12BD006CD541F707ED05737
FEDED2D912D3C1083AA726C21C396EC6A36EB6B9219F2BE7EF62D09E487B3FD0
9748121C531F7CD54DD98622C4C945E5B04ED2FD66D20873BB42C5391627B074
7DF90B81ECC6AA0743F25247978CC09C28C4F878E29A5070E4023BCE95FE0ACC
CC01D0EE219FA8344E8F6D7D43475678DEC28FCA370A417D2192DD293B13E507
F20AEEC2B825BD73A6678698858CC4B3DFA40DC96536735CFBBC2CEB5CA6A396
C8D387BCB4D6031DD45563921409C33F3BFFE220D7A255AD2B422AC9DDFE7A13
AFFAE4D39E8F285A4877D1FD83FF8BB9BAAD29C4C4DC7CEEB139D4CC253859B7
24221EBA02F074C94543E32176588F50D0ABB9B0AB449E21E01377E96A487B39
E45385A6A12DE9067750598BD5A12DEE276612012DC4226B14B0B289C9C8EB08
49B5FBCA42865EE9ADECA117AF8B2BE60A2F825F51B3FF32DE769AF8A9F0708D
7BA0C614E8B1CAFB429B6407B3BDB582FC49D3794A0BA6932824A1FE44429731
5F1C8D2DEE93EFEE11C29B1C020196EEC515336D8FD1FBD73FA4F2B454066970
1657B1EF286BB2DE8E5ACBBF40C992F9A22255B3D842E68346CF43C568E1DC7E
389CB45E387321424D7950AD8834BA43A128309ACFB55FA8D30C0A4E13A06862
0BA93765AD3744B7F0502EFE5D457D7CA7E988968EF34E2AEF0D1C5C1252BA48
E4AFEBD828CD1DCB34738801458A8E4F9970DFDDF7973961E756ED7DAD161736
0F774F441671DB46F07E28F57A1EC5FAFA529685CC5D419FA0ADDF1030B3F21F
AF395EF405CFC8FDD30B79B80CFC1708602680E9985C38474971F5A24FD0C415
CAF1F98938F27BB1C805F0617DFB86783BE6F3AE6265DE523D2781E94B042D16
36DCBA12FAC0BA0B2CAB48F31FE24BCC5B032D3987DE21BE7E191D578E9E5644
81BC38C95513F04C8F1BB7DD82DA3909DC75CD509C0A5EF8226E0EAC4BAD4D64
FD2D6BD98699B1B147B03FB3235F4F16F367D9EF10EEEF02093C40B9C6905716
E43CBE3B6814EC7DC6358B72A2DBDB3A22F65E1B9CDDD4A639ED9FF36E021E07
F5C45A74E31E755CD1F75CD2432D2E369537D3D738D643624E43CB52A1675A2A
2501397B11A902B26BFA828E9A744AB40CE3C143C758C6969350BA53BB8CDE8C
B21FF1336AAB3DA651DA4E822AC8E7B26B484955D115689E5B47F1FC0A88D9E1
C58559306D908BEFBAAC4411B52396F19D4585B4DA54EA8929B11DC4428F158C
AA3AB1B6C5736A7F52A3424F1B7995A97253C8F822C11204E340635D13BBEF95
108334977E7FE842A2159F2B9C855580379599035BFF29D6477BD0D3F6AF2F16
A21536FE92A20CFB4006B743599D744919557B111518B64B7A1D52851A1DE934
8FBDC32A12A86BE914E85449C9A85CBCE97B93F8C30619D97D35B1ADA1AEF315
ECBA6F412D9ED54A37ECA7E502C9A4D35280ADFE489B1648526A6EA53B42DBB9
0FECA2428C1E535970201D7C490A836956CED972788FB275E3A5DFBBE016A7F7
8A0E5C28A19B04EC50A19D4F27BEE9DA759581BB58714BDAA1E83BD9DF1C1910
7140E71438AFDF5E01556E9262F214712F001078CE95F86EB0E0B34512888B67
CE482A44888ADA3DCF5A465E9F002FA79AD452E2CCE8D95B6A5382CE371F980C
C66EAFB9E1E20A8CD88D9A4D14DE3E37C0E8DFFA513410C319D4B21848204F1A
DB186D6894C72CC25D6CB8820BFF5C9E0C239034988ABE447589699121810D6B
FC7BDEBB1F51E42D8509637DED5D325AAB93E255AD1A5754671A72D76797F430
8F037F64763F692D2CECA91F2A21EBD10C5C7B50E3719E97DF4D3717188C4537
56170B516B5DA8528D81018CB12244C587442351D5CBAD32CCCAF251A9F2C4CF
3C022BC1A00FFEE1C8CEE96180578B8F93F218DEE51FA11ADA4DAE52651580B5
7876625092D3495EA97E38FFE57A40D67F96FD13E3B73195F71440537D501E30
9A7E3BFBC73C14BBBC2AC3EF83332F1EA2F075098004212358F67B27614CD450
FDF56B121EE744F0EF072E2D111EE7C206BDC80227D9B633FD5CD3492F064A98
A27912DD71D03C26CA1AD95ADCFECC1B83761AC21F5ED179AC7F81EEB9896537
6CD977E7F3101CBED2B7ECE747638E974E9BEC493D6CB503C189C1EE15C17C02
73B91722BD530B8E10B058D5A9283A3A9572A89544A50D899630CAC299DB58F9
88966A64E4B8DF9BB65D1FEB82383E76198E37B142735081FD0D723417AFE712
3FA3B41C3EE59F45969881FAF82937004B0BC8D03E5E06E1F6660EBF549BC7C7
7E9545D72FFC586C2435FEEFD35DA2AD19A2C67158BBADF2DCDB2185755E2F82
D219D8692EB6CEEF2621A0954CCA0BAE94DAC88886CF3AD8340CAC3C2810288E
E773AC4B89737D53BBDB6596A8B58B6AB0CBA2238F8A502D72B55846E3DDAE75
E38F79090B1B5863FE19A2267A4B269D6F5F76BDD710B7300E967E8DDE89F761
D1EFAACFC3D457967DC7B1144B2A8AB5179980F114284FA4C09187DAB0484426
BE5113A9B8F90799A71F0BC8CFF26F7CEEBE2AA816F9BC482F2662435897D9D6
1132814581A3918C743B6F4D614E3F43DE7C07681DBD96C5B80830750DF0D5BF
DB88563132D88B6C17B09EB5023F3C58EB25194FEB9B7D99EBB8C5DEC217FB71
86157868D9DBA609C01BBC4A44CC265B9C4AD84D963262E250AD907B8C154004
7B466EDDA8F4F93A51EB87C691FB0C414F087AC9F0F3A6EE521E5F987C3FC477
4E5E6426E7A5F3837FBE6B00D112E627659A627ED31080FD50000297AB4F5E4C
D39632D3B08A0718479AA2087E8D758FB9DE182B6457D891D09F4134E88501DB
9398D7CC76D1980B1E0226F416BD6A73DFE990CA6CAFD44529A22BC11AD59025
E44986085F421470BA129C1DA878DFD3692F586E167C174F209F9D4A6B96F95A
A8DBA037378B8DE40E4107BF97FA2D181DFEFE40B3DB69535374B520151B5107
6A45AF9CE67922FEA705E4481739DB19998A7BD858D13605BCD6EA2816A459C8
B8C76B4A7DBA5103959D00E67C7E92D3DD3EDE2BD0F63DD006AD2CB06B004EA2
BF49B426AEB9D92567570A0D63641E2071597A03BE02B56DE74FA14D87555D0F
1FD627DFB630401808B761E8C6CE18EF1ED9331D7EC23F1B3A2731A667D6BC5F
1E7674DF9164EC9E99538AFBC4E1C49BEA5ABCBAD4A4C19D6636351104954ABB
2667EE149603804822E1B5412732CF158A29754E6BCFF8D5A93DAFAF62437DCC
A7B68E850A41EB8A419404F59DD794B006D65A7593AD3B74DE0792FB95EB2E3B
7B45A998838FE7B762BA7CEDDE07D1D60A4571A57FFF6D7E155B995057FDD8BB
BE2930DE713050560E61580B2F864099DD07AF81112737C96C903AC85AEAFA26
F26013D94487B7BBEAD90EE582A1D744EE02D6D7E6C24240D3C2616702F5F8E5
1AC55459F756F76EA520670C297E07BFBD9224FCD763AE6C79D45ED9E111520B
319B3B5AFBE468A713E6E8A347057CEFCC0704EA567DA829A12EAAE0239D0DDB
5A4352C262928D85748F7B05ADF859E95425CA0DAC59794F7E92B4A064D58BA7
A878DD7B861950DE3065E5C61CA6F33E4FD6C7DCE3AD4DB0801A7B31DF884923
6936FDA69C32358A6F62B90F360A2796DF9DC8607ED7FDE7587BEBD9AD03DDF1
F1483916E6DA97790582F37FD4D182C1605B53F11C5EB20A33BBBD5E74EB2F41
BD4C38B19E42F8D5D10224EC604AE9E5453CC26C7B9553B78A0D3EA2D2847F97
34F2D34C0A7BB443BE2717B6E9275E481CF08A1A2B2A637F3EA0D41A824922D9
7840FCC867456B48FD460CEA236533C00BCB87FD014C64290531BFB74F9547A8
76597977F2C0F79D57FCC36E6DBE0F04786D87578C37136459A56C540D8CF7E8
AD5EC2857ABC6D7FCA56B3C56E048BC252FA6B3E8B82D440320888DBB85F6BF6
0FDF145668F46117B2AEBB378ADA9BC972100BCDAC5AF92994F4F4EB271A80FD
4293E67BBC627BAC3A58A4EEDF99C2D3746A0780321787E1262F3B1E600F6690
56E0C1CB0C1EFF96B673A4E6DCD3C22CAD7491D674AC76B0E36534C94FEC4FD8
01D18923C2BF33C9A44EDB0C841BDC3062D24D4F94B13D4F4470FCEFF381125C
9CC9E3408676327E9556F54099F5F76CB588A8339F4C4E504C3DBEF9146D83C0
22CE5411EDC0B3CB065E91CE43A09589FB6EC53B4041E91F50019C5130E604D2
24CD01572A3BA8BB993A74393DDCBFB896F9D781CBD0323193C094678FF96D85
1812A6E56CBEC40B23F240EE35973881899FF34A720F330D0E6C72A1EBDCDD9D
96789992A1244841F6495BE5E6D728DA5B49B4A70C459460113208D2EB6EEC6E
661B1ABE1C95E663D3CB4106B105B82572D64B1BC31E42472B506A4AE110B583
046BA75507D6ABF1122B1B1227C9F5E7F963A231D337B596255C4AFD74B10777
24560A65BCC228D996DFC254D77BDFB8A46F2F9DF5D98D7DB1BD879041195DF8
0CC35563F5A02AB1B754B6573EE494F3FE3E8C80C9B1C5D11ABDA6256AD81E4A
DC3395350112145F485EB5B81D521BDD968E83D0F0B215C55FD9D4E629B5109A
85D34ABE96DA79968EFD4E363CDB25C972A4296DFE79B7A2C10C77AFFEBAE27C
C90B1B3058A4BB2A5CB56BDC2FA251DA97B46748211C7539FAD042F3F3B234C2
72D512B9C366356728B98BAFDA140BAFC23F0592646033B8F131E11E6DAFEC2A
3E72B6A506D5F5F86ECED3C96E57D6B7E8488D13279814C2DCCB9D44E75D18F8
9FB7F23049AA951467509ECE25B14B23C54F033356FC340CB11389C3078675B1
A0549A05B017AAEEAB4F1A3D79E6D61D736E0D70F35E1481C29E26BFA725242C
DED6018F4F940770DEDF6FF303A61659C19B31930C811495057AB1BB35366A6D
B81848770218C156F077C04D831D895F232978E46378404C5CA4A36863C251C9
958BF15F46796AFE4A6A3492A72CF22EE24A141AD7A0E13A28CEA9E1F764BC85
AFF9228D39A3854B5A731269F9F4011DF05E577025303ABF65475DBDF2E1C354
085E564E2716825681B46D9B534DBB2EC94FF868BA76155BA23F9C7F6F6FDDDB
45D355F82475D5DE5E5BF1498D1844709AA2BD10DF4625BB77DCF73C7D19C076
589A7874440C0A7E03BF1FD67F4F9FD436EB28196B785189091DC0E5AB0F77F6
B5BDB33B131C4175CF52D831651741998B0119568E4805F04FC0DAA2994CCEB9
70D94D4981F41EC9FCC22CEA72C9FCE378C49403037D640FCE342C479C2BBDA0
1F6599FA313C90DA8EC6A9B19ECD226E9562813D4BB47A8C9A91D59D065C0C70
671331D47D8B2E50AD2DA7D11DADB3392716C8644B0E485C0FA07C2D8A815D74
919449CCF3A7A9010BC11B9B6A11FEA4538A665BE8EAAE7949F783EADDDB5F8D
CAD149A492E1F3B5AF645A7C8891DC063D2B5AA67B58F1CF1BCB490B32387AAC
C5B4F23200D3D46BEE08A18EF2961BEF5C12583C141F40127350EB6992EEAF8B
8A643FD15DFF951481EBDDB96330F2E0A7E24B534A7A514083D43CC5863D7340
15FAEB06816BE2C479395D124B931A4AE62BAF2EB294AFA46CB1D52358447B43
DAA2FE311D4F941C6BCF2CDD7985D89C990E406DC45C48E8A6873C44BCC9D317
817EDCC17260F02EE05300AFD0C62B9A53834EEDFAD8C38C2FEF860D82EB48DD
F6E8E0BE60DF80802A54DDA337CAC22B4EF357BA65649C79546EF39BDFE07392
D44B0FB80F672D1D6C509EB57D4AE28A89918822DE0336CEC72065520D09D368
7FF5068CEF68C094C0524F71C83AA1649FBC66C7E35837244B0296E795EC6BAC
7BCA82153F253FD059B5625E2DC3A4DD51F9F8E06E149D86405529A37E34ECD1
D9CA6615190A36DD582518C8116AC57EE87156AC6E88A3BC037C42411770BA0B
FA37A0B23A339379CEAE2A9341B1E0C86BAF2D2719739915E598C1A44E77188D
52D7A2B2AE32DA401223055B80474E0A6F03DF7E128761144C3EA96040BF4202
A62AC4A9D99E54D679E2CDB0664678C070E5C8D3183515430E4D51BED4BDF2E5
4F7AFA732DBF600B0F0A8E373529460BCE194A5F030D5C5587711F1D26484E24
C45DBF936E313519F68E5CA09236ADEF97EBE97AB7F33C2270597E2172ADA135
F3246823779D3278CE43C6ED6AAC459DDB1C8AA6D808E81E237A806BA2B3AD2A
7CBC5BE36D696A4DB55CEBB7FB2FB9585096FE6E91F18683E11A4809581896D9
377C040E3FF8951D65F63B5AD4E662EBB1285539610A2114DDB1A88175C6AB51
4A2CF02C510C485DBE6D3FFA72A59AB7811F7600159963B41E071451616A1E47
8E32B24A4506E4CF80F0914ADB4F25B305B7933136C5CC2696867FC448F950E8
7D6D66B4CEF9AB1196B57F2321EC52D68FC334DBD5FA06E04F51013AA2E2219D
B2067B54C7372EDADBC99BA3B510FA12196BB7CFCFDA184F253DBA6681523A6C
94A41ADFE1A8ECA37A8B50E58BB9CCE28E2ADED271A4B285C870AD2F76EACA97
5BC7AF83A5D25EC88362EDD3762C8E1A36B4168D08B0D4D6B150D6142B3710FC
EA2B89CF6E46434CD757D0D24131EE40A327A3FAFE6080727D2BB4C63FC24343
784E01F8DFEC0C8F0050DD6F26A2F9BE442A89AF15EADA8D95FF8299D6C4BC85
9723CFD4D64D06826BB19FECC4DD7D6EFBA39B3CF25D1C78646FBE51A9DDB644
11B2FB403A2C9C22800171B474419D573A7360E357595D77A4B5B2289E190AD4
CC9E7CBE0E2B93D8B55EF363F43F1F9B998A35C43CD462DD746B0C91115CE6F1
70CF72AC206DD38D0C113D55923469F8EE1B0EA2C34D9FFF3D6CA28F9F38752C
636095044E8A9A5A3D12EEC5EEA9291F452CF31BEF4A655123F3C8E8E57F1453
CDA9FD5B23AF75C4E9D7093D32E4AE90966577034D4003FC83120507278FD667
5241CD9D1BF5C38EC4186BF6F520D810F0B82FC86111E9C4E8BB6B790AE3AD63
C2E0AC76C7FD63611B944E334684C9FC4A9584AE9A37142A3ECD8CF9068A84E8
894A0EEE7C3BCA21A317AF4F636BD85D881B5F8E777626E520772D186BC8DD26
3E45B7EA3145CE75FAEAF8D28E4D5D8C92634C0DCA8BA04D1C07F7698A7F4078
B89BAA9A774A1CBDCB000E79025F33487BA50CBE623464DA1495964272F839D6
8154921107EAC2185B833DE1BB4DF51CF93A5D14EBA5337FEE2C48B9975EE80D
CB2AD6DA3817CF23B405E373D2F87070F69BC6E4FBAF9C4EFCE2D0EB0EF868C3
D94931B30F6DBF4A5C6B5B89B84BE4AE2626E233E3F5AC3FFEBBFCC11F3F784E
9B3B280F407048F59FB02D4F4B2AACDE9F33E35D67818E726A99BC2D6003E313
3AD022B25491D66604BC2BC5FD4059692A37350959EA6CCA372E72A3C9B6568F
EA0EB7F2BED998727B317F8CA7B8AECD09891421C50161C51C05E4FDA940B04B
1AC24447F4A4D462CD6F5A17D0A887B5BE9C20C9C566C7A34477B61C726EEF06
D2B7E416A9F778FBBFCC2D39149903F577B052978D15C8300514EBAD167F6EC5
64ED4FECE2A655B3302ED9EED4E5C45D9803AB9BB710803DE17B998B77CF0B17
5643C06B19887EB524128DD2E556CE44AB02B95EEFC820FD5B9F76290F792100
EB2B1E43983FB2E95B4D71EE7C69840AB7370B15DC51FC5CC5806D7B3F429C75
94E207D29D70591567EBD6427DE5D83A379BF2B2F9D0CD150E7B253C15E262A1
55DCECFCAE0EFF43123E1307CC91CD261182357EF3D8C665D61856799A646CB3
DB51FA49C760C70E8D41967066F38A24E48D551B40B14D5C434FE55FB84F6C08
F329ED8384BD9A6BDD1D0B4264AEB17157D60001482D1CBAC86ED1EFBC7D816C
C3DB17713DC6FFC1DA8C85A87F0C838790DDB6EDED7CA2BB35988541C9B2808C
F65853AD820EB2EC91F479E277EFA425E38FF9BBECE4B9FF82064E8F8D0FF607
6349F233A2679B5B776A633974625BFBA0E31548DFF9A04305FF9B6717824A8D
D35BFAF7D268EAA86BB52C652099160F3247929CC2BEB8284F52EFF322189131
791C540D9B6D5BC63488E784C28ED40DACA0F5D42712A8B9EE4BD6172117BFE0
7986E5D5002DB14F311861FD6E1A9A5A36684CD18291CFBB489738D1AAFAF204
7549C6458E111FC47B96B2B75706C23473B8D9B1B834DDDCF63C0F2276C4C50C
ED7948D343604289F3252B76C6A1C1DEC701C81A93445F6F7EDA95172CEF9011
94F0AE4F7B269943F34E730E93FBA2A6EF522F8CD7FD137C82C06CFD49CC4285
A0820A0C556C5204B6DC2DD356DD66EED6B6E60AA6B9937F1772F511D6AD2899
DA064ED3AB79C6FABD24CFFCE4440424E19A7862098FF0B76A117587E07866AA
2DC25FF9874945CB51B571561DD1A5179C0C24F71C20CCC022BFCAA1F7F83B37
464EA07FC922B833C0A3A8C1136D6165EEA8AF6C07C52B503DABFDD160383216
31EDA475320ABE52F6690DA5D9CE07F13C6D51EA5B77411642E2AA01B0D38AC7
0CA7A92832207826795D55E1508B324078CA9C0A200F686D577E59C41291CFD3
D036EF8E1F2B813755F240A73930B53EEB0AEBE832ECA6D5861730953B460DF5
1BAEC0D6FECD29E1E6EAC1CE53670C41BEB73DDEB6F5C938B7DB63E51C192D93
F216CE421C54AC6D32C82090D9340B86D3B82C5276F89487AA8CE74F6E24279F
6220ACCE5630F1CB43C38B94E54B2491783FF928FAE5BD8317AB176F3773C808
55D426EADC62B60A791F687A119EE6FD9AE187F383991FDE1E2E52D0A1193B0F
36AA646759EF6EB1AFE9F2347DCE1BF34B32F73B1FCA756E142729551E3BD030
CE0592ADCC82559E3BDE6239F9613DAFA2C04A4A2B84DCF3288A21CF2322F475
A1D8BDF3234CFC7A687D2A31D1F5AF93CDFF1BC8CEF559B40E9A84A55A374670
58468AB1C3B911CDD2D55BC4BB7A57E63F11CD2E285FD99B6CC9807172C8295C
0A14DACA596C27DD35EAC932FC486A505020A6F7DBF64E67CE38FB8D158AA147
8204FA714FEDC5AD7542D6B8DEFC177BBB27E99D640E2EA7D39A208FFB669A35
993931B1E3F217B1ADF6918269C8E3924B159AAB0CDD41689EA332FD9730B54F
1CB1C9692CC39E15C767C3F0AF15AD981A10D7C3C046DE53882E51209ADEDEB2
6BDE983E04993FDFDC22CC73EC8200C03E6B996A5137E189A380D33E5BB13A48
AD78562E2D17A7A5AB360529D70D5CDA8797A438833A95FD78EAE1E15203BC9C
95D9C686747C2EBF4BA6420B1D7D8AE02C5F417CE25C47FE6E65DB0B9D05C0DA
8D6F78D371F9E4C3039DA807BA98B21EA866B87E4DC78F0898D591B4801E5E77
40FA3F8A5EF1CC9B5293C4BF5ECD6DC5978E8D23DD30B048F5DDA998EECF0A87
34FCCA815E5B023BC9655A87813EE0EAAAE22DAC583BA3071A842560B85691FE
C2FEFC607D5139E68F09C21A7AF84265E1C9F8B5573CBBB7C2E0CBC18EFA37E5
32C5675FB79F262F65A46104A6543737FAA62FCBFECCA1A39E0A32F06508A398
DDE5BFE615D3C636EA5AC768981A5D9A06F5E9DA02FB677D27CB7599B3A69033
F15CE71337FFBD103CC80328DE030F5CFEC5E2F5F38C9703E350D81A1ADB4CF1
6123266B9478CAC0A4FEE541F6FAC80F9B9F3FB1DC6171AFDA02C70B40603F08
AEF3AE634B38B67C1ED04A5CBF4F78D89D137A28FC9CC5A088ABBBCE23F3D6EA
F16934DAA7037A83CB8B4D95E5BD71FACA656E0558F30D305FE408281B101777
46DA65997B3A3D4D299C184A6FDF380AC672E17D9642EF45529091A23CCAE0E0
57D87EADB395C7DF82DD6271A076C2550AD9DCDCF3DEE2D5DEB5E5EB6AB980CB
A21DE80C0EF536FC993E3A6BAA2EB284777A242135CE67C824C164583B86CB16
D62244CA7D209CF4E7B349A49CCFCFAABCE877655786469C306D94647D4477AC
5233A6FFC801F987E97601AA7542CF171C282A6BFD4FC9052832AA483389A1FC
43AC37FC5F05A48E7C1E1C7362195CBC6F0F81AFF54561B83386B19F13585C48
1EEBE7E6FEDCDF328193E9374BC5B853DE39047015A2215F7C24746601530E5D
FF5820ADAE7B535439C69E8C6E74EAD0C748BA82F43684508C38866218F7865D
9E10A94738BB791019A3933952B0987D8B0FA544F04BD869429EE039F1418EFA
CB7654D831FEDFE29D9B697816DFE7F2D8DD5C336A73ADCC059304E363DF3C25
5B063EE49E5A69DCCBA0D46279C747E29C7DE29BDFABF03722BE84F6ADB6E6C2
44C8FE0A788269C29938869BD5163AD3FFEADC5D6EDE3DD2466CE20D911C82AE
7AD91E7B6C6665C49D7FB074D09694140A0B194403D1840E17BC119506112788
49C9AC79C1A84009407BE426E2BDFBA73D892F3A3E7E93FF73D8294E4DDF81B7
A9D5D7F2AF7D0015194CC107BB3EE9CB81E5B70D5C48F043A7BB7BAC1BEE2D55
734AE4143485CACE712095E728ED0473546CBFFC0E6C60B57802EDE7DD50E87F
D8DFD031ADE1F79AD39CCC8CE609C0CDB7601994DE144BE676CB96984758AA48
2097679F19C71C4A238633E77B1507F905AC07DF66D0354E4D6045F4B3213561
2A113C68FAD35E4B1645D5F22F2137655DED6BB31DD275E279CBB74D8C0796EC
79FBBA92A2796573723275C3D4E78627DA6C5980554C76D13CF3C157D505AC2F
B9DD92ECA67F671EF866C54D4AE215E3B5CC59AF62EB188FEBCEA3585C4AD5F1
0AD64A2CA91C4A62E3388543ED77FAE32D647D345D5D80D6BA445D3EFFBF4F7A
17697F0A564A47FADBBD7B49AF506E709A5DDE43472EA0312408245F06D3AD18
5E915F0771E4A4330030A450ADA1A95CC0BF67D04F2C20D1D792747D2AE6BD21
A825FA9330FAFF7417FBA6C1CE00A695BA503A6AD3C8E29F635FF268975BF13C
8CFD65E1ED711ED3879ADA130EB8102AAEBBF3DB7936D24A8C8B9BA035477EB1
F5370DD1D2B986551D42FC000DBF0760196B820AA1639BEC2DA6FE95438CAB4E
18CFBD62127251B87D190BF3714F8ED003C32ADBDF019A23883D768BCB301880
CD8760E949CF97B61F93876FEB438E272942C56B1A37A8BBF97DFD0A2DBDC399
8FBB16742F96C4FF33F2204F184696CD32C52E4BB787476FF9A222CF293D2082
03C954A5E46B1F59FDB1CA8D32A19295F17EB5D9E7472A5318363BC958E74DE7
810CE5AEFE8C57D62E1C95DB46D3C4DF74AC8D1577C1BF9F49BB1DE608F488C9
B35EE4B49964BBBEA553E9E7772E82DA3F2E69B7D250F03F7C7BAED205C92FB5
44DD2F5060FB51F63497B847A2D2DE899CD94291DD193CFABC75E5E2A5DB3C74
738A9A54030AC3FBBFDFE41C2C56475921C92E830B9755218F860D4FF0C170B8
0528FCDF2ADFBAF2FE2CC391431552EC3ECFD47D6B8ADD3DAB3764C9DB5B556B
ABE6C232855B02A3E39DB7DAE03279D9868C558446D08BB4D8BB3A35ABCBC183
ABCB72CF0058ECDDFBEA642D97F5EC1D25FA4C371CF1534594352954E4159CB3
0135FFE11EF488845D5C6751F436A34CB84435D669D99E7E52E65A699A1CB2CB
0DBAAA86A287CDFF349D1FBEC96EA9DEA2A8AC456C78394CD4264E41DD75AF21
A05B015EC77663E0A0DE517892BF36B314AC0EF7DDA60ED751BF3D4353C394E2
826D8F6987478F827F9A4C9AE8E732EBCCE9CA81C3A50E757118169DF16E4A3B
D5F6C4238A71C1F351C80645659DD2E567D604733B42CBE6237A898E41864423
91C07504D006EC9D2F3CC064700560BB3B17AE14C49ED148A26D8CA5EC0EE096
D3B91FF8E4D22599FC6E3F3FD4F5F3E81E8DD21522F7D04AB78BFDC2A8E3BD84
150EC49547BDD4C2F0B29ADB05A0CF0A3F847E28D64624DBFE19A0CD07740927
20905113ADF32E3423E619D7912A66769B4F912180E4BFE05A8E6577843EB8B9
FC2A781516807B5C6C50CDEC716CBE32275D86C9454B88D389447A9682DE8DFD
2AA1572E5F02FE855124195E8C8B5B0B8302CD75FD6CB7CA6A7EEFCE7970E9F4
12398D1FA9D5FF8C41A670CA3AEF601A3EA2C1D0C30DC10071E78FF4CEEC15FE
AB0F9CBB79C375F6162B26123BC324CD0AEC39E67DD9B359742EB8D0FA65E987
78C909A50D23064AEE27E0CD12E7717198992FC312758FCFE7FF3B6A5F0ED897
9B5A94E9663D1710A113F20A4DE666F11CCF657A6A35AF7717016826D609E6CA
384663A5B3D9637898C9C5FE23AC14C59064663A9700D4257B5DBE90A64E5977
05F55F47DF87432E394191DA31A816B904FA39B58ED96BF8C7767E2A77408E26
FD8C37369B02100EB627FAA2FECBC0497D36B8206B09AE3F1ED0C0CB41B9718A
20C97D8B1B36325B466C868352EE1D230E38BB5332EBE8EE1A63111177DC8785
A79440D6BCE1399CAC71F46738315ED5042ECBA6FCF843DC78999004A954145A
1CF3DF20B6658C0DDA904CE2B2B939536C983A9ABD7F69ECFB1EB8D8B2687B9F
6C52CCA088E10F13E9A651741900212169935DC788DD4A8FBF0C46BA13FC7AF3
19485A1E318F890F882F1D9D14F7CD17033A887F81A124123582CD7A502E1459
0FA2407BAB1E8B621810EB17D8A4E3BA315586E3825317F49B153CA4692DC8C4
CDA7E633E63699B24D1CAB1A6BF1201CF5ADBC32A6F4036C744A7DF9F597F6BD
F1662505B2662ECAAC53DFD10603E5167DD2660111C0A94F3516EE5CFBEEAF38
FD1EAA8B9D18FFECC3269E7EFA7CBF5917AED8B5F9F3C6E7AD3FEE497AD9CB80
C74951308F87214C7DE6D210967F43CABCAE6ED815F37D7A9EEB2F47AD606F2E
BCDEBE0CB0CB026217663EEB96C33E1853EA6DD2E69091B95AD98754BBE6D922
D4EE01B52FD5D98F4A11031ED42A74C121F359C1947ACAB48996EDA43662FC4C
ACCA4941AEA377318D75FC0976CA7113E8D140CC9C2448CAC3ACCF17A6D1B70E
A27654C286F7581C5D021A0148A67D5F742D83DBED890AFF3405FBA17068A3C3
AC1576AB753EFD9F83D46FBC61D0695F113BEDC13AB2B3B45FEF28BB16344978
1329429FA26DE22FC1FC8C4F06B990E8604565B704E69EB68497BBA803D29593
DDEA5348E8AEBB97C630F8B2C39FBFCD25352804167F300437D34BDB675C25AE
8D74CE8D62B4CCC3D3AC1B361FD128251EEC279CFC9E263C30E33B7143BEB21C
B7FFCBA532B078362048FCD4C1030EF998FF85E968FDEC8909C9460FAFB768D5
F3455219DD26675AFBCD6D729434978B0E1A0C1A187F136741AAFC62378685B8
5A9826CB76C1DB3380185006DB4EC8D324CB8D26F7EBB6C7FC5ED5A0E387E700
612B5266852486D8D965E57A8C2C2DE85898973284626E57E37087FE568F6BCF
C504EFDA46629DF41BC4187C4D38D92F957F5BD84BCF709CDED53216DA11F4A7
6982C2FE4D2CD5150123B371433F170EDA8D8FCAB0B63576906A7E353BBE8518
ABCF4911A352619315E194C27C264439F2F7C2C48D5AC61B38AFB7C8F6954EBB
27CFBE0F605807B978CC7F211F790C0444059DBAC7C7C5854743D0F492E7ED38
ACE733AFEC587EADF9AFBB6A5817AA99274D2E8929D84A13B3D3A972BEEC1F65
5C77C5D59E79D8E29429678A1D5A80DC4AC9B92E44F530FC7E4F1862452C1D7C
A16E9DE297F0D8C50E4DAD23D3E3E99BE07F547A055E4F731F431EDEEBD640CD
4EFA6D384A75AA3A5FCE16D85773C0E803AE46B1FEB81A4692E37CE5FE4E88F4
B4145F00C21FE7BF20E5DF928880DD1A4526B9A9624DF30424F209761DDF72DB
7F96A91AF466C802A801933B13DFCF206583C7175D9456CE55630B44808BA08F
DAE34F1DDC0DE91B4F9C2E82BE564D7725E0FF9F38703C0F0295352C1BC02C7E
4334BFC2CC4F27F42FEC679B70B9F0C1981D2E688386590F9716B2C54E245414
6CA57445B8EAF488F06B0DFB3889B64A45FE680A8F9AC7CDFDE6EE4BEC827787
278E021E8E98BF2541B83F47C8FD0A9EF838BF7E8918E368D569B5EC326A68C7
DC0B851598B864C01010BDBEEB96C97226F428F4B545E1427C01B3026FEBB6AE
34F6FF8A392D417619AD7E3F9B671CF06ABA409B4E4B7E56E2BEE061D152A4A3
3CC34D083FA35CFC36F0EF434F3B7CF55860C5093AB0BC0225EA9987462498C7
906093B5CF513E2AEB94E409650E9CDFFD63D95CB8C089331CBB5C9B9BD7E945
71850EAF9480D754A3B15F00FBD8673A0EB38AEA42199EEAC357E4BD5525FE5D
880889EB10E8B93472CE62D0A6C86C9EEDAB1170168935717E30EB8FAC494D6B
D45D88098EFD548DE38AFA4E8F9735042BE9B6D106C7DAC7CD1D3972081AC032
736A8C19EF34A8E924812730192B2ACB783BB27AB28D06F74C8AE2757ADD97D7
5866DFF6D328A23957D10DC664A70B74F0A76A1EF278279CB4A06BC1B6ED5220
1A82789969E5187C83C4F1D429735DD2F0F512DCF06BAF48DE4BDAC52F97A167
9E9E1901A03949E0F8EE1DA6B4E625AB03CBE9A68A598095D60D53E38348683B
2E45D83E03B80E086296275721FDE2870C7CCF1077D1269013C7B3C9484FB495
14D8E629E93DA4822BE8DE4036AC6DED8BED1CBA522E97CDC0E68229B054B23D
555C0C7CC9BC7EAE980CAA275096F30965397DDA2B020E8E5DC04D88D1A972E6
738E67CD90E7249CF3CBC9FC25602CE36D8BE8439A530AD6ED53C2103285F516
E858A509815F4C3AE98005F3023A6CEAB59B00E70A9CBF010BA37CE4713F957E
6D5DE6FC3BB166D49AFF71E96296F5F04A65D4BC207B70F9F70C220ACE99F269
44B22C94F7571F47A9FA382DCFE811BE7560EC5AE5249B7DBE880624E44B43D2
C1737C5601CF74CBFDF63CACCB3C5F3D8CADC6BC29AFFFB6EAD5DB90E2237AD9
F5C74B4481
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX9
%!PS-AdobeFont-1.0: CMBX9 003.002
%%Title: CMBX9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX9 known{/CMBX9 findfont dup/UniqueID known{dup
/UniqueID get 5000767 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX9 def
/FontBBox {-58 -250 1195 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX9.) readonly def
/FullName (CMBX9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 123 /endash put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D4347EE3E5AFBE73BA
31023D79A7299D8F662042A8D8B6A7B4E86F48AE98EF848E83FFDE68E17A0832
A181C126D15EC79861796F03957F5A51462C817DF752097718413D012D19C9D4
423A5EAE1EFD4EA7A9651BAE6E45CC194BDCD03FF43F255E58EB5E50CA26BB98
B8B11E21DBFF2BBB04D039E63C453EEDFCD9378F5E7AAE3A93E8691DED5865B2
B78F540F8AA3224BE372B18904651D057608DE4DD729FAC398A80CB904410451
90D66C44E943517A8F4969673B985D9D244FFC743E0AEE309EFD224F7029D37A
F6EDD96E2F88C9D071FF16EDF055955D31DEF10808B343E948BB4F6393D275D0
44C4DABB75332DD716E8127283E8D70511F8EAF4D1A5F72E2F8503A2F964E5F9
39304CC17ACCF531A8C0B6A9D58DBA6F24A4ECA62EECC939E8111E4BF79BDF77
D656F9998F1EFD2ECE3E61CA526106662273D5AD3E74D08E9D4453569B359C2B
E2455F2136B4DB54ADDC3C0256EB7A11E1615AB9323ECCBB6EB48ACD469A2020
A873E88B28AEAACAA01826C1C18120774FD5324DF9AD36FC256706DB24FEDF34
0FCDF04B12ADB66876EC7AEC183A1EA8BABD38BADDCD0EBDE11A5A1BEADD0F7B
83585C3BA141A8B296872F712EC42C625DBEE9EBD2C414E57CC1378CAEFD00E8
DB4B84F51967F2968329B8503C4B37A56F6136DA89167FE3AAA93257140FE94D
D96C7F85C6F82AE1596511ADFEFDEBC1B41B0395E66D2074B39B5565AD4687FC
89BB4BAFF0F7568D9EAF069CCBA2DFF61C59E2CB2F4274459792C5D097FDE6DE
0E40AAD8DD8F64C28D04EE50AB79EA7D3420CE42D39FA9080E9E046A4F22B5AE
AAA17FE750BFAF7BFF097E4A6E9362412C55E25767C311832C1C0C76005C733F
E046FCFD4CF49C6181C24BD299E90F20A0A0ADC868C11A8AB7F610186D0483A1
B3BC4FAFFFE12FD746777209B4DCEF0E4ED15D90F19BF2FB2B56231FFDE5D40B
146E3FAEDDBAB365D88CED98629B9855AD6E57FB01BB82659BD320D248E5F7D7
B584DD43E1F5DD2C91945DDB772E5A62AEB7080AF36A83D2BA8533E7E6FD287A
924F616F8090E9FFAA607A21F38718D668FBD6BA3434500BD01EDCEC00354F68
E1D0E9A921DACFB83FB61C1A5C27D027CAB348C4B7E2781013B68CC5A2BC8703
2809A49A0C2E9E004D56844EFAB4A8763B103CF7CFF980C9CF7F6BE28814CBDC
348E2486D9379DFFCC0E9329854D518B49B98F582972B0D1D18A3319EC00DDF2
F64C2CD2DCDBA287B279F98D16ABD1D140246E8B66C759571981FE7402F14C94
18394A4C426AEE4B0688D86D08B408763DA3537E5BA0D6A6796C316FDB0193E6
77C6F257BEDDE17F2CA5E661F434964BAC9834BFF36F563637872FCDDE94CF22
F076D1C2DF6357D8A26D305D52C9086CE36F49CD92ADFB4306705A0887407C9D
59B6BFDB82379111C9E33692BA9E2ED9782CE4334C6125933A2F210684642DF5
3B129F955BADA1E86D6B80CE299FA0D1C0AED1AD61686AF1052A188881E2125C
98083BA8255B92B9CA0B48EB57F936790DEFA6E6947C0FF4083FEC296FF3034D
AD657C64F2675EED2B4EED1E88F0B1338762CB4C64C79F111CDE9777A000F65A
F9979943ED7C445815BB59052B91F0FEF7219E3DF27E1D5155B9C42B7BBB06EB
1815997FC3471CF963A15B1C5E4653C84236CC5BF55A31B94E394C635B95D847
69E8134F4FFEAE836CD6AE71F58F48AA2F95BDB1E2CB89DEE590EFF3AB7097DF
AC185303E647628F5D87E0D82E6685DB467A0F8B7D3AB2B7F3F11BCC99BD48A6
FA5D4D75698454CB74451B486CDA6B65547C0CBAA563EC3574364540AE7B11B8
F9E86BFA655CDE88DE2E7D41851FD208649E9C011E04C78ED9209FD56E2447BC
E1AAA0A3D36F6406C60F6B19347CCB7D56A84D961E17E361F92C5542109D9BFC
FEA2FF9775230EABE3333EB25A40E29016E9A8255713AC8336B8F7DEB89FEFEF
4006DAAEA26C6BA1EF494AB99C2BC960D9E07981BABE909B5C121F2CAD48C938
A36129D10D38AE8F5C64879F61138FA9F7479341F5C5DE86376B65A642B9622B
E58DBBFAFE07EEE1D11DE9DC34309572868586CD92D39FADB711883AA85210E5
C82842EF225E55370FE0AC600A170687C60C8091B0625A1C5589186F3C7C1218
B15B5CC3A5CDBA7085338D963D929A18A651EC7CC39B8500899DE9220A1BA363
78698E414607C34E06E29AC5BCBAB98A70DC2BDE0FDDCCE22D4717EDA7D95397
33420EDEC2F1D6E7072FEA85945378A6BE9C7F68DB4FDA6B5BBC0032B3C02519
F4168C804B6A101AA60EF4FC40C2428AFEEF5A80F9B76D561C8A21B3633E13C5
215A14D54B8A1E6143A9CA0B5794D20DF97C35B3C9E9A4673AC2123E7DD8E216
044269B1D6AEEA46757F8D9AC5C8A92BDC1EF22EE0575C80CA7895722CDD2BA6
F9A208E6BEE5319E63B3B3CA197D9739A4498AAAC9C7484D61418ED2BEBF63A7
F5283A075D1DFD4B2702E1551A0D1A90DBBBEFB6A55B5F29C869763A856C4E61
EEB3C8E14E3376B7D01A4E265C6C8056ED23931DCF669A0EC9427F74A147AD8E
82E172FA6C13DB1281651BF3D14163D963EFC7384BFC4B3B9274274DCEF647FD
D6DF0CC146BE8AA660D709526B394CE253369281FDB45AE071319E8FAE4EDF10
2867A431E22779EE40D885E95AFBF62916D9900016805D004C0375D29130CA14
F3E466AF350D1A5D181816EE1C4BC75DC09E4195DADA5AB09CE9EF2C4D5F7CEC
6C16BB6EC791E2870DB46B6B06DF421E7A2781D82A07D92316B553D068A1DF5A
8B19041F96ED637B932DE184F8B856FE1947F5FC8AE505F0E3953B325E0FD6FA
825EAD072AF06E258BD35607A1F082DFBC2BA5251DEDCAF68B4D03086CCF84BC
DF70BB8D2EEEE3E0EAEACC8440AA130273E5C7E78A15EEF66A9A1E0D5E022188
0AFA50FA55C6C461C743E1845FED77378D639839F548D6827CF371AD3DFCE592
B7F6E29FFEB6CB92B33E24E34875A5A92C08806F67E18AEAD86447A977890AE2
30A452F33B609DE5B792D9CABF39A086C0936AECC081CBBC810B3EE1D35F9717
260E76132661E3A8170759084AFAB04A6E773E9714A6D486E0BF46F336A7CDB5
C325E28E747295CB0E8FFB289F4907BAEC213D4D0B495A246A3DC359B995E9C0
C5322D750E13159B7242E4C4DD27932AAA130BC6B0400428B5E6F928CB8F7658
EF02F7522779CDBB67722E09774C419489192FDAD3DF272C95BD9BD64DDF0BDE
999FC72607F52805DCCA5EC17150EEE38B866E3D5199E5A6CC262785EEB11D51
80E79545DA191071487EF70C7FAC0CA345955F797912C1268924DD79D0FCA3BA
460F43E74975C04296E34423BD366A4EF7EE9463ECEF08F7E7BC8BEC570F812B
066383C2EF5375FB1504537D902818D63B30385421FF81AD92A1C153852B1427
A39685A76DD636DC4ADCC53F2A78F795F48EFB23807E5751023FE324CB401281
60F8A8DA779A245DBC26E73B61A1450F25AC276E1B5240578E85E1CDF5A784F7
D4F5BAFA76F70300972E4B130C685189C4010B9035A5CBF0562EB3B387FD89F5
C53A25D3E883B506E0B477389DA5CFA82CB157D8C30F287678B0F9A17F5A8704
ACB5DC57D7CAD21A4EBA49248F277F929D3E49B17463EA5F31A4FC11B0836E34
3A5FDDC6B9A45113590F114B99566D18C21464E7FC1D9AAA9B1133E5E8E2D14B
8E143E1E16595C42376694A83684E3B217A17F158DE89549ECCCB443701B520B
E20B972CA5EC6405C479C5054663D48A22D105AC98AF094340B5964D0C26D9CE
241D2706D3444C1405B2C9F7C912CDFC87EE8FBA01C0020D1AED1A6205A8A45F
8504B42431DB5409BA8AC472F2FCB4CE698F6DA92C4C8BF1293C2C998B771540
3D933EB5E976B7D2252DAE9584E5C6864B29C3048EE159BCB7638CA956E07F81
F76391380AAD2F1DC2DC201BAC657A1BC93F5569A5F612A4EB6B01F136F41B87
E20D4DD6ABD7ACF1275FD80D9BBB87A45572979BDFEF59212F1F6D9423FEC976
1228499D626A328569B4BA2755B1ACD20796398AEEC5F3C61122D52124996535
D0813227F549FCF59C6182D6514A70F9E38565C8C98D5F797318FB531B5DA58E
EC60235B6F1D97CA5D495CF689C3F9B3260998ADA1204AC00135C7C72700DB00
7C06798A46E897875BE619508DFA2201FDCF689E51C3D85342247B059C0DDA14
766A31E3E25E792F090DF3EA0C45C3F64AFB918BDFF92FF0ADA2F71866CA190B
87B2FF90C872284652619F084E2259F044E2980101A62004AE9F4BBF675C5279
BA3437ADDF2D552A033D2301A669EE8BBC840C0028275D077B8E9977D447B396
F1D82608E030FA43511BA01C345078986B8C35B6C6990D018C2DD2CBC7774450
D8482DBB262BB816E6A26A1FEB084FC2027C62D17790C80C65A9183F23BB2458
34FDC5D566C1B667EE801D0521BBA520A15C0C923EDAD84AD6A83DB23806711B
0AC2631C15EB1D33C26F8D65852EC37A3479152557366929A63B753226059870
45CE6403CA23FF95BCFB6F0C8DF8CAFCC0BF27C59414217CC6552F5945D9E6DA
AF83F4AB1917742F7502B069DE44A6ED3BEC966F59A84FAA2F8DE441C11FB122
DEF1768D250C0CA5F2DDE6FC4E24FD3AE4386B91ED2A492A959BF7E4C0AABEAA
5BC2D933147A4A21FC5E5CF3B2AF5C0A768A8B79337FA3934A43E24F9F7DF24D
22C5BFE4DF1FD57289A6E1C9AA48D32D20F613AE94B4308E0D3BE4D1BC95B33E
A9911B82EFF461D295C5462EE2B12A3E40B89E0BC778FB76F8B847B6AA99E061
3444A55D83FF839B926985B0F4E562D726FD99C5DC86DA24BA7AF38B93C90F51
A937E7C35793010F351594465B39BA5276F223DD3CAE1868B969D8EC93AA50C1
4C7E51D0D7F5E9F0EDBE1BE24BA5A977163BEC724D575749C56C4F39BD60F3AC
47B930C9E07A2D59642C9DE85EA6FAD1E7D8817812C049FDAEE148E8AB207B89
B2324191F1A82A7C499E7BF09CF1299F0ECF55EB0A2A32C5BB89411B4AF2A401
074718859CDC27C2FA78BC5269D5A38DBCAE55F6CB669DEED2C36E5B0D590504
B6162391FACA9F20224E6AD24B86CCAC0048EC7A618B3263F82A317B3969F0FA
9D5EA4676B27F371785FFF6599B61A6D32E82DD9D511B04E03F14C95A4CA6CD9
5B59A8A7BFB2AE32E9357C7766528E9F74BB8D0B9317F02EDACE2033B7918D6B
8616F1C1B3E113B0F77B0A1292E41F8353DB55EBD872290491AE1FBE95EC034F
DAC1394928930EE297693598D97EBD0720A0A7B4A5DF4EF4BE0E2E0968E64CB8
167CA1B8C40A779023AB6F74E0F1626D8BFFA96EA09CA88524837B18DA6152A4
3F0DC3C3958EFFF86B07581B416720FADFFC4AD35F1553A18944A6DB8FAB0AE0
A8118C09DC8E905CA32904B44E0541FCC7EE555335E61108D8346B4EF697DE67
7F67E1E4CF0EE2F6D89D10FF2D115C6F8163B8180378018F58C148EAD188E969
C60B83C7B295F30614B93FF925BBB2974B0B9C68C2BBA6E973DBFB5500A574A4
F7348BD31C735A1E57519990582D8F7D97F8B63D9DCD488DC569D5B392FF26FE
F06F9762956D64E9C258EB9B90733BAA8F1912F3B9AE88C6D14DB46B7131BCBB
D47CE60D9C63FE0B9620D03F615EEDAA3C76A7285F9897A0D476F35F5CC158D2
D148CA1E5A96D16253B360F34336D476FABE9A434AAD5FCF65A27F48C5BC3519
DCBC35DC1D324A270996B8DEC6D3833E76A434E05074C7E3FC8E5633D6B25B7D
69D9BF7039DE4E755A7E3BEC8A4E5929A98FE265E742B269666C75644E53E6A4
C5AC907F7DEB319BC88CD1A7F29A0A4D43D471892A674D50C70BB6EFE5740F97
50522F2EF056E208C0134EAF15DC9F85C7C06066782B715A5EBC22AD414A169D
86A2F606150B6F903D3AAAF44E75649DC410C3B8C845909BFC8235E573A2D291
19440D724C960014917EC802414651E298160EA70FD54BE4EAA1A1007ABDA8B6
085A89221C3DD5E9C759C19BAD6EFB91360CFDEE6C4876AC19B4BF67A38BBD5E
0BA20996BEFC1F8C427EBDD666B30DF5A2389F1F3BCA17132FEFFD3231570AD2
61CB33381A0D2E2FDFF470FAC3A60E61E99C76A3F4A6BF32FD4B2B6DB6B27F2A
76A5C35E24E78F7DF28AE1B7D04A71097881CB67E060DE537C1A318B95964FAA
1455264E48DAC7689EF10905E381C569DD65825089EF325595388FA5BA6A1EA2
E2536872DE92D46AF3BB3F1DD920FBAA4481034DF831FD15C01798AB04A73B50
1461BA7298B2EAD460D6E645A9ED41EE0E0282C335AA716D7563AD7CFE2841B7
0C782ED3F6D31871350A12A41AEFE21E9A03DF676671E4C953E51F801CBEE091
BE0B7B413B7EA2479E2529DE9E49C03CBE8159DB1B28D2E290826B6D01B35DDD
083F85E9CAE378C1A3B7065280D9FFEB04A02B76F1F0E547328F005CBD39936A
5063812D1C958FD4EA6BE9FF87E5FAAD483055819D1DC39D31B8417B44F30B50
EC95E26103A0DC2241B56DC62D424438A5FDBA8AD4D9B417F0DC31CD82DD772E
FEA23036A719927A4654876985FF4AC2D28A180969A76F3584D001A2EFAA2BB3
7F0CC228CAD9A485F3FEE3E0F0059D3BD8484FB97593A6EF08F9D352E3860613
2617ED6138ABE551DBC67F0151D0F9CD83A613C245E23FEE6FCC8858592AB43F
8E66FDC5A27F9312091478D102BF867B320431F7A6EA42EA763C51FF7E0E0FED
A6A830AC95600C837033968174A9406D0DFA72FD65ADF153E5CB3420CEC76A3B
43DA6743F24C6CFE0E9A7E78D540385B657CCB379BF5E238A07B836F907017D9
C0CBA503FCF625536E27B77A262A0EA1C3DFAB015EC859FFE5BB26197A05F4F9
87046F3AFD3387CF1B040DA7B7CFB1EE92816C7C172164CBAE3E9204559C2A74
87E4A41AFB16E7789686047067947F41C82A26E3F343E7359804BFB3B7904F4A
12FBB7EA0E8C26801ACE0E9093D7E2C3E288F781E3E6A53B8C121625CEE7354F
B1A059AFE21AB4DD2B43A9DA710F2D811F63DC41699FCC43330DC7AB9CD10F00
C959F73155E9D63EE7B20970C7AB1B9A8A51D0DA0ECDB917291FBD57CFAFD9F0
E1636B9DEC48FA7FE5B225283546B01ACF3036F1B5F399688F1657E41A5F4EEC
2CB1324C136CFE6C6B92958597B952552EB7A8D58BA7773CF685FED451D89392
C290D38D67FA7519ABD024B85D3002D8592C5D30B50726C7BD17577FDBA79E38
3D99B3A08797696E593C0BEDC50706C986E6BD05AEF30108F4BA192E956D2942
72F59E1A025FC31568C2EAA1D5942A479203EC01B37626F1EC334DC3C6527C06
41162B68D66E7923911921E861FECF78F36E4BA60B4FB8554E83AB554054B2C5
8C05D3FBA010846BC5B32E9ED62C6A0E8D92B8F3546CE0406A87634E2D96F5E1
F007DA0161E75DA55FEC10F7564CD7CB9AA0A016438D082D9A9FD107CEFA7B27
BA3C61B3A13D9A30E4BAD25B2FAE3ECE3FEBC9722B448E3AC5DD9FF784718F6D
DF58A8A7DA91086BD86AC776CAF3F4F2DBC2F0AA81600D53D2A0EB178568DD96
1ED459E1CD3D897776901284DE5673813ABA0CA7ED342130B261727DBAE566E5
F57FA86A7B4EE5F48F039FB95D318DC142E26022D7F85B34558E99078C5E6467
FB2ECB21BCE1E271E22FFD2E71F203DE5D3BE3EE5DC01A9FA9D3E4D01C0F12D7
D430BF07CD774516464C6FBD414FF6F0C22B9C02C7B4DC659BA3D7306AB4EA90
12AD3D9EF3C73E567590ADB3C6D261F650E218E7A87DFD9185BD17E8FB9B8AF8
5616C4309919470B2E01F294D6CF5A8D89BEE7B3B199C4D935EB8F12308C4610
01A5E4EA5AC3CD91F3E5F881E56B4CB2E34020D8297D00C538D47CEF8E090E02
87FF1EF88A9CD5AA5B51D6FCDC9E2E72320DBCA9DC718C8D92337AE5AF2F8A4F
93075FB531B97CFEFEE3DF6F60525862D44F7A413D4A18A24F1C8EAB894692CC
63E67BB4853C605B3D614D4A9B6A520D76D7D98E5A0D48B82AB75E7EF41536B4
6AFDD341927280FAF9F6516D22E5BAC08B99A5D84C7B99653E0D548BDA3EC7EC
4570FAA5CA127369F4D85AFB843E39E45F4E2F11F12833C8FD3F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR8
%!PS-AdobeFont-1.0: CMR8 003.002
%%Title: CMR8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR8 known{/CMR8 findfont dup/UniqueID known{dup
/UniqueID get 5000791 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR8 def
/FontBBox {-36 -250 1070 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR8.) readonly def
/FullName (CMR8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 47 /slash put
dup 49 /one put
dup 58 /colon put
dup 100 /d put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 116 /t put
dup 120 /x put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9928A7C95D3A6E9B
8E92F84CA0AA44461D2F4FA0F8B81C6F5B7BE98C9712BE166610465CF689DFAF
27C875C029C0116DE61C21DA0092D029E7DBEDFDDEE3D67E6936623AB53FA2AF
18BEDDD7AC19A19CADB6ED6CA7A26E6044BE414FFF59C0B98D5819A6B881F9AB
7AD0D03BDD5CD309C67811D5CF0B93F6FDC9AE64F74ED4E81F2E18D880BD842A
DAFD0BDF06300201C6946087FC0B999447BC370200BFB8CA420B668B32EBC242
6DB1546A7164CF55B332FE9D239B65F532B69EF9F4F93828A44C8F5C526126F8
B7A369114CA68D4F98638121F4E17F351723D9F1A902FCF087F94AFD23876517
2D15B482AF2D68C3F31FFA864E031596E597882578AC7FB0DAE2A713B065B374
3E2E72519ED6D50CBCA40A7275A7109A4F3ED8A4566AD8832890D3D1F4899850
9B757442B7EA355175CD5D6D8B4152ED2D7EEB4CE30F174FF672140354046A45
7098EC45B9DF3DF5CF7B417E201DA88308CEF4CED8E8903AF24FB8DD0187352D
25738519ECBC70304F8F620CC45D2586619205DA3955696FAFFE2082402B3502
CB682F410DE5FFE80A4DA3D3BCF02E35BD577D0DE55E7B8A33B7A2FD5136B5DD
A0BCB61F8E7F4363C21F890CF287304DDB8FCE7FE207C0D160B81E7EA662BED2
DFF8C444E19C91E72254257CD87240A70F1A964FA54ED9ECF27E27A57DACC3DE
EABB92C085030870C6CF5C40B6E47F5C0AEB30E84A73ECDABB2D754EF6EA28BB
16EBD6636BC288E62F4A38BFB55F5F4DD20FDD77D767F6CB52F9513E8EB75413
07F1877B2C01278675177499E4E8EB09F2657821613F5C7643FC064293EC6E9E
B519FFAEEA36B19C9D1302CF91FCBF87FCB57C5F995CB6712BB3D8681EB6F05B
B2A4195A3C73CB4ABCCFB958EAC533BD89560D2790CDE1444C0F2E4EF27A529C
F01052964E56F6D76A190E5FF45934BB711A3406284AF130D4DC0D8112BB3752
762CA0200CA262359D4F54C0CCFA9A50DE18C7DB14419E2990ADDC4A54B94978
D9174CA39434022FA77FB30179EF805E2189C35919F5EBE215EE2A00B4407826
CE56329C5586D8B414770BA5D45513C3AF1931D632FCE69B4CA504944E03362C
74A1177C6398A61A12DAA0F156543E2A8E9969C4308B7ACC21A5ECAC8F172541
1B1316A88C0C163E574FFD3CD22FF08488662FCF2F9344BC25D02146F36CA6F9
E2D0130C654B7485EEA9A110A33AA0C769121F81821E9A2BD062FAC158359D44
3F9D9947200EF1EDDD5860F10438B162A69683957300C75AF7546C70C97AB2EE
37EAAF0089E2623F787F252569B06C665FDB45EC9681C0774ACFBA76B98C4E89
7EB12AA5F8798FFC110B49C25E3A483ABE83B0BCC6DF0578403ADC369E013762
C9D08FC94D949BAE636ACA9F36F4E3F02296775A062077B011A705B6F1784D36
A926622CB3847533D7ACB24A4EBABB14593B5D8E1DAE2BFEF8A51835C8D4E76D
7543C126A4271C59A5881A5AF89331694F84489CA66725995DC3070F306EA447
CF30F63CD476A46D528EC1FFBFB8EACFA2BEEDCF54C92CE2BD26DEA5827186BD
3A4D1709415CEE7D51D671357B4A5D11E835F63521B9824EE5282E58F05A8ACC
FD249461181A38C2F47BAC4E79BE368D64F886AA493C61CBCB2ED401C8AFBA61
59CA6F6216D941A92AC52ACB3D7ECC28D6A58EF4CC70BA6DE23E80937AB38E89
6F05FDD15B954C0826636267EDAF9F2BB466BF79D2E10EED9B04297E6BC93069
79581ADD1A9D9FAE9306F46AC95B98C60A2E53D60CF1AA4069BE301E17E25070
F98DD67BD8642B1D07571A32766072E48BF27E1576FFEED300D7313A358A823B
49C8F135961B7E259095C9BB67F996CE0B90E95344F203922F47E11753F70D38
2ECB615403490310CEE6C03AFA97DA2F47ED47125D110FA69725BA0018F6A40B
29A307FDB3E52322A77A0102E6F57654CF1E96A134D13860D83AFA0A41112D3F
2247A09ACF7D06713BE443FA27C7E7220E875965D53030FE7D2D62EFD2F1DB87
5FB091FEAF599BA8C5167525899E578AB341BFE2BC4E53A047093168AE189237
EA55F055514EFA939DAE9E859CB5FBCF37D99484F44FE5AA5FA386B28BB642F5
5DBAF059A50FE96C7C6D834531D64F1F2E99AB2E96EE74D149178B1C0618495E
293973D9A03E1790654B67C0882376ABEC17D74785B3737D81644F28B3BC6FFF
F92FE29126995A07E0BC5EF3A4B93789A103C428943E045B8D1A5063AE71E806
568D48072E53DEA85253B01DF0BB7367A6BE4DD7BE514AD74E3F77C825ABA405
64DAFA25EAFF8F63344B5F6B523629776CEB090B546469F6A6008DE43072DD3C
DEF51F62731037D1FBD0C038A1E9B669849EB3BEBA281624F13D20B61917A109
A0A7871A73F7BAA18077360B38A4625C5DB9AB9E43BDEEB856FD0E2D3AA2E075
267B978B9EB47F2369302E87DBD5D5B422830BEC32411FE75D584C58650EFB1D
136FEB92B94BF8939FD63AFB7349C7511E5E46AA7324F8B1FFCA9C2A9E9720C0
A720918E8E860F137567D386AC29870FD990BD69465B3A3D2A0ECF2753578AD7
80DC87EBB319EB5AFE0B6F6FF8616EA30C51425FE3ECBC5F8D0B0BEFDEF32FA7
D168B4E85C804B7326A0942CFDE732B1171C643452B7099B31649CA2C38B62FB
46EBDF7180004C549B53F88021D029452C2B37D8C565BCDB0B11541039A13C0A
E45D4B68C7907B8BF08C6F41F564B62BB554235D50330E78DD02795516D969C9
66119D718798120442CB7EB9877FF84EC69DAE25F8559DCE3BD8042959F695F8
2F99845B1B5680DDCF181D806CC4903E077D1FF5E60918EB34C0B1E028422B71
CA63EFBF3F4F3CD813CE831EB54265A555BDD35AD7D723F9CFBDAB29C54F8AFF
2D35C6A3299E0A2DB470C7B141B1E3E10DABB7873AE302926BA8743278FAA8C0
DC6174501D6A289CF980A3F55F2DD5C3A514E7E7F13133C35D2697D64C25130C
DB78FC997968D6B3BC929E8A31B6D212C5128E4412632BC52B3A1049F7F2F61B
C74AE9A6AD19B9E2E240617E2882F7D29ED3A4279439107AF9AEBEE47CE85DE5
CE9595A96A118ACF1EB1F5929930321AF7732E351E18C6AD378508E37B4C327B
0E06AAE21278AFA9255AFE5C022034DA2968D260879B4B38E7EE2E11A593DC3F
CE71ABA050C004473324CAB6F3C50E85DEDA3E9A27388D8FD3A8F6E42A79670E
F7549CFAD4CCB337A6E0BAA4846ABCA059F1E1933CF11DC0FFBFF550CC4A1B47
CF7BCE0875FA747AA854534960F757884505A5AEE0330179A9547A4AE3E68479
7A457DE83326DC30B67F27CFD4AB697601CEE352F72F0966B3CEE3EA24683BEF
6D23AD51B8432C3F0DD0D0F80791E1091F38988B7A54E466A9AC7810DE8B7893
6B0AA6356597891D56190A7660BC7F657BC559E0525D41EC228078F2FBF89C6C
72D666DAD838CBF0861FBF0A1D4ECC069AA49DFBAE5C56B781A1D5D79DAAC256
13E3F9B928A2394FC71691E4355642764459714412D6F8EF803FC5F7353822DE
6CCBB8FBE5AA1F2C7F4D384039D85E7728527DF9FE0239E2CF8BCB7411C000B7
1FE660AE6A2A19229E5E8776CC83EFF3C27403935756463EB4721C51FE0B1197
86C2F17842A0FB639F28083DFD4F1E86D7D3BEFA922514ABF489C5CCE93D6F72
D2EAAE14F6CBA2BE4BBE7D7EA8EA19DB3A87350D4A52064137C3D15A5B05B03B
70B1DA7328D10713B83974C390C3270AF5A9A47C0BFBFABB9F31063B0CCFBB10
0F236C74446688198EFF039110F6FF42FA9F82D463AD3958B5FD205BDF85DE20
FE3F0C7AEEF350AEE6DBC1DE2E2DA4F4599956F59D6F121F7086DC120416E180
52DBBC4E56C09746938698860F30007091E1CC0351B43990E47208ED495310F5
7BA9C6AB3CA10A3F1B318FD47C1CE3B9FF1304321F9623E32D315AA9CE64B35B
F841E6C62B5B2488A311C94937879E5E0E170FA77AF0AC75C5E6E9F3E8F825AA
09C1702682E14FDFA72D27901C5BDE009B1E52E8C4511C6F6336251BD45261F7
401CA3DAE7C4B0CAEB91B9954BF4A97C48ECE7FAD401351D59DDAE9DA94E2335
74A2B880E4749D3D7026CB5299F16C204B6E00A20A6619C34922C7D3FB50F127
3157CFC08DCC5164C8023CD1B6C3556C73CB8E4ADA845339CA9BABA1457ECEE6
ECB9849DF1F0FEBC89E5F97C92978A500196520839CEBA6C0FD2E3D27BB4B4F0
93CB2BB565F4627C6DB62DD0E084E627D69B5DEF42EF094381B62C0D67EFD197
301B132420F51A41561E6106870147E0D597078435BE3819ACF0DE28AD779847
F3D2CF667DA06955D53E0204CEA2935E9E984E76963D3079EC092031E2A10E61
1227E5EE6770DD4D745A52655369EBA06A19BD7D95BBA271E488241199D1008E
36EA99F8DFD2A9F87B06B070158B466AA4C6EA3BA77DB0F853F0BF9A304EA291
34069714368E0B94DFCBA3BE5EDB6C8204DFA7EAF5C3406F60A7056407D1BF6C
CB85C1F432F97D821F5518BBA79AF8453A568FB2C2D025A70CEC75F46C545011
ACE3A99B2582793BA1DC655230AE2EFD24DE20A01D4A441AFFAB7771F223FA6B
9169849E727E494247F67D6E1EA9DCA06A082FE2094BD548AD7F08B565145634
E7ED832FEC1378306DDC796303392ADB0CBA130B63B38ED57B7828B47732853A
893E8836FE19CCF27002AE92C2B2CACFDF8A42F1B8066E033B965D2E9157FDF8
E1264B40813C1A4CE424274AA3528A4F09B3B53DD4D23789A68B3D17BC1398AE
0ADA2C2168427A49846DE0216908C2FFFEF4F13C1ECA12AD341E238EE46E6DC2
B71B54C52659632911F901660261E493AE2483D64E119D9924489779B62BC9FB
A052E822FD8D83178E09ADC825DF0DA07FCE7AD68EEB29FAA275A13691B4A5A5
B0BC0499CD6307610CD6209583C1152C559A2760823F8DC0B9B990BFFE7B7E9F
3969B968AFEAADB9FC0F1410EBBAA0DB979CF153F0B8C978405F8E6F2B6406D7
AAFBF4A655A15DD6D1E9A7EAE10EF89264659B09283F50B734236885FC09FBE5
98D780012FA77FCB19F15BDC522CC7312546C0730EF5225DEA8C22A3BC6554EF
4FE73B9AEB5C2F7DBD474221760E5F539A064AC450591BCF3499E3968F2CBD6B
F15BA2B37080A4129B66D4C2188524F025414F14DB3F96049A8B0E5EB2BBE7A1
AD64A988FE875FE4FE5186BB4F5DDA16983CB052D474B7D72F3E8965663EB50E
015C72407C3437142D3D7DBC055FA627139488DBC5A0F98D805C2143D99F491A
167E07AF60EC9F17C36289368D740B632CB919A0E74C412B76CE7A5906D5200F
9E79CEB9C65ADA3A0F23E8947E834AE7A329A9F0AA7A6BF545B1D7B4666C6522
CFF268634EA06DB3A82D91A4C0A9B227E79961212881A54A6762C335DE7E0831
130C45D94394D21C049B9D189ED955438C2151514F17BFC67E431DD9A8349202
2F616AEC1C7B19F63D5000EB4771370924BD4B9053FE78B5E4A244B9A149D66D
A8BF3B398396D2233E92E4A5FDC70FAADEADAFD255193D688842DBA865CF6154
C9348D590F3FEB135D4B7BD4D76A52CB140888247CAFAB25ED51F4D187041CA0
ABD956F83A5661CEC171B52AF92F9ADE27973B560C802E1E0FF51C4003D1289A
CDD09F8EDA8AFDFF666D35418CEADF3B0BE298F0D1E5C8E024D6A2017A7E71F3
3A9FEC9930F1118101E040339F9D41379170928DDF5B5875212B271DC843F612
E0C21C67263186E3D6929160464D4D5C8928E14D0845762C36FFBDE548188E20
3B6BAFE5EECA0385142F01216FB8A90C43A472C1D4447FE5C7C78CC088FC72E7
3FAFA062C338BDE8A430FDF1951B107D8D73FF9376FACDE5900BA362C66F8C1D
947F9545C5C13A53E4479B1C1A50472C05E8F8C266C6D4F4EB08E97B3B1BA972
26973B844545089C5732322BCC9A5A8FC972FA0D7DB8BD85D2F515ADE65DA479
0224F7EA2276CFED0B75B2C23AE7377F86F1F6F205D6FE19377D87E782143697
984E731F83CA888199CEB425643C259D4FB8B58DD69A96085198306494BB497E
FE7C9954EF35B679BBE3847A9C73507874F71FC97665E2A58BA41407A1745247
44A79B588D969D11CE4B863CDA655DAA53CEA5C3C263B345E782006CE9831D49
603D2D95DE9E370D617F5928BA416C362BB2B4DEF16A5D44BD24B34257765F3B
6223B3F9B54DAED69A90C7050AB97B06693D253C6894CBD7B497DA449F1D9B7C
D91B421891EC0724F59C82B9CB288DC42F2D2D7A7F22EE3D910E15953D7766AE
276DABED3820390BAF2700C4653E1C77FE63DB71A66D93ED293E25B8412A1EFF
809554BF04ED0DE83F7F190883ED793803CAD2C34A66524D3A580ACDF3C13B22
08F18905E7A4A16DA9ED2A112462FB9FFE481EC2069E484E8BBFC19D594153B7
3DED4C11762223B7586483B06BC164D824D1A6FCAE80A35DE0DB8B33396771DF
76DC5C05578EF1BE00A70BAF3D951A01C87328DB2B0DAD6E1B4C21F37D1BC0C5
A929BDE5EADF20DA60C4DE2E3C151005814F24824D33B95F700E09A0207EB602
3EF60DEB1622B91DB99A855A8F1DA96358F05CFCEDBDDDFC8446AE3391BEEC41
966E594E28D052DD5ADA49DFF65E79540EBE5329DFD86C23CC800F95221B9C18
CBBF941D2FA47EF1EF59A89DB5DD188E75EE94AD2A79E2221107E5992C00D531
2E00B544895A9204656867E3DE9D4CDB64B920B5CCA9A73E6514B36CABAE01BF
94C15603B86780190595560F792E5EF01650074EA4A9BBC6ED284B9AC2020641
DCBCEE0ED27FE58171DFE104EEE4202759E594159DF45113C00236127A46FB35
9EC705F21C0E456C1F0F924594C09AC64D4377C5FEEF764BA4A09ABA8D09DEB1
FC13B0CD202B2F04CF5D73DEAB65C36C2FA7C0DC236BEEF6D23BFFC9C493DC8E
1831F19EEF81EEDD976E43BAC6B5CED13F901DE59835FC75490EA528A72CEB77
24C38B258EC38B9E6B97F85CA8C10D8809BBE55A6FAA12456FCAC786942E123C
06D1E55F7ED04400088BEC968BC5081DC7A1B1B65166E7821679F76694F235FC
6854C8776AF855B83445D9FF919B1D80E98DE0741D06D6C5EEDB3E3EA6392530
F1BA817737D8162F7B3A36AC2A03190CDEC654383E31934C3E0A012B639532C6
26FEBE9B412F1C92D1943B7C18CEF510729D501349644C97F087F2F840074AE6
D8CD0FB2E620FFC908BFCD938B675A0A4A687F7FBE8F3DD06A62D7B6DE7DF3E2
49D367D60B10061EA86CD512F5A1BE8950D83C62695E130128E0037B62552D17
064319BBB9B1FAB9D79705E5D68AAE9B36EA14BF1A59A863BDB8DAD9AB5D7B8A
E30E2B499F952D65877C8E38EDD7DB29F9579D09E629AC188DB6A6403AB4BA3A
D358B3770D727A2B77D84B6C9EC17E29D88E3421F9B7D2D822EB78BB8BB50692
8C46DD6F9BBEF2E848A2B5669B200019802AD19661537A84D3514AEC5AA47445
2C791E01DCEDF18D9506367241255FFADEEA6183F51A9F42448A7DE413C08359
52DAD2A60FD606AFE14702BD3B0EC448720FE63438D020DEDFCDE3582FC31DF1
17B25FC152789D2F17FD60B8209D292D2152DCF8D28B5ADC04F6659BBB746CDF
145163361823CA343763AA951C640B5D4A99B7787105A1609EDD6A596EFC3F6F
2AED1652A132D66117071CADB8603969B3A2F97270CF2AA8EC2AB890662FDBD5
00EDD53F16FD0CE199660202373E2EA28D29245A4AFD3A63695F6178406A7234
AB0C0FB1B19CB408E047BF014BBEAF4C9C19445C7819748F082C19E6E355EFDA
BF1C2DC348AC0AE6777F679E2F62A0A3EB19B7F08114AE0E56A3D310D6958AA2
348E1D304BA8C4389E525553A8791632EAE32B6E8D2193932B44D230FA17EDC5
7D407CB83D2501B0D2C9E86FD23E21F26DBAE2550DD4ACA051EA0A0030107676
3643176BAFB7DF0A157151F7625E63296E325E2C3E74BDEA10C3DA37A73F9972
4821E1E756D3DE2C1FB121371432AEADF3328894170304038253421DEDED8B45
D4B0DBF3B4F29F053C44053E14ED09E3E7A0FF377954754A34A9A04FE68A437B
8306B8463247F1E670BA928FF7D401437FAA45A7875DE9FBE63BEFFEC722039B
0EFA4F3DBBA7D50C464E3F297A0F2C1AC23880383DD1EAE1BED5DC11128649DF
AB8C8D394E7EEEEA3CD2038DC582527BE93A66AF5795E3F8FB790158EAE26FF0
3905C00431377233DEA8DBB68F708D35B8617CADD87D6ABA97657F51BBA420F8
6A7A8D5BF018403229B548B0872405B7183D23852AFE9179A527CCEB64AA3B7E
95AFF13D0ED1CC4D26C28195A1F4C420EBE5051DD8F23E60D72CF6DA3E69C52F
800582625A1A8590D242CBE98E13F43666CE4476840B89F538E91533476CFBB7
26B0FA03550F394E4201064E9B7FC616DF3A587CEBE253BB461D2B526B7DF8CF
B2369C4E7C79D855D368D591EC9784932B0FDE5EA8558BB6CEB65B18B04D7046
55DA800B447A18708A41B051F3FAEC44019D643BE708DB7562468497B5ADFC39
8413E44033169D3E5C2827FC2B0221E44620B455489589FB2148558071DF2C0C
0E6733941D80AADDE5B19F79576CB170AF2497A8E2336DFE152C14F222338FF0
DACBB31D84D364E1A7533892209535F68F2A26C8A2B07F2E30DE9C38AE692A39
A850CBB4920FB633301019953F1BEF143AEF54999C5664A55EDBB39A64B099D3
C8311399A4C4B7001D83DC019E265E9FB4AC9117D06ACEA1C7915E49D482127C
A20F8D70ED50FD97CAC65C79B0D739CC51EBB312160C3FFD8234C5567D77581F
EBB744D91061EF9BBC33ADF3C070064877D2FDEBAB76E0F91076A42CC0DEBD04
6448103B8D96CA2860FD81115A05E7E9D25193381FD9D5C4B84BDAF06037F014
BA07F8A6EE357EE7F9CA96C60FE05803E4085471D465410F7684F9EE66C5BF48
0A1F074F071C5F5020BE22EAFAF60AB24DC7A17333129042654C6D3C0A970162
E6FA7CA11D9B93678B306D46A34E36D87DEA6756E58C067F6D5A192AF4F3CA0A
9B32926054BEE5D62557CB71F1E5327B1FA5DE0319A663AA6150F533728DA915
41A229BE0FEAC559646345A1720F0277E0D208822F7C88CACD22858F821C91DA
D058F8E52D16215A600C39382747034C6F2E5BB3BEA3B2C6A6AFD6DF59BA4A1C
82B5899916EA6F9C75D02E36078BEA205E042D58D4A44A2B536933CB2F59A62C
A75C1FCD421FD63DB86FA8650C7DD5D918DCACD1121BC2352C4ED76DFC1F00B6
F1233A956F80022D092F3557F9AA9079E9D4FA7ECA0EC1AA91C0F46A7CF514A8
DBB97F107A4FC360ADD826171C810C8036F4950FC5E153C8DA0319D440B77814
45A28AE28FCF57CABF67ABED3EF204B66357B456940C1A77F761F754C070B567
85734DD22C5DD917B3EB68DF2CD947A34F31ACC2CCAA1BD5F944E38A83A472CC
6D8B72037DFF5DA57AB7546F86492B3D4B64B9AD3D7A86FDF74FECFDED4D2B87
159A1B87A0B501DD52A333A2AE613A25F0F96365F6BEB8469520510D7E211951
B66159087FADA44D6C6E57EEC021E1A0D6C402E3F787BE80F613660352C0EF43
D15C7876A365682C0A9A0F4A62FE652B42DECF462507191DEF783BC1C0E0F5DF
1304B2E96B8A8ACB257AB42E5192DDCD272649035AB76DAB1E7EE5F4BFCF29D1
CC6E0185D9C93FF52C6B73587EF8838A7B3218391BCCE5E277C4B4AF8C52851B
847DC2DF5A363390A76A940DC40EDCA765F6E8DE59864C31672DD1D900729E37
CA2DE3E82B328F632D3DFACD3C5449DD5B676B5B1B6EA2D4D1B9194607ABDA32
236469ADEF5359FD55D515CC3333060C856F42DAEB8F215092780B560D7A64F4
0849C21D7F4A47B00A00CF650987999EF2460A782C5EA82DB8AFA015A7555406
BFD20A2BE6350D366F86A17C65B2683F97AFFAE098693FBE2FE458BE6DBBEC99
81EAAD061F9A247F508C209B110D76A274EE6DCE962F46016594BE2EBE3F28E2
A65818A1CB9FAE052D958F9C5BF86A956CE79CE60AC7A32F45DB6A9550B93C57
9DAA7490C29C533C96F953F20CF915DDA04DAA7EDF37C1863DBC62AB1C6BA993
1A1BC1DA4F6111CAACCC14B5E946B45406E7AF291F69240DA05ED08BC16C470A
D9C621B7EB70CBC8C69B80AF734B8073CA8D3E62F08BDCBD8D733423A113D7F3
2FC17B69CCA30DC4B49D54F697BD6731CEB59316E8BCFA527D78EDCD2829CD48
482C4C0C8863A81E0F7A68FAD7F62BDA580B53F9B3767DE8132524643AB60FF3
5611D0F1A62EEEE00729D5E7AEA768F1DE9E2C6529FDDD85563A22611BDB4950
27386100D4BEEC0613B6FC5FFA22D8316E2A6AB0078C878F4AB1FE7396EA35DC
30DB4B4D889B7526C0DE0A034AE0B95F5980E71B82559091055FD5453ECE76A0
3872014FA0E36261FC9D70C40810FCD7D12CE2C083E43BB66851BFB392ED1077
BA00966172B97B4D9AA4C02E8704CA99C6828DFD42A306AC266437EC18526A32
8B074E64EEF0F5AB7D8B8284BB9F9DC5955EDC8EB529C7E0CDDF79FBCC7A4425
EDDA3330BBB09F9A6F198004CC6EA209649C2516EFD9C00ECC69A50BAA2E3641
94E4ACF4252AD6516B19CD02816989447615AB557710B6D7C0F76E2CDE06DA7C
E389E84373178B3CD9BE0C2EDB8DB66B6908051BCCB6E565F7C20C482ACEA311
A0ACA9380919BBE98D7E5AF9AF7FFEB2CB5E37B361207DB4957B3432618AE973
B3447D73607AA9239F5AE6A9A24918E28A069036D189DED8E15AD1F30F4EDA50
7E0C678C91EA83402124C1E1D3A2D22EAA0FDE3517E9B7F67FAC81E015EEB75F
6D208AC6E4F21425F0DA8C71A5FC3D06FC92FC937985DF8041072718DD60813C
8858A34AD7EAEB1E09B4D43FDC775733DF443F6882EE3D56F495307A12D54123
4903A50E9E155D48885B7618E9112CDE4714C1ED546BF7E33677B19CFD4CDD32
40477346BDE96DFB12B865A9074144526CAE7E3B6C2EE26DBDCC22299544B0F9
F352D21484B1B8BCE1B5CC592509EAE202432483F4DBEE5C7A365C17A93EAAB9
4A5C923D593AD6DFCAF9D5507495629C1C98F00AFB0358D881447733BAFDE569
679F004D6B17F1C5F28B37EBFEC5D857A3A3370BD642C2D46219BC1CC2513402
55F4C096E152D181EEC2753FDCB3538E6E76B5B4EAF830CBFF429A9DBF7D0583
1A36BF5FC33AD2FE39D7388FE43912A9D780AD0D3D3938AAF4037E3C3C913976
8B0942E0CF9EF33A4AC71B05FD41AE08CC76F3EC7F43B1319E98D21BDD0FAA9B
96443D3A1C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusRomNo9L-Regu
%!PS-AdobeFont-1.0: NimbusRomNo9L-Regu 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Regular) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-Regu def
/PaintType 0 def
/WMode 0 def
/FontBBox {-168 -281 1000 924} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E152A40E590419249F2E4
C36159F8E54B532468E36965A38646781AB0B7F6A3E851FD10CAA49ADFC1E546
2FD2EC6150DC6E19523050F6148348A561AD8D2E2721EFF8A570CB33460A745B
926C889304C09753C2D78FB0CA95DC6DE5B8C524752C83601E7E9F73DF660674
F05AD83A166DA9BE89F22FEABD4B2665960F6FB5BC32928E1230C212E5D69CEE
0B3311A1738A11747AE263106916D8E95F25B25B4BC6AFB03B79ABB95DDA518B
41A49458111D2A1433C043627EF9460D324FFE22935F4F6DA88B8B91AE95B34E
08408A34EC8EAC3F65B6AE3E3E2524867EE9D29068F81E4372F4470BEEB4D6BE
EE4DF956BECC0CB77F8490117B22B2FB75C938ED0A5E208D88BC38B2AB8B9CFB
F1D53084B6F43DF336481ECA0AA2D5317BC83FC0E1D4DB01D0B7707EEF217E94
A7F985102DED27D8E8B009F7EF6DB91B91E78BFAE7BD688E10B3DC9AC77CDEE8
47AA4DC8EC78241E593D26EC7A60696151A2AE5325D736E99E01BDCBDE69579F
92EEEC224B6757EEDC64A75455BB665DF42A0E4CE7B99BF3E7D66F8FFC8C13F9
D7A1FF7A9D5FF7AC43396779F11C9B008C33A2043D48B61B88B03104B1425F09
675B559CA4302C001EE80D2B739CC0FD1023BF4F1FF9C01E892E59CCA7C26011
B8E0B6D29CC29FC72792FDA5E7D5D88EF98F9DBA960C96534C399C54865EAB86
0FA2E0D6C7C44B553EAC1574D55E7970744D4792FFFBDCE6FB4365BDBC2965BB
2E9EDAD9E0EBF0B620DB415AD98297F5AE83D9C710436657E74D26E83957C745
89834337035A7501803947F6880B70E56A3A404C62D57B849D28804CBE0F5884
435A0E12DCC9BA414ABB732BFBAE237001F557DEA5E972BA0838A3C7C9EB75AA
4A050DA0A529BDFFBF9011C360564FD17A02C18860AF6B86EFD4E2C125686C9A
5E114E95C71FC89A5DE9C589BFE5AC0480CFF716345265D2435EDAE67CFC4801
5BC08E7A48D683ACDB91E05F469C0C8919D73A5D07A1CCB173E30E76680ACB09
02A40A3E11916198BD69F1A26E88330F50692D0D5917E99E7A01B327413E24AA
E98EA484E45897E6AE4D6997B6E8BBF61C9406E916D56985CB2BD297E8ACFC6E
CF2D2281AD84696B7C6CB584BD85CC20BA14ADD3BC3E25DB91124C0ACF22E902
3CFBF04CC40DE331991E9075D22AB5EE0E849B340050E6C417C664A782D05549
DB2EF572F193B1C12B4635C2B358747046DE5BE07935FF1E6D7D7D4D200A0A48
2551B97D4A69365579571DE6EA8E67A3052C5BC073E1FAB8A09A1009A55A9FFE
6A5A846823D2E414174B83DD8BC50B585D802A123957F6F8719E66EE3C64292C
A04CD8CC87BD7DF217D01146BB1A1D088DBD1AE35601F417FD12116C6091E145
35343F2E7442DB7B4B326C31FBAF841787CE7602AFC7B3E76B71C22AD65A7BAE
EBF3A1AF4513558F46BC14A5D68304A5ADB71FA307A2F8803ACEB3A1DF7BA573
66998BBF3806F67FB2D692C1D37F8EA629A6CA0002C32E2FCC4077FE5A20E090
DF7E2B44D635F7A6AC2A47184E92E9DF54E6EA4361651F1C879E8E30F6C5C7BD
19B4157B4D9F5AA7740C14DA2F7B6CD741F114B5C2CD2E63CF7D0E0B85AA6BA6
E3A1DB06DEF1ED9F0A5C602752ED6D9958807993AB1C4B90CAE05FB023A6E44A
EC660E02AD5C0E438F964FB6CFD10F1A79C610ADE46912115330743692D0DDBF
DFCC29F4A3B54C712E006E1D6BD993668999C3A85463C510185BC34AAC672261
77133AA7CD431BB67ECD9C8326BA9BA96C0BDEA6EB91B6B8EFCAD3A6D83788D7
D667D4808E9FC8F28213E5C3BDE4B43501482B51918BF295AD636946160DBF30
82857F0352DBB2319F1253D17E3EB0A8AAF4771B1F3AC454B9EF34374773EB74
AFC3266A10FED5AF00F4F2FDC2A90FF6AB0C2689B4B60A5055543FB599415C63
8471E3F0B4BC35297659B8D7B2924AF04D875E139FEBB73B10C153AF65779566
ADCB995B47A4712422DFEF01EA631F6E55A414A20CAA59328B3659F559D38616
FB30ED02156873A37891CD072E5DA1DA7235CCD4D7C787C64ED6809376C8BA86
36058A7D8E9F7B9001CE8BDD67CE48735E7C5AD3FC16DB25A7BA471939576D22
8CE6091DC103F61864B7D96C3721A18C9234FBC758C87FB68FA4A4EC71782AAA
082D84A31CDD906095D4443054E22F2C315024543F73EB2341149FA8CC953D74
286E9AAF466F8C170049FBC4B650B1E6F8EF2545BEF547BFBE4EAE60D6FC05A0
F71C1F3AEBE2C2AE3872B19AF1C793F39CAAA37CEDF28E1A790C15798CD93D90
0175521CB2F4AB03FD01A261274923AFA7D87D8EAC69E3C837A6884B7A7743A8
131FB029AA915E67893F59221410C1732D9552F2A1AEA1022441B4E0C144F758
F9A6C0A4566F0C25A204D3B5FAD58C121EFD9C95FF25D586BC15614C89A7C406
BE99AB39244891AF08910BD8D0485C5234465DC5DFF9DDD30CEDA10AF87B6F4A
BF6343794C81B9CBC3FFBFE0E51DBB918628E67569AC01F7963B6475F562CE40
BEF005B104F5CA47483859D1C96252A887A5FD803BFC27156D93F7E223F7AC56
8740B1F193423AFDE993F1ED07C8918EB1D1D9349C37000B6D30D4CDD2667D0B
8EEEE6E6529CB349A5EBAEF5A7CB700BBB419AD86648FD2F6AEB64E5CE7AA25D
86A162EB80205488C16328AEFE032A82125BFC780B67E76CC1454770E955EFDA
BF1C2DC348AC0AE6777F679E2F62A0A3EC376E7D8DAE03CB25E6664A35015FC9
684B7899AB6CE9119FAFFF1565DE455BAA0178A7F0D038BFF2B740A09D302CA0
7170F0C02A9C7143D722CFC086776226E85F0116A7351DAF147B6C496891B9F3
4006745CCBFD33760E8BAB3C99BCA59162FD934D3BC1ABC8DA0BC6A85E43C6E5
A4F99F0133D4148F48ABF20439F99BCEB58638F562EB8738D255134827DE07AF
C1E0116602BB6DDD5CFAA56386D3D7F761E63B4554E19407D4A8E4EDA37DA736
3D016DC8FF6B26A3FB67A46B29D9321673C521B72380103C387BD2611D82B979
47B091DEE84B7698E91C9523B5B9B145BCF8BC337C53E57106BCFB1FCFB2CB1D
D837885F2EB8B7EF236068B03655C718AB51DEA84219D7710CE3BDA600D2D405
A7A5606EC5452A69E1CF38CFE5F50CF4738FE7ADDEE2A72866497FBBF49B8FDA
5FF5956B745AFA4EDD38DB5710EBFE0078093EA47D0DA522E23F0D27BE974490
F2C2A1EDF171B5A5F7ED24B33D2C3F9088AD43A6F26735142CF5043B84665099
AA896C8000E35BBC126EE2B757D65087645DC8FDB735525711824EF445DED78C
FE4ADB2607854F8AE81AB134D959F814FC7AA4852F1BED7F32F9EF2DB2D96B33
D1EE6F74FFBDD658D1E2A588EDDAC7D0CDC586BF211547456696F99A43621EC6
05C2C85F79D5C6566C2B270539D4CAE11A2628BC6425C308D029BAA3F9206524
120CC5E432226F4EE890D3892FB187513FF6FD93817A6BC66218BC0CFD9C5C9B
B24CB0F48015754886C5804B6EEDE7D1C4E3171E9A75C9FF2F889A02E1B6EB1E
18C6507DA66465329B5F4E16338DAF8D2F54F531083D4FBC03A3861696CF5CCB
0873D15EFDACE3C835C81CC55DD5727FFD58423A598E2E26B11AD29EFD05F858
9975823965AA4D5986442CAA1641B63746F3B0C0DABDB588179756C6668E1372
1CA6C3D730CE3F946D7D804C1819F18FC7E379F7D701059614BC255D53CFA9EB
9E9FF0AC8ACAB9E0E2F141CB1F656791A2EA561B4E79D2C526BB4E5D7FE8C3B0
DD90EA7E87C93B76DE9D2AD37498252BBA3EA9B95499378C727A84E87EACE2FF
FDA0230CE19EEA538C5947D71A0F26D8D8262436D9363ED2007B06287F0B0DBF
BC9EFC0F71935DED5AF5117AD26CDC5AE2850EF10EE452B49AAEFB2F85E92F94
C26690CAC1B113237AB5CC03FC2402D63104192DD81160B6A5A4468B2B2585EE
EF01CD882063EAF20F9765F9059895E4915405709607F4B3FEDC85A3A60AA8B0
094D7548BD0A4FEBCD4ED01809E0CFB48BDB46D74F8F0E546835F9EBF4B1BD10
8479DF02E57B5748A4F9DC21A4E33DF29F18FD72A98AE31B66D8C1D7E8DAD03C
5AA315D537BB5D75FFAC64662C92449525BD879F697E1D6C1243257B02B8CAFF
2A420B04431E2E0A233A234755A39C48091E7215916BE7D6EA3372171FD26DC9
B2BC73999D628D55F40670178F730C88C5871E9038CC668705F39A914B99C3A0
363AA5CA9C68C8A00C4497D4E5BB5326354BA6420D37946B212FC6BE1424F687
6CE07F9F205F9DFB7DBD807B6E7EF6A9DD819F050CE2F64FA4E5B54EC8DB9340
3605AF9E1045694771577EE933E598A88D18243F1AB0B7D17AA6833A7251614E
4BB60480300C53CAB8D1850242D67CB31FF430E9A75714C2CF685B381D51070E
3308B52F30FADD18F0E2B17A6133A0DFC8470125E8BC4F67335844F11DF70B6F
CEA3E66EA13A667712284442B52DEC53C70B6F3331B585758B4AA264F37E7F92
62FC8C671FB33550D3CCCA4F7FB96BC2C4563C7D80C0F466B67851DDD3608B8F
1554814D1846C82E64B2AD350340A400301BD2C1D3E441E1F68A416E37E251B8
08A9C18D539F62B1352E36996DEB087871070082410933B8B6339B610667EA52
D196EEFFF2D9E6B8CE8CF9F32866ADCA85FAC93F580FCF14B26666E8F75B6BC6
389E7A85FDEBC0D43E84CBB7CF06445C229B5484A91444CD19BA8FC48975A20A
42453C2146E264C3B78DB668FBCECE86D88B627229781D1E47E62384F43D8925
85597CB66F5CC9A4DD449577EBDC00412F2189F2FF6EC30EC7E3EB3EB1BB0587
50DF7E7961AC02510F5B6EE04E45B561EC2D1098006F532E9227C04A548A84E8
652AE73A8A9E6469BF76C5EE35D36E883E3362E8151A38AD6FA6A12F44DC287D
AE5C2DBBCA73CAF31025A3FD47B8B31676D068039B663EDF0EDA6DA2414F34F3
F8539D22DB75B9DFEF69D54DE590019C6A8A8C24A7312EE7E49C9D9385AD8AB3
B48C4FFD3D428036E074170F6233923F970F89B6BA6E8B05DDF2B538BC24B526
ECDC0AD5163EF953F7907469EC4A4C4E515888278110F613230243E21DC3DFC0
F2885961670BE2D2CE87F11B7F4CB34C4A599DDBB64D567D7F1814E550BB18DF
86BE73AD1E0AD88410F55B41EA62CF3F0A400BACA04D67C3496679DAEA587D36
A213850242B44D3D3A0124F417DF45C6C9B90489846E96852878792D64A7BEA2
83ECB2B023F30BDA21AB8C8AD7F1F7F6455E4CBD4CEEDF63A714D9689C94CA61
2BAF4375C33F9F42FF4C40D9D124410EB8C957B60AE08DA639FAD6277B8DD67B
4C2DB3D3837EF582125213E7FFFE5B26A1F268AC384D05E593B202DB4FC6061B
3DD4B30F0FC81515347A013709736F4C3E149C1208CE99EBB4BDB19A68DC6FC9
263442AD48691C2A47DF05F6A7466E87D3020FB2D59E7783C7AAB8029B889562
D1C9B79325BD873AED4CAC00D04FA385BD310C8124BA9C6E1C9DD963F1B33C92
69657AC718C065A32EF7CA8A1FF5880FC66196E9C7BE7A532F8C1112CF4A84AC
845ACDC41C6CAC48D033631B755B2E1A616B8CCB6E75689101E98FD9DAE59EE7
93B1B54A243617AE985BBC01B263933D3E20E93E9EAF68211DD20AF3D34A3498
F21B00999ACC476DBD608D45EA934DF2891D0C954B079BD2977384B96D8464FE
E759703167002ACA1C42FD15FCC4C0F0F5BA7AC1FB8A0F62164110F3599D8E6C
B9E93D141668D361EB443F315A1C939FC76BCA004EF729886B8B4D23228A79F7
8901F52D96C36248BA8AD72B6782887B17C171AECAA004DE54F34502EBAE22FE
9FEEF344C5218AD07EBB2F3269E88305F645DF1A4A5582FE6AFB6816FB7B2DAA
62C67E24756B2449412EC60294905A3D1540EEC68747915A3DE416ED5B682696
A02EA21A9C6FC7C1CF767FB3E937DC42953B61627ECB39D5BA7F8E095B9F852E
5F33B05452682F571DB75206A5F117077BE5A8813783C8DBED5C17E4B106FB78
D45AA402B5EE099644E30CE5DDE591CB24F6BF37A5987C43E34B7A21AA7D151A
5AE07F30210233815D31A95C75AA37A215135C966C6190971AFDB87663303C86
01BB35995950CB00A5EC95FC4A76220272D54B7D753EB3E53F291A7FD4056729
6174F0AB0E3BE746A4B0334EB8B904108FCFB9E570D6206EE7C3866DAF29AFBC
AEB1B9A16C5F1DEBE19C1C27AAD6EBF4CBBF8A7D8F778075EEE2C3353D6C8B4E
84FCB8FA302C68CE685290A0E0DB9FA111CD84C513E2A42DFF6E5073FAF13FF8
DE0F6155348A1095746B34AF15DF313091C59E5BF9E793F02FDA6C1A4583A323
BB7EBBC181F5EBB825558AF48AB12C9B672D764D2F51B2393ADC71A36AC0FF19
688AA91AD5831A64AFD7C9D8F85A009814CA9068F00AFFEE9D5E22BE37E5B125
D4DFF11B0EA6601D83CFA2183777A7ECF07B1EB40C8A664FE68BFEDB98E14E30
73ABF39EF520C3242A65EC78BC20D377D68BED977CDF4E50C83460EFF0D53C67
6AE01DDFA4252A5D7186A9CE74BD431A80951D069E43530B402B78690275D503
09730449352FCFACF228FF78DA98338CA7B9A3592DA380590D680C5E99DB67D0
5D1091E45AB0CCE4EA77B08DD920920702B39B446BC29BE22F99A39A8209B0E1
9365C6C3BBD518E584D4F2F52DC619649FAF3BC7D3F0867D1B8D78B9A9DE98BD
69F015C18644942E93B1C51E20F7B23D8A22E7E601FC15C2C52E82E284CB201B
362800EB313E054934D4FBF53CA3A8E4F5A17D763323249C164B1A53439CC169
CB9282C490B04B0CA0A969E41E3F04FA629E2B6649661FBF0ED6C7BD60AA55CF
4475D4C58B263DA152F71DC4BAFB378E9D13824FEE33451E83D800226155BC9D
1A36F1F8036F26BDBA4BF29F957B8682D21CF1CCFCBAC8BEA132D24A2E3CCF5D
098F7D805E22FF817AFB2938A9F7692E46AD5CAE8B56AAB796E5C554F4EA2AE2
FF56014216AEC0006CCD94C3F0934765641CCC6100EB759CD73B374457918A71
9C5B27C4DBBE2DD951ABFE4DE5DF820F1C49968EECDF403BCD3BC892094A5128
E251260C8CEE4BAE8CE829A43389FCC27560074CD7A9D04043F8BCE2046D248C
150D5B4262735A82174CBC15D95011AD571066E3583C32955BC90EE29DEB37DD
F577BFA71B8A651C00FC8F31869511DD652656AAE94C7E3F4E753906B3088E30
3B4F91B77B22E158BA172BE33861E18AAF3A48C72C749298BDBD3164E8FDF9AE
09FACAE17EFC8C1E9BC7379B449C0589D714E5BC01BEA21F193023D02D897313
72CD949D69B5D8D2BA0F0F0470AB6C672AB594515E77BF01A60770B873AA3B7E
F40EAC345B529A4A00B371819E3A6A326D31DC3FED9625DDBBEEADB867DDB7FF
0678F20EB35D0CC6E61277E23AE3D35A9206DB8F5959CDBAE076F5215B78478A
FF62C3E3342FC26AAA58D46BECFF50C50D8E38088BB76CA846A5454970197957
49ACFC81B05480307DD211433C8276293FAEBC789B1F6DF42411B6E1E51C42D1
689A14EAF776CE450374CBF69FDC1496A779C7C2B8E7CDDA498623748FA63805
41C130824BE565339A1F83FE1FA0A1A4419AB592E0C0708320E8D6C7DB6847E6
4ED200494B8AE9CB3B6F78899482D13780ADA3192E31E60E5F8652CDAC1C07FB
4D3CF9F916F9153952D012CA2367C4A1234AA8AF985A3B1B3AF560AAD8F7A4C8
E6BF37E5C449F405CE62F70C1C35A77C9A7468FBFECECD5746930017297841A2
0A8A19FB0824C590DC62DE3ADC567BB004E3B5E0039FE7704B8D86E980962317
F67773ACDE838EF96D043E0EEC1B9D820CF93F5FC0BA17EDA48FACB03DEDB6AC
72F21880180631C81482322563DAA23F5DB00C952DEE1F6CE6A0752411EC6135
4347A0F2A6D4ED63F51E58627D5E2622527B39FA0CC801EC6FB70B16C60DE5FB
E7C822301F9D4C7DD1D8AE828C9A95A5EB30165EEBF2092B6E4CCDEE6C9D6ECD
367234C37E43FA363DCA07A105162A900ACAE030FDFA52A4A0DD9F3CDC31F91D
305989948C529DB13B3758125599564D174E4EFBC2C43DF3E50EED85DAD32770
342AC16F7B3D1B5CDED199B42D2599DF7F2F1460A76422CC41A3F64B7EE1DC73
7637D9DC9B2417D0FBC2D00435D4E5A9A415C9D967715C97C6D5770B5913C451
3DD239F55EDB3D6E270E8D826F6B46B99FE0ED28EC02F4B71FD88F659CEA2A97
A300CE4EE999BCE6425C6A0B75D36AEFFF62C4BEAFE8F4A89D11F5B8BA141D8B
0B588B79F8673150E70C0CE0940B52B6F3A10DD9BFBC023A04A18BCCA4562B4D
0027EAFFD1AD974A4596E9A67DE548A642E85D6E2FFADA5143877827DE29BF58
A7187FBB1F09FC5839FC62A73CCCAD10C6A3C0081BB7F93B64B00DBE4C524CAA
D447D459E0EF4B407F5DA52EC6CCB38986A497604AF7EE5D50B0330743B276BF
158BEF56ACB2F7A79FE0D274BBC2AAE79D8770084922C1386A9B21555BC788D1
7392D67470E30C9B42B57FCF17C08CEDFDEB2CA3223509C4CBF4E88F5A398E99
3482E3E836C9F25A0D47AFF30C9F331D30B0EEAEE3375043C8B9948AF36A6CFD
7131512E7FAC679708CDEFF2BEBAC987811C6D81FCE4C237A50D7855EEC149F9
5C85AECA946D95AF42644B5C63E06CA5E669D7279D602DD871183722A407F752
521284CA7EA0D21B19D84FC0006352790D99B2DD9E28909744DD2A0E85D13625
2617CA8CF96FFDE9BF6350EB82508A3853E1C074B90309251F92207C2198D1B1
5FADBAA3944B5C645DE0D6E42E11698736C7D11B7AA1211703D38B707BDD2F98
DF579EEF4A81885DF5EB6F7CFB2752FC51E25B3AEDE08666BDB06C655039009B
DCB0C14A9DDE76602A88F59FC446D9456D7F776C8D645767EA23F93E7FAF6DD7
825A6CBD5698F455D76D297823425C0B7862380830593211DB40FA852F66E1E2
044A48BFB94BF6568C727405AC51D20E85383B394C29691397A66B2E9B937B85
181F5F0441A212610B4314648E3050174D7542ED9854E919ECA5DBDA6D250ED4
89810C8F9B119346265C46132593010B32753CF727892130F17CCC01E5C9F18A
B1BEEC432223B13D4CB81EBDCCDEE636D9151048F6AD7F4130E08167C44E06F0
F0EE19696F6AE6C29AF42B092314C9FF37797353780D24F6100DC14DE8C7D3D4
B123BA6AB44C3DE9968606D7626812B0CAA5BE163FEE4FFDB3AF08865BC05629
66BCF470325ED47A970D7B2920B6C7D796A922AB616A53C5A8681DC7E7E1BC5C
4FFFEF1A33B308B26DE70A4E07AD7D9BCC4AEFA3B5891054E4B10F6F5AFDA5C2
255291B093F6BD2F42BB54B05460D610BEA6124F4E32AA67E9331FB892179E1A
DDAB051074B02FC4F43668D18A0D62DB2DDD223779B1E65FC8C002A5EE08A20A
F57A705E58CAF44A88335EAB3C840798B5D05C3AE69DEE768775988DF69C89FC
98FD8AA47027DCB9BCDA17FC7983584FF15B895454EC39B31660AF1A8377D335
A191C63710DEF1E37BD787824C617D4C11540F45178521AA80424E7C94674A55
CC1C3605927A9A522819624C5CCE13280C6FE46FFB6897FDFA0F424777E1B139
ABE077B89AA196DAF51508F37F0F2F96C5C6B9FC90A9F4EBB08C0CD71046D7D0
AE4D2281C227072BC089F9C61FE2826162C29816F81D8CD635FFB5E2A4E49729
566485926BC26243A72E0A93A76A173BE775A7B478A3766A9F2DDDD65A129352
820AA97659AD9F02E8EC113AAD61ACB8B891F36931B164940ACE4A1110ED0B3C
EFB286F435382F8521B00B732A039705EA76F1B147324B5E807C4B41B0055630
4D45D26F55E656628F03C06D3C48474D71BE310A7418C1033DD02093D8B8D9B7
FB0E695D05021425A9DECE62F59A97FF72ECEFCF5E6CCD279E3A870A3DD17FD5
70EBCAEFFE6CA1C1057C9007EE185EECDA540CC5330F8F1E20D81DD98265A876
50FD2818ECCAB7A7E6B62FEF126F5C36766C3B28C5A0E99DACE4A2266CBF0090
ED26F09FD5537B09B442DDC7984A7FADFA6E7CA7763E30BC8DFDF888AC0C591F
66241E43DE5E879B84EDD08EEE231C8C21A073B41E411DC5351B6BE6BA3BA6B9
E8020787C49C081CFB715E0A838346B7C97C61D709BB44FFC3FF28CC116651D7
521F754F2308BE0382F8ABF621D1946C358D4AB73EC09FA4C60F8FEE5DFC7A75
935D7D414D086EEC4CC422B66DCFB1C8CFB441948D6825887C88AB7D62622D60
4008CD8BE69C33AC4EE343A7FD5A42D02D3D9548F4F12F0CFEA1FD7EDB4994D5
F660B132D84EEB7865DA0824FFAB9D4D2C32EAA1B5364F7E405C100E41DE383A
81AAB60C4E3F70EB8F3D46BF27
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY9
%!PS-AdobeFont-1.0: CMSY9 003.002
%%Title: CMSY9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY9 known{/CMSY9 findfont dup/UniqueID known{dup
/UniqueID get 5096650 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY9 def
/FontBBox {-29 -958 1146 777 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY9.) readonly def
/FullName (CMSY9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 15 /bullet put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A580F0834F28818EBF
F29D3B2C7C9AFD969BA6D3B7429E222AF78F6DE00CE2C8008A5966422936DC5A
DE549B458EB41026E123FE75E703E046F665B7DC78298A145548DEF8D579E008
39279A5208EAF898A357DF3FD9CE4450811F20B454D86B2947BEBB11EABFC62B
187B12458E022CDBAA6EDF4A89D79300F635D8CD973E35FA8D9B1240B3D30D72
4F30444BDF0B51ABA15A181A3196A6CDF9CD1D38D64C83E745A767446641991E
23EAE067609DC2E84B44D923CC98407812813D5AEF0EA21E560B31BD77D735BD
E35EAA564A570DD3294C703E16BB9F251D54407269C8B23DEAD063018D6EB748
4204A415AAC8384025FA922E7074FA7B8A6C31FD3761E7B2737D4D9C9992B7B6
DBD0CFDBD87D42E1A451FC5C7EFAAEC65D10D278470DDF42DFABC836CF15D042
6900E0DCDD36E7153BA186B8358E74F91A1D43D62EB0B821C0E97FE63F1586D0
98F01E8F6B6F2A435343A25CDD80D3AEB42DC8E5AE02F8837B84EE5EB508B02B
6980D2349984FE1A0D3ED12355D556BA483CA078B7921FB336EDAFC22AE05C1C
5614F5025B890009272DA8C838B81913C872A54F7E932237FB1BC2CE5D64CD04
2D320C8E2E610E9EE36EAC7C28C833F8A14048E751B61D0CEB342CBAAB34D104
311B421B8CE4D903D2E2518BA8B734E2637E2CA55426C4A87EEBCE637F8D71F1
54626C52083262A5A9A3B49142948BC1AC0B7698811AE81FC3D3B1C14E6C274E
CFD6C480514F3649D7725A0A14C82C9D537B1C5A9ADC816340B8B4E484AF55AA
905EA936A83FE2BE788D084469008F407447E0077417096333F163CE94CD3098
4B9712EE23120829AE2695EA63975492DB2615214B11C87ED0ADB776ED4BA0B1
40D09D1A617D4F57EE1A9B05C8D5F42AECB9C6AE67757DE6307B1A9C467123DA
773239976AB0EA052B23F263031ACABEC9EEC7A43ACD0DC2D7AD66664FB0D937
6A0F463A173E8B90B2596DD323D2350435D9D31B638112D70492F44769FC0C6B
40A291FE78AA598CAFC19E5AD195BE7264F0EC29305D36C7AB8F2A733797D75D
94C8F7AAFC49C13C108F514745A394F460294C6F3F44162BBFA878F773A5115F
062E934253B786DA2B9A6E8E843E06B97075BE99F21B330D6684998C5C340B72
09D69B655097354CB682D42120ABF5109E5522ABEC94D05E7211DACE8737A1A9
0BD3EC16F48798E67C7C85560D79366504BBFE5F7F5EC1B05B9F68F98149A02E
E53F321C213456D802C01871E9024F965258F71215F40EA71057C15E349F06A3
A016BF1B7E44DC4766FC92EE500EBF7C47D36B1EA34981EE6FE38FF4903466A8
C9020B91CFC731642003AAEB145EC0F13D6281B0838BB4236C220F6F467F7DCB
C79BB9CD5B6A180DD2ED7F94DA6B5CB833E62E898BE832DF601BFBC8148F9430
C8AC459F23EA2536E301C9DFD3FFBAF4D01E7853B60A69B5D012DCC0054C0BA2
1293D3B4EEDF7C5C78118138544A60FB1A500F72BA39E63EF5D97D68369850E6
9B6336DA577128DE68FEB71877360D97204B5F3C06E808BF95AA6D6013524BCC
85CBA9FD2CFEF383645E7E960E7AD471A6A3B8B8C3A0A0B8464836499309D82F
52004FCDB68997BAD9E4B5B881634FE1213283B6B19308BB67F2364F7ECD5534
467EF07CBE71989FFCBC6224417C0710EB3EF2676B9DE846E7FFB1AA6608EC9A
76C31724A19ABB2AD08CC102F5DE8E4E513F90A53F06D440A66B000CCAF6AD12
6F4B161B56FA5FAED65A24FA183B84F4B45407AA69624068EE0E3E47BBE973CA
C72137823F1D676131C8CD5070092CD73FC2A93E0480310E21CFB14C031206AB
411694AFE7B639ACF35C28705A115E98BC69C66F6C58E9E79902453798D76267
29B780AFB6B895B34CBEA51530E8300569EE4D500527BA294282FED81F730A46
6ED19AA5AD45852739882216EE937FC45D75116BBDBA6FF4B4423B398E383CCD
A7D705B8BA85076133E823300C3EFC9EB9399575F5F6BBF868265304B299AD77
B6B4EEA04C83E163E8CE2BFACA65F9DAAE3AD2B0F8DA1F986E6A12DDB2AFACD2
217E37B093F46FF3E20E587A9490401C2833F5844763FE2C528E151214E8CA95
018E1D8D47C9EB5FB4F0EA2A6D064680DEFD2C5489298F83B58EA7FA8CB019E0
671028C59C3E007DD86CD247889ECFA6AD6DA2433B02180DCE6ECF9E495D0976
D063A61B007233DED5E3F351D790F26D4011582735A69F37E7CCBB0AF254B925
B378522B748BD9BF152E2187DEA12BB168C42AD8D67D18567393B35DB2AD8403
5A7093EB59FC276525B8796FE81944F7F03349BB077110E182A61754ADECECD8
A5255DBADB523F3DC251A7D97F17DC76281CC632FAEB382A972D60A15FDDA57E
2F42AA338D889B47F6A3C1FADAFA8D11D63EF8D0C8C0FCE61FBD8AD34EB8DB3B
722BD86CE5B1268F704ACE82A39466DC2D96C9849B9422567FA5E728B17FAF61
59A77E9B3289DB807DF54D076139E3DFE176C3131FA4540C1542AE5AD6200FCD
B92D5DAA77DD4D3022049B6EA2A037FE96E0CEBB1608C663F1373246FA74D70A
BAE7BD37F3AC23E003204FA8270B4514DE1FDC5401B69CBC98A67A5CAB5505F2
87C242B6ECC86E88EEF44B9C79DA5F88CFADAE8B4CF437A7CBD5E0C01A9BC479
E92EA48C808820C567E74D62ED7597FCEC53DE9A0B3EBB9A3FB50AEACAB82BF9
2AA56D029357AAE016582592972ED01C0ADE565E87607F17BCF4983E3321F606
ED664B9516D404B277C2C1B0F873D469D64A9744D9C1897125FD471E71BE060B
A3A617DC8D812E184664BD83EC74EEB5197611380F2D859E1A61A14404493D04
B5537C04541E557CB5039905F37E72B762EBD2321633E12C38C409338AD5AAD3
1A507BB2B8F5235F0614D0CEC2BE44CAD504C9B2CD3E45437A493A33B9BF8A1C
3FE66B1E673449A54E8E3C3470688E94EE4404C888583F7C96B43A592D586D25
8AC1F206EE5FBF3AFF7EDF9BA91EEC6BABD573D455E0AD6802E7E23A662D4F12
FDDA00EA054CD331DF86C099C4BE8AB4EAF5D8EC1BFEFCF50302BE61E6FF26D8
1E88C544570E8D6F7D875466C70AA91D6CCD4DF4BBA34FC67191D1692D3FB76A
66F114152956A5E38345E7495BEB1A389B7D0A59624ABA784F77C1BF7728E556
F9D97D71858D61624C22C6914A3A995BD75922A2C37EF2CA91F923A4561CD3D5
2DCEACD9C3A65A9FAFFFA4822E79D6D89D6366DA6362DB16FF061840582DA35D
E4EE8308040C2DA5F298944EED470D6E4E1FF58DFDDA96C20C85E2DF2652E12B
2EFB8F890D301E8CE777678FA786E552A62A60DFC369AF4BDC069F5457FC86F5
1FB1A38A2222EEE86FE1AC9A8227663AE33217C1F381115CCD04D2F381A27E97
36D356DC64615AD63E1952B37AD4F967317D76A6DEF039CE8446AA634086BFB7
7B0B34F595B61ACEB346F51ED10ADDB7B852B5B2BCFE416D0435A7CAA4C9D9A6
152D9AD938F39E9756AC752F1604D884992BAD768C720C45479F5AD8E53A4832
1B44D6109DE4460A662DA6081465E2BE02ACBEB52259E046767DA24E1416FF44
D5AA1D303CC4249510D703CC6CD0FD7DDB078A91089FD86ACE1721F875F019B9
82D7C5B2530567F2306F47DE90EADDCD12AA1C693B1982827DC36A74C86474B7
0A8A2E084CA403AF654E2F8488806B943E38ABF544ECD45FECDC441DD970B180
FF3FFF1A50D5E22216B240A527F95DA1E43770A3867F225DD2A8AF01A965E06E
A063997C4CDC0B16B52F9B9C8B0DBA94F88F26A7A01E596DCF8F33DA3DA5B02D
2ACF771F25A1372F521A80B93DB0337886FCAC0A2E8FAE0D7E1E0C31EB43AE3D
B4C2020F322A9857A9EADFA7782CA70DE7421B9A83DE1873EED8D096701370B7
7EC33B9C104E9CC16DF8C80ED24D1F91677E355DF037621ABBB75E09ACDBEB82
30F1AFB82FAEC4D9E2DA93303F72C1078679EDDA35ABF2AB38DFF091AEB273CC
5A7B29C0164977160CA75F62BC20474C7C1F127AE7E4DE865FBCEF852698AB80
B61340CAB6F86017FEF570104E46B6FB3320E78D387CC58DF1C4FAD8570C0126
B6F54AB5BCD47904A9255366AC9C88576456D3CF605822269CC65979EC3CC740
AE3D09257BA3AC7A364A7F5EECA3E658AA20B53423553C416D98FD8100D80A30
A1B19F029B7473070D7C60CDE51BBEEFD2B45B1C82F4FE32A5BB6BB5BC32BBB8
F600ABE893B83B806A5435AE2B40E5CEA9068C6ABBCE73C9B3533520439F28F5
E171DB1DD90B2EC04A1F36767B2B97D4EC0FBF217D4E80ADA5383BADCD7E066F
5F4B23738A14F19AC7D765119AAC9AB6CD0A8AD4EAF8955CB9F5BDB0156CACFF
236D24E8A12AEBA549FAA9D7053D10AB7094B5D9B86FC7375E245EA8D7FC64B9
859A1A37C006E0449AA8DB8B89730348C71C7E014A2EF8D871AAA856407C33C9
392720173DA60850938D0537564455C3957631AC8F8C0B3B29BF6163828796E6
0944C3000B990715188203B32BC4E3FCDF173A4A9C78753AB7D76BB9A4C2DA4E
3EC638753D6FF6356EBB07D0A9E8D3F50EA5451FB6C836B9E5EBB8F1331C8CA0
B0CD271AF316502CBE87F652B5ACCD43176AAA32C6530C69E77E3C85DA496F3C
06980ACA739DECB5D986622AD81F204579218660EA791774C2D11878DE23F858
BBC4ABC7EBA01B7FEBB32BC914FEA8E5720731FD43F8A5CC53954D13455827EE
9C7BADAE8322E77EE7413D6C86E6D378FF8044F50F529E765A1CAC29E8B1D91E
CD40F70F2D4890E0FD04502933212D5AB176DB143831958605C1667B8841E770
CB4D513DF0C3182C23CA653A7A714B2A8DE29D6B203F5A9481E0CF3FF073FC6F
476B0B205136DA43650A940035A970584DD7D06B7CDA8E960186158B75FE3917
9B1D0FFE45EE1606C875DF635B80F5A9E5B67A6ED748F52A53A710A45AC20BCF
FC96755E685A3B0712D5E09D860986C61C631A8D2A505C57D57C1D4AE78C552C
DC5C9EE15B82A4C3020331B78FDEFDE53974C391F375E8118EB7B2D23DFA3F15
389043EB6F33842C82B896073760197B13D3DAC172D77779DF517AE31BAC43BF
5BD6F75B59AAA59C7EB81B776FADB720282DC06BBC9C33AF5AC0BC59F6A0044E
3898A4B5868EF32BC4F980DD863E8EDF6DE3E753A7B3E39F8E8BCB3D3BF14EDE
3395E73BD07440FCE88FB28A96878E823C1E5519650F2054EC2CF733EB8AEB0D
510E5659A3179C3FA8E31EED621BE0EA648D76C370C3CBD8043BE206F28699D7
5871DA483AA5D3580CD55902C85DB9EF5CF5D3191738FE64DB42410F5AB8ACFC
CE07E524BECA5633B082F4793002A4A7215AD1BA31159A30D72AC60EDD0B2BAF
73C9934C85C5372B47BCD3ECEE463CADC05CE8352EC1399ABE2465AA53E5965E
79400336B1F5D1401EE2DA5807F9701D1086DE505F6AD4E64DD4F3E5E90CD64D
FDD25E6FA03B679597CFB8C5C1F03641CEB7B9B40787E70BC6B063621382E3D5
1287365426E44A2EA208C26155CDF782F404CA7B3C6D379103EF4A51CA3F1343
22B04A0B55CE5A7633175838B9E50480E9B80446CD3B541362E7A10BB3C58A42
88C0FF580B4A0296073F5B6505E4FCCA5D4BA2F7E8D59BB04EC9ED4E664BC2BB
8754777594DB26DA0985663D321CCD13FB261BE8A771470DDDA783493E452A87
D0AD01AFF8EDCB7BB159F1408FBCC52F126C46234CE6BEF241B49472102598D6
91FF2DCBA2CD0E6658A61DB3591EA02E4DF202954B655C5A3C34B14CB60CF9C9
2A6683AB282DFD79B33FF3A6AA524582F174F11A5568159083496B242ACD2770
0ACE8473D363AC11250E5DCDCD3CB2281B71FCEB8AAC1367D0714796AF3BF01E
80BD4B05A0A45E6CFA6C672850B9DF113F5EB15923ED885A0E4488D4914B62A2
FAFB6A63F8AF0CF0DA498E1BA68C4150B6E59CBA80BD17026FA09920006D2075
BC6F1010D0A10648A20D8ABF8137BFCD6A5DB3606F6B3CA51E8A4645D32E5966
6DFF7537F65DA4268A86BCA5791C21F5FA9F4C2F1F6C1AFC4D4BADFA63609C4F
5F5158608E6FFD9C5BF00646C3AAB983DDA5E37A9C2EA81796B161A06201FB6F
8EACE87008EE7A008BFBA69AAC04D73A8C0447FADA0249D8861ED405537E23E7
BE68C4349FD64A14E3A53D6C6484E704BE4AD5FA0269F56D3B752A070D9872FD
A5CEE543B413F13CC4CFABCE885BA4533EA0969FDADC14DE6846B330552CFD60
A75BC8C9DDA76102E48DB6B81975A1F3FBE182CEF410841CC6164AFA0CE51FD6
8E8E6F0971277052E21126909B5EE51508306B886E945C11DFFE1C91BD0D79E4
554CC7D6A774C9B98610A1E49C3326D62F157CA9D89B56699F32DBB9D49C716D
CBDEC052133F8E18E8F3D7A59008398AF3E4E1192CFFE4D0B7D2ECC8DE2ABC1D
4DF7F2EA5EC0DD756CB2FF9F95FF10E506463D3037BABD221C08506FA603DE1C
DC45A5998921C4023E501DBA494C1F41C0955A761AC3D5B13A88EC4F0BF40756
BAE8645EA76027B8AF74726521DC129B9AED4BAE67A511EA56EE9D0D8D30C7F6
FA8BB890375A263A0BC4E9CBBBB8F8F8613A43B10E964F8CBD6BAA2B0BAA70C4
4CFAF6EBF4882B610AE13689823D37B046FD26DA85BD96B896CBDAB6662573D0
2CB87D45A86A016146513441BF7A748F1E9C2AC7172460EA628BFB22F9797905
F6DF6749F13C7F234A2CE4829D41E0F53EF3C5F52165297AAC4B5AF4747A9F53
60370B4C0110DBB42C25308F489A856B6664371FC2126BAF4710790021255653
CACDE1B9ED6AF5C696C3D8BEA4698DD9045B3004A5C4C03EA994A5445C9D4EB9
865266850047E28F2D82A08617E9283FE637CFAE4F7F261CC2D616A8C746EF23
7360553A6B434201944C04B1522533C61F615A20BA3678AF8D4BAD1FB548D82C
72D41699FB96EF40ABBABDEE633F05B4445BFC4E6E661DCBC8EC473BD2BBAF7F
75F7FC86CC7B1F3A2343EDEDF6B5F7E98A0BC4443E21611F4D807FE7F597A37A
A4DAF8A8E6D04FEFB320E0E25C61E156A72A3E4A69EDA04B0E3B72B69FC19E63
AA33A682663A8F37F4FFC1533CCA2A80DAA675DD723A7E13D9DAE3BB0F5F3E07
99BAB9B9BCFB29B73FC76EFA02F4F632690651DAAEC2B3688B636F0FCB156047
F8EF7239716BE5D3DB2FD1DAEEC11DC2D65CFBEDC1C950CA737A04FCCCA509C4
7E47664E160322366F70CCC641B9B49192AB839E0AC609AB2FDD3783095293C3
11C56740FB50D23AE9FEAF66DB13F35367B562F15161AA270EE44713881B2387
7889FD10198AD4D750390811714DAE7A8DC6F5770224E93408F8CCD4F8712A9B
3C583C983D98CCA7FF9DDDEF8AFA292781B1D7089336CA631413EA0728353E8B
3650EDED7ABB6E5DB5B85014A3A9C4C76EBB664A5B3E0F3CB2ECFBB6294F5C4F
69EA3AC8C071B122B129A28E04FE989DA9670EB6246806A516517DDBC52DC001
4C027D51EF1F98506F21E63D57FEF267B913F1ED4770D892239222F3A9035C35
FFA38D1AF3ED9A8C02235D7422695D30A2F801389DADF34CDC489EEB38089B6B
026D884EE1C24FE5785C383B988FFFEB5459A1644CA44D353503AE117E87F956
393DEF6C47D4E1C5B1A33835C9B8E1B98809DFEE43C4D6DBEF1C2B1ADE4B8F13
3B5D224C25927433D5738B0FE019CB88B1F373E4AC2BDB5BD86887FCFC55D330
CAA6B2F58179CE94608E69240E41CBC436C8E761E295B857FC933CEA15A3839F
B798BD3C1E18BEC7A4719B3E1F75C42A86C70CC864EB4A582875F3F1EBB30B5D
DD611D834213CCAAC483B43B62EE620C1C56CC7E9CF8704FFCAFB05975961FDD
A498D72C313AEE1EFF147266263871ADCDD2D2CD922A19655959CA79B74895C8
8B7182B78039D2C3956923C9DD71A04C7A9CF032A8B76B159EF695080C2C3A54
59F52DF5237EE2205F873B86412505B6FCA5AB5BC8937AD9FF4898D9706384F6
1FEF1A5C7C895EA1EDA6A750662B898F653E32D62176E87C9CE253A193BFAD25
75B7B23BF4B34665B2E845CA1FC919DB615759DDACFA832671761DD5246D5693
39DA8350346DF7BB65ABD3FEDC0E43AEC9E0596676BEE5AEBAA9268DE595113B
241EA196E982DBD1A59CFC19FF3234EC83BB562400A55DBE66114C1845B4915C
87381A19BF8224AF528721E68599FE269D13CDA1C11845B68B2F374E7A9DDC32
6FB44EB81C696E5F200F9128AE9FA7BA0DF2B5670BEC2948A577EA4FE9951284
5A9100287B64394A993BB8A06EB884B79EBB3F5AB86E8DE4BF9AA6628DE87FD6
6AA74AA19CF3746CDFF52C7FD59B1AE3B9098DF531FAACF42ECA02BFFB5B882C
06F620772509B14AD704ECA41D6473A1A71DBD87530D960554EF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR9
%!PS-AdobeFont-1.0: CMR9 003.002
%%Title: CMR9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR9 known{/CMR9 findfont dup/UniqueID known{dup
/UniqueID get 5000792 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR9 def
/FontBBox {-39 -250 1036 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR9.) readonly def
/FullName (CMR9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 14 /ffi put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /endash put
dup 124 /emdash put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9AF72336CC4AD340
15A449513D5F74BFB9A68ABC471020464E3E6E33008238B123DEDE18557D712E
ED5223722892A4DAC477120B8C9F3FE3FD334EACD3E8AABDC3C967C61FF003B4
B10C56D6A490CE9594D57A2D431B9E5E10FE3D8832E227A7087611431ABCD029
85F4865E17E17F8CFBD2CADC97E0A8820E3ACEC873F31464466A9545E967E53C
DBDDB8478E69063FBB891566BAF88B7660A4405B16834761F041CCF7650AF955
F9E853AA9F5F4382E1FE7D0C5BB4023818A2383F91249D48CE021250EC9EEB1D
2835E18FB73026250B32A8849067D5E2258797C917F998F2D4121D96560C5FB5
B5D3471216639A8671B6DFAC5E3554EC36D9A72518525A795590C74DD70DA3A7
78BFC43E51D6F2BA52F17D4DD00D389D3983EC54912AFF73684A8A7E345537B7
E62361C04A47859DA084BC72EA53512DC54132EB2EE671793603015652EAFDE3
41C4B6B679BD60AEC5153EA0D2200CB1D097DAD770F5F31E6FC475A225995277
B867B731D5401E2D02B85BA85158C80FF7E2BBCC42B98AC867E67D25DB656072
55A0D32AB7AA483A5A9686CEA4E2B3031D90D84DB3E2DEE7706C91BA81CB8DAA
700E5F61E07D6998C9552C81B66FD10A10033D49EF3BCB0FF22ED0A3737523C9
8F851C61C4BF8A213BF6EC70C956AE48B5BD276CC0437C72BF6515B10739919A
F00F6ADD2798CB211668842349171A5AEB0664D2C44397E55A4A9EBDF54A3EF4
FBBCDAD9DAEF4B0CAEF7112FA828F2F8D9F633D37E5516AB5ECEA87342EF8DC4
3A50548490F5BC9A8A1F98AC7AEAD9D913BFA10CA86D73AEB5BACC1FEEFDCC15
B3655522CCA2C772E902FAB2A6FC153597D52763EB44AB7489FF061F7F58E8F2
AEAAF4D17F36CBFC00D3C653F335D14240C87DB4339DA9D30A5BD1F502BC9013
461B9DB2FBEEC01BB18990439A0E9CA6576BC9CF6B1A3DB9386C4A5D4AA6A5DC
CFA45FB75F22E10ECB72565DB441A194902C91427B4F676E531C661F7A2C3C85
CD534D1C89B6779B2EDC8E44667B992C20C70B663BFBF680A6CF4383EB7CA26C
4D1F06B5EF4025BBE65795F1EDB5CCB97050872D6C07BC2974F905ACDB7A765F
291365D6C8152153E7F017A25FB4476C60FD9EAF9A121633DBEAC32F62850223
D6418566AB350F90F4B35F19598478F76B63E347D4C61E203D4DB8ECB9889181
C387F4B663A502C638761D2782BB96EAC81A0108D7BD6938F67FEBB69218D115
D8E89CFABCE15C6ACC7FEB983332A51A6A73CF4E341574F366713D7FB29956D9
9BF238A87483D37E526A2EA2F101EDD34E34CB92730DCA7235AA0027189BE405
2DAB4AA021A30C28B26C50808E1E965C02F6212EC7C72F5683339425A7739380
A422E6191ED8453AF0CAAA424AE44DFA7CC5C2F6EAA8D73A5101D8E9517DBCFB
2858D0E8ECB7DC430EF23A9E4428CB7DED8D035D6050251AC101A2D0E884721E
2F21E573F948048BB8FF888911C508CC198BD750083B339500C426AFCD5634A6
AAAC1C7E91249667B231BBFC64B4317192FE07FE9DA0DDB5E517D097AAE46577
9555F29D45C67CDE9812CAD03F220B20519F2FF32DCA56A554D4296FE2D1F3FB
B209B5270E0E695EA5A0EF1144957CE045881AEB8D05D72CE57F4D34617AED67
0D3AF0472CD8D60933651626550366E300E72A9C89ACD475C2E2ED9BD44B472D
9DAFE943F8E02A6DC38E447EED964624C37C3130E48211CA279BB6A0BD59466B
42F3D89B5746F29E084E22CF58395AF0F29E55113F3A3F2F52CB3A6DF3D026D0
C81754B8E2E4A15F6943BE9D0087D5166060734FD07C4C57D7C7D90E8C9C1F35
623CEEE3ABAE75E1A18A1E3B50B7266BD2D8E812CFEB4A46B856885B185640D6
B9C22179551002B94282F57FB433B7FF157D2F0D240836B72AF4A331668AE5D4
E6B85415F4E8B9D2F9AF90FAFAA0A3866DF417CA5A31348CF9B41B8F5F4D2F97
CCF7ADE851B5E2E2F6E319AAF5792EBB9DA2C6AA8B73D889F3CDAA42932CDA7D
07A7E59183CD89520DDFC36E5D513BFD8AD0886046585F29B4D7F42CC0C27AA7
53915AB1167D292FE91957E94A57FEE2D49C20C9070ECD736BDEE0F046E60350
EA539DC298156A4E0D019E7D481FDDA6861E20678516AB80ABEC1F09B126BCB9
52E8272A06BB6DD87ACFC423B4A4FC9A3DC8DCAEBB807C5F748F1FF8B17B8B88
F426206BF1B7B7D239D26BC3CF0776C467A98CFBBCA5FB6145D5900137ED19DC
D002F10704AA680EC753C22E29AAB15712EF22AF73D80820A1EEE953463D4EA3
81FAF99518D4FD0F862A324FC44C4B9542A92C5B60CC983CC8F647CE5BDB4D6D
B92B380E0E5F7208A9CD91FA9A469548162C761C1BA05AC9D60B766764D821B6
B4E17F56CE455F06EA1EE2D38FE47581746C4C5FBA63AEE2B58E877D1A8FA83A
31C972D53B64E92EEEA147426A92CFBF76FC614119C6E9C6476FD6A069C803BF
E949FBE50B5AB1F1463F9747E8D353F7BBD991C4F90F920BC9407D8E24720293
846D052214E60390C3CB926D38C83AF697425D80C2B4FC4706615B905516B733
46ACA325CEA68FB21B2D17CF0B68BA4DF249368625CF83441EDBF2B86C957C1E
44CD722BD2537CE84FBA07EC7AE15C840041B9F7F3040072E6084CD55B301C08
A64A53BD4D3DC30DCAC6C152F316ABC59B8EE978793EBD568849DCC2A75A495A
BC83470D503F8E389F54B4A4A31624E83C601B43AC1E52CB811FAA7CA6B644A5
1AE0BFD4FC774C9C9DFC2769ABFA9C83F900BE2DD4010416053A1D4874E6ECF4
D86E44B4CAB15D53E5630C144B0C15B58DAAD785BA298B1893D1B09BA5D40344
6678FD2D17FF6674433C976D6DAC659175CED26139967C9B2B9CFFD78FC2570A
E5142141C2888DBF2DC8503F9137CE7CB21A1EBC2D65BF33FCEFBC85C9CB736E
24E8595CE934AB032CC70BD6A3B0F3BDBFBBE185512FDB7BE3D4A6620478453E
75D044BF770B44C9741E31985E6DAF5A318D7BED12B02A4BCFE60D25EF12843D
EFC9BAE2A3F2EFAD66D7858E83EB46BB09D2FF8AE9C43844A7001C86ED97AF51
C511E3A89A1BE349FF5215D1A57843EF51456B9838133846F19BE79AAA5C1AB0
5F400E5E8E7B0BF96EFCA3B8F0894BE589F2C9FB6C97BD16D38F0A237CD4F034
099C41F85C7E2C7BEC8E02C4F327306A53B4B48B26A8926670CEEF96F6DF2281
7C2DAD99EF8B81BBB777227C2475AE7400DC393D9C0445E925DB1E955950F7AE
53E9AC4306794239346A419F7B5DF4168382EF5956B81F83BD4BB7635B3BCC84
7D84D05AEDC02D14675D777CD19B08124001A4F4EA96990D96000C082A12F00F
7FEF793A7FA69D56D3A38D012168C5458B667190AFE80E02C816CAFF0A71953C
D80B085CD286027E2FDBB05452AA762FD7C813B2E19A79C74190E04E746C4933
CE1E300CAF5DD53B08110509BDA404EF07FA1BC5224BF1205DE8E0C3276A13DD
866675103B960C5F36644F96B4FAC16F5D6E91F74629B318FCCC8E8CB13EB76B
B0B7B90718D913A52A04732EA3667674994A325A7973C601A7DDD50F658E0826
ACB8E53D4914B0274AED98D7BC3B2B7F9D48A7ECC2F8ABEE05CF2C4F2B90360B
B7DF779EAF3E103D1D83EDBE32DDA873768D8C37DC10A5354A94B4153049AD64
FF3E0BB51AB91D7C0B4134D8731CD0270DAAF19BED9EAD800A14B65B68EEE89B
40DD624111670DDC7C030DEFE0D1B96420E249332445C155BA96231C88E70643
D526BDF3CA1E05FEE72CE2B881CFC01ED780C10E89F0828AD55FE29043BC56E8
2750A6DD15AADD54492F6092618F4CC6A31766B17FC60766D18C307EFC9BB787
39047DAD6B38419EFBA46B4E2C932F97451FE78AD75FA90DE409FC6DD46585D2
1941F5ED47A8FBAEF5A917A240959E8D9F9917DEA3247D9CAE6BF7A88DB4C4A4
F9F5A6DCE542420A032FF3392FE0F3357B51F884D6181583A554F75B1DF192E9
253CC828FF06B0D992D5316435980B044BB191508C7C45CD90F797F88856424B
14A5707459C50EDCF3E3D8D1667AAA83015405354CE744C66D9A5728F29E0085
6DBF740717FA0799E3BCC4ED7841588B496A5E549B953A7FD288B4A045DB611E
E3B2F35963FF18ACCB1C968BEEA2CBF52B3999AAF89A05320BB2E97F52CFE06B
9F10E3A79865A3059A957F97972D80ADF678A36E2B586C101FC6AFA4D137C13E
EE7102C9B8EF78CB057F8B7476F146E8FF5C897FD5503DD198128CFF7B5FB339
FAD0AF0EA967F77B07B367A4AC9F668F8BED99B98E87FAC750EE045602D76C3F
289FC9D97694C96AAC0AD1BD3FA94DF2CBCEA24B40F47B9B59E54EECEE7AC4C3
A3F5D19160E4C1EA830D57FBE10D8D46AC5CA0260F22FAA45236F0F542BEA9C5
5A88F878F68B36114E0573900C65E305462B22A3429A17C7A567694414DDDA46
5F30542B8FD4F00F6C295B2E8D3A986B953D96822DB2ECD48E8BB1763434E652
152EF3717F5E7FA10FF0B01D9F64E22C5DBD7254629658887BACEC0ABDE972EE
67299FB84A05B3EFE22B6976DB4CCA384232DDAE38C31623A4E39EA2E82C1EA3
BBB68F1A7DBF405DEC37CB7203A895C36A44BD2D63F45B3888AF91D37B510A59
3C921BB44DA620892AD87B665F69F6FA510B071ECC403CB2BE2F54B3969C9E88
713244BC97C1466DA8216DA7600C221E7E7EF5C789D2E12B36422023A03E11BF
2790FD6062FE6BF62F5010A92F0A104B76E255A0975E04F6F20F760881BDA7F5
D834D1D328B6EC19AA7D5E5678A84C74C82553DBE8BB5765E84F5A8789032143
6020940B4B8D45FC3433D356E28C25F42D0C19F911213D85951B2B00D01B77BB
A4C72E964F9D95422BEDE582A05CD52E03D28A996E6CC8FCD910CBAB728073F9
F9FAEED5470FFA55930447C5BA816F826F983D53EC9941EC8364B3060FD74C95
26D4F5CA753B574FD2FA4D1D333785241D8741B79E628BC852FDC35478C5ED9A
C1BE88C5EE7302816E65C12B58EA16FEDD4672EB3E24B6EDAD5DCE263BA8A970
350B651E5A9F3C281D85BC3F44EADD0D93402E36489BA5185E7D388974B0B700
70575188BB610CCA20F081E2CBDA13DCC6F72567962ADB342E02C1E763B673C5
F7384E24C6E1730A3A790D690A2103AEF88E0C1D4480DC9B25E5C8C9E1919C95
F83320179B4C7C4A26D559BFB24D7D596FB73758C9990C451E77FCDDD17763B8
9C30A9534E3CB6680D3D419D4B70B0B0A0D160FCCDE169714E373F65B7144CC2
DB9A44E041211E1517D3148E65A2486CBE5E74E625261CCF65392FB4F3091473
F9E8DF327D59A58558E5C9F7190DB577D5DC658F5E36258291C708B3D224653D
064BB6079F91293FC733710893AD1C96169B30CBFE4E9D52E7EFAE4AFEE68FEF
1AFD5E7E9DFCE8DE332B0FDC0514F9B3090AC85BBFB527FD8034DD33E9576325
A8769AE09AF1BA792447DDD932B98FC9486B39E0B04DDB3EFB7A30DA0940B33E
E27490E0E841E87B1C90E5248A91742ABEDC10F43A8AF0F9C5B4A4930B1AADAF
01874B9AC3B8D0DBECCDA6CD7E96471FAA15CB7F8A599C5746327CE392224C3C
40BD60AF97BCA6FF6FCAB2FEA114D7300B89E91C3BC92D5B3E2C83BB37992D8C
72F661EFD0AA034C738C019DFB79BF40651A1A34BC1EB9F5AAF58F8B3DA32645
24AFF8636486F08BC21533B5FF7391B0679A78DFDCB03DAF6BB7475A1D51DAC1
EE4BE9B986655D1FDB6936445EF99B58B303FE79F11275EEA96A9F6808EA8775
D873D1052FAC93769789C700F20EB2ED6D15676F6E563A769CA9298E463FC311
83281483B1C953370D196727A6A0E66D32D9480AB1B6DCA77868C1A2D5DB6483
5F31EB6B18EEFEF1CDC31533E69B0AFC6B30FC9912DC89BAAEEADC30BE14F448
1A6B70D36A5D9B01799BEEA686066114910842D022EB464A9A1E8F0A5628BA69
AA9A1925CCADD44703BC67A89F3B48E4680726DC4360274185CF3C8AB747A8FC
4B928AD62B092EFE48B01E33ED756DB696171FDB775396BBA138E056F71EDAE3
7A1E4CC272B8418114B0E81DE0BC43DB3C133167344488820A92DF10FFA26FB9
65FCA2C87D302E956DE6B4FE145145440C83DB43A68F8B29A592B127BDF49063
B7F11E155CD4CAE305525BEA56B7C412A6260426407BD892A3F2B444AC3421E6
FB6E6425EB5C3053C5644666B80405530FA0012B54557327C98E0F4F064099A6
4ACAAFC1870359C1B6FBE7606BB8A26026AE20C212210449905E628AF1B20490
8CE908B7EF3E3DB551C85AEB0F7FEB6A8D215B97998E5DD9C7CCFB2A9402B8B6
1770D4023777D4B45A73F471355353412C51D4CE71FAD1E0AFBD87B5F86307F3
10D0B94F1194EFFB64AD5DA54A4200490F609CA8B912E149F8217ABB1E9EBB3B
C4470E7365CF5E1E761AA1945044B225BD53D142F6588C50E0644740F7DD55E4
8F73201E5354A8BC78339211AFC4935F44701FBA043AAC4BA4698E9D7700029A
C79F992F62627C91EB855F64C4B251718FDA71EDAF082A0C7B00550949D617A0
7071FB14F05620CCF2180941341D8E60FC88823438FD728A4042AFA8B853107F
852F631518B61B234565291B5D5B89DA818DEE3AE3B68A2869DFA63255CC882C
3B16BBA08FCE3632E57FF7A07F857A1F0FDCADAB39D77960BD827CCC8661A997
648BF5BEBC0FD2286C2A112A8DEB9CCB6330A049170D5D68EEEEA011D3EF3EBD
855236B9380087CBBB6BE24191F728B7EAC5B50F7A547AA0989B7C7D3437DBCE
1669341264E290646F2C8C5A3ACAAC7CB63DC692FAAE13E9B40E8BD39FE16A0C
1660CE66872D061056C04DDDC265C024BEF8B7E3C3AEE76FE5C9702002C28BE0
B180295EE00E567FA2E5CD1638226D24A7C732E1BD8103B476EF5702768689C7
D4FCD47F2AB94A2B1FBAE6ABF87B09E7713C773FB65CA83F7318035B332B9F99
24A2C8897527021321D003AAD7C273E4BFA2710B9BB26C2CFD3D9A5D7ED1096C
552D50028AE2476FCD6D12A5D0A897521313ED1A3A8456A70C16EAA50A3E6733
6DC89FEC56AB54A579EF264377A103939D5EE00A90B4F2206D0023AF9491FBE0
800C6540FC945199E20E945F46CEEA2E885F6800B9DF042BCEF4291A4B1A62C8
6A7ACFF872B25FA3AE69E0093F3D0FF13A3313430C06F1AF94D500431566F659
E8C859A5F80F5BD2E85C8E32603D3745628E8FE6FBC50FA68F9C3811A2BEFEA4
5852CAE2AE5AAD3230ED050593BAD0A9581EB7B327C6916B8FC348F4C23E6FA2
00FA28AAACCB3091C1D83F7BB88672A53A2EA3B8C7C24374E400C57F0F01019F
E52D5C47F389D4C9AF126F4080F9AB8D1C8F470932BBECCEC72A9796F6E965A4
82057DDB43D68298A00880D4C2E2496F26F015FD83C5549215753459310339B7
6B2961EEEE74DA31FEC8E2BDDA42D4080A32372AC372524BDDA580EF6634ACE3
128C69D04D890DCA337212B109585C665AA83EFE47D5BABC2627A86EAD11BF7D
744176652C7F9497785A7A06A994ED8414BBE8B26E74D48CB83FA24AAFBDD507
84A90195EA3D77BCE8C2BEDDD1DC52E8164DF15D65B916EBDF3A8A76849653DF
AE3CAF9561AF3B705F75B9E5DFD6758DB65A2FD54683759912E0D0035CFBCD86
5D239CDECAAD9AE5D95377E0D3F61C2AB7EC99ED28D2B4A7B6004A566B43CECF
7E35419EBC2A47CC76393F4778DA801EA75B4C1FC38062AA77CC4EF0E6CB0C81
9A797C01F89BB58A957D3DAE33E4256B1F5A7D66C8989C512DA066D6DC771548
F2DA3B490834E7B4CECD9293A5DD581A3171DB1C41F348377A602A2DDB80C0CD
7B960942967BF3983FCE91203F8C465362CA8E91B3C759943797C24CC83176CE
2D044CC07FCD6CF9DD7FCE413A0B2CF777529685866C7855509CD57489F07108
D995887AEA9D20B3CDA77BCA95B6F655020E2964AD82AD77382DFF4903C680FB
2C666FA0A35C4C85E87189C909F4B6A0C788077270ED2C2B0D838488F9DAC159
7864727A4F21FDF43764C2E9B8BA9A8416FCC45247C82FE6FAEBCE13C1E3A49E
269A4690D0AE927362CA09840E5D802CFE2BD403D853D4FF9DB92D17AF722C95
20AE6E9BC0C1E5143A5DB4A439B103686497DE2461BB90D37C89627BECC0AC55
70A57C2909F2E640F991D6F12358B5B114CA693BEB191961BD78FF2392DFF4CB
1D7AB6A7B88149FC49EE895DCB134D1F38F37B025300E6ECA15FE23197600C24
AD4BD6B59C91D0CF4083BBC7957EDE6DFA56299A52802A64B2E1FD8F680CDD53
397B02197B6FD6BF35BE9B41605C32BDF1D475B1288CE0F5FEAEDAA325B40BB4
85BBF060B969D4438A98DB4BA2BA2CD8A143B14BF7586AF40263AF65D5BF84D8
E2205AFBF3D4BC3AACD79A48157258DF2BA832668C9E6A59AB334F22CB8124BC
827B78EEED11AD7CA7924F6E7333901B8625E9546365F9F845E184CC0594188D
C4771B8904EEEBCC24FFA0D5EA576DC9E9AB838AFEECEED5B387AD8459786AB6
73EFFDF8F0815D7853C6F61278341A10182865672A065760CD6959497D1C4530
08AF26856BDD3C2F8ABD40C09C59C2F18FF32DE5ABBED403E7DB8ABDA22E2E4D
127E01A968961E4D5BA9D189BC8EEC733FDF10B6C08AF8A15F4A4DF393B4B155
330A6619428D352CD07F338778AE87B1A0D986D709320930C0D150AB7E396F1F
CBC05A0CED81E5613B96F2F0993120F65822D457A787523C0591B53CBD3D2B90
3A94A98F3A100BEC19E13A656F1E41834518EC17624F994B0DC7CB53C8808F38
CA57A2D497B50B23D1B47007EFF7027AF9017AD7FDF8E7D69B3C996102B83ABA
B6D3CF9B39D9B5FE0B715AF98BBDA7E4D8F38D88DEEE5FB8325FFFBAC2E0F8AC
20FE028DD0F5B714FB4F975A2F7AE055165C148CA55C7A1D7F655E1457D69CEE
D6B679794CFBC557F2BA9C091FF033EFFD2B365CAAA03C4BD9808AD5DC309B6A
998E83E5365136AC77328C93AD17F446D0C53FD075C959C375C735028B31B843
2CE3891C6DB6CF97066AF9A7BBF817F372EA9C62D2845D9AE8659D3813AEC6F9
5B13516290627535806DAAF3E5F1EC2E2B1DF4DB93E67D2159925E34CA70B551
92B6A29EBC2AAB197E5EA6EA88F4804462ED7EE4BF25653E7AE0478444AFD16D
EBF1C38D5F6037F0180333B6D84A171FA7E9D10D4B47F75D054E4C14E018849F
A837008DD757D753118CCB16686869E6DA6414CB729A60B13FEFEEA3132FFADD
E29A676726FA4DE9AA2588449379BE9D9F1C391D08AFAEFAB484948D1AB28292
C0EFBA5BE1F043F38CEE52097AB9BAB6E1CE2962DBD7C026A7B5F1164E926592
45514FB48444BBE75B07B02C711B0608188DA753BA5DB1BCE14966468B12920C
9C8B0E3205458D6A172A4D0586A0E4762C0C0CBCCB4E8949AAAA31AB615C7DB6
127C31D5945C8C5CF84EDE0C0C64A45E3F43E8A27FE7C391BD788D8F26196234
782B3EF26745E8E648804A46ED1AFAEDAA738B59D64A9E5F3597ADC2EB6BBE1A
D828DC28023397C9BCA84894B1A1FF77413727B341BE13F628CBBCAC784B54B1
7BF3510521588C00538DDB3F5B33C291C78C668B79EBBDD441EA5EB5A1FB805A
D0F205090A037EE1DAF46CD3472CD9D70672DB654B7766492BF0DD969FC293CB
DF7584CBD554F80DDCB485D18FBD2E0F65805890EC3793A2A7D29321C4CBC0C8
C5076876ABF67E6AE86BA44396F2237620EFA9C4AC0BE2D1AA25CA25226F6997
FBB0C61260CEFBADE0741097552BC996315700669D9D8A3D136FB6119F1C0E7B
BE7FBB900FDEA9B4CD50903AE04590771DF5DB3DBB07679EB2ABDE89DEF2B282
876822DAD40F11628096D0DA958829F3C7D61F30D048D7A184D03E7415C80F01
6C7BF0C4C93072A49F12408447D1605DFEBEAE228D06E4CB676FF24CB721EFD0
79AEC65C4084D725BB08927B936A128B938B5FE1A8D0C140D9870CB323320E47
C6F6DCBB76385F32F57FCDE6B1E1F752647B02E8D7781CAA779A4DBFF4D07BFE
56FD1D6ECD3C7A873328B5CC351E220C6E7257BBAEF6AB7B413FA0E779CE34EC
A08C8BFC9A99565FF9A91BF33A692F1AA0BAB40A97C23E2B05734F8AE504B0FB
F632F92F87271729825D54F35C9EE6DF9F5417F3A308871A872CBB900A92D27F
FA7EAE63588EA0AF1A06ACC1EA37DA11147D1D2A0C799EAA40805A5D2E8F6F63
FE078CBF2A1A4AEFBD16D1042A8C62BD3B8370088E0315721B3D54B875B02A02
6097A3A165328322752746417BB48414B2F5FE15650CF4487A5147CB402761AF
78FD16C01D8ACF2FFF3BC8390508B242D255D9CF6EF112D25785414FCD136E99
AB629285ADFB853E468CDB9FCD13B37527D41E5C1A364235601CDD0463267676
866C2502F1102E56AB57161B9935B86C3C3934129CCC81D40897F0757A8C1D3A
339749FD3F635D45B772486CC52475A3440EA6CF44743AAF14A6871FAB5980A3
8124040D980C719388E3505B24B0C90B5B6E655F40FAC45FD44A35290960F872
A4E6083B228A59F88A600F088414D8998278D7F2BD58990A68D420D29F2EF7FA
E568CF2A0112270A6AE93ABA4D87107688F2F5A66AC17979C1E9B247A15593C0
CEB47AD93DCA199D23C114B757FBDD3DD6A1D7BB8C5155B5FDE3653C45AC0C91
E30CC9652E003DBF4186162DA787D699C0117C5C8D15A9E7C3B593AF5EB60B45
E3F49CCF5DD4CA96B4DDC84B36FA31B73CACBCD5E769FD3320E7EAD28E63F0C0
26E5278105B7D7766615246360E0B4DD28D8CF20DCEEF9C610B5B1C276E49B47
7AFA002A423D6C4464536EC6257724051B0DE11F02DB17EEC9020C6A1FAF814E
2AB30063A589A897E64AC70BA120C19EBCCA0ACBEEAA8756145081506C4D4FE7
146B1F78E2E8013CA7D20370554045F04FBE1B6ED69DD3B362D07FE339032C33
4072E4CC8A078CE2F349223ECB8EFE0CAA19F8F05A43B104DB39F02F68C151E1
261F67A34C12A7E54989AAB7D2038D3EBCC47141953703F8355D7FE1C6BA8F39
5F01FD1974025A3BC3D6AB54DB8CB993A381F8FD64585BF4F4DFB41D2D35D114
50A832A88DCCAC514EA42D7116E705301C58FD5D3BE774CDB85727A17099A1C3
E3DD077CAC55A9C93732879B359122C659251EBBE6D8A2C4861762073187F8F5
7AB0CFA1A7C9B0D488F76045E6B8223F3C2DA6F55767E6A4467197D9564EFDF5
31716DB0E76207280F59A9A58BB6E7552B9C0E1CFD80C74D341A0D97CBF38488
EF85F17F1EF1479DCFAB2674A1CF498716673FCE1D9DB11F6B5AD904B86A53BA
83C4BEB7B7B9E2A15C00128CC5DEC2EEF19FA52A837428F03D81380006917C4A
6041A8D587A91E7C53E8C2724F605930F4974D961974D3B13CD6FE212319BE97
B7DC92610EE5D05366D1D0411DEEA91B547083459F88AAD6C802D3CE848D90E6
1FC4A80D68CBA4474EF145294D52DF9C615D4875F2E10EE618A069540BB18B36
6DA828A0CA1E4AE0EFBB4CBBA4ACB2F9A93053A4E22CFA260CE5F873F42FD300
761ED776D5A7A65726BC523C53BBAFAA087F6740CFE404CADD076D64D599AC0D
0955DC389FF332117DF752536D881DAB2FA840CF911864BA7E842002D1486842
84912A1969605901DFFD4EA0308084068FB9A44C98405C638EB89B1055362350
39E7FAF3ADFF7EC6392D11BA928EE92D7BA2A8D4D1AD55ED6AA80108B0C7CC07
8F49F7EDA9AB05D3D430B6E1CE5F6C79B901D87BB27F37DD26F92097BD5D05CC
4AFBD0CDC6879D008D1CCEA489CD4EE9A86B6880BB963C34434A94DFB3754A81
417363C49D6B55757D7DA698C74B896FF2834D4194690217D4F406EAC7CC33F0
4E9CC84A46A779C22EC3845D547F35D79DF9078B5D24E324F954AFD7C3368B0F
090186216228B362717FE1801B0D0F5F5EBA7E13B5A61CFF5F069626F3DD5EF2
615E8F3E7A32B895C14379399AB15F69CD8C78854DF250E2F91F277ACC1F2D7C
B6AF913417009E4CDBF376F7B62560860CC620053294AC86515AD8E471D2634E
85CADE445266F849EC6DE0B97E0301D6F88B0A86B57628DFD94986CE50D80CA6
E7D6E1D7D01F8DFB541CF50D083C907028093189D406D4DA6B318DA6B4002B8F
81D84624A4C34338125F12697E18AD475A240926BE5BBC8F68495283F784017E
4A14C914CABAF3F6C98D9C80C8FA72765A8B43DF3613AAADB8FBD3F200DA2564
FBA6DF42EEBD7078A64A02BA4ADACE5CEEE48068BE368EF5E0FE970D3CD4E469
F1B0B9A5D4BB9C7456FB0B36BBA6355086BC0995002914A4498DB9BE94B7452B
5EF00DA99785FD0EBC8B18A771A7E5FF339501AFF2FACEB17E0139B6CE1FA46B
F670F6E5E7DF5A2D994CCB9F73B83FA4705DDEC6B6E827A7EEB2A6287ED63CA3
551C873D035A53A17327046B5A9038DBCF90E4E72CA21B57F305463A117FE05A
D81A7F567B7814B47E090CD02E0C37FB04128075CB31ED5C284E33FEE6A9D3F1
2673886B0F5E285034924DD08A85164F77CC1EF69DDFB3DEBBB84B8E85B9585E
81B779A9590C2EE07098ABB01C4763D68E1443492F8DFC6E3C0AD6011C105ED5
A31122FAF28FECAB28E535DAD630C1C71EB3048F35EAFD40C6F00CC1BBFB04AA
AA21C7DA74C88E01B23287BEEABEB3DBCA263A8325077CF61EA80CCED2385B2C
FDCAF0DBB6014805F341E73038A3B0233F260B5338657092CA347A9039EF6400
3ECEF63817F215D2827AED30D2DCBE10135CDDA3B5F674D4E56982782D4EDBAB
965B194922F761B588BD1CFE78428D66991E31C05D1FE26040DE39E81C80F453
FE60FAC91CE7CB34F391F992120E23F9209FB78F2900C38D565BE204F6FAAEBF
5A7E7B31959867C5F0970BAAFB8AD531B152C3074D2050D93C68A48FD28E4F30
202942E009F7FEE81496F7A64938C079D821DD3AF7885E38E2078A3B03981EA3
692F29021665796C36EAF9376C8B1715A91192612D88212461D415B3D24B0AD2
B6B421E945318B5C6594CC188A20CA65DC0722F3FB9C8DF2C5C5B44E936E77AE
2BFB4BFE883DB5E7F7D177C973055352589A46BE63DD8555DC5C9ED72491D570
9430623265A77D83250E156B223C138CE7E84C0CBF63E111843885E37F1D7A9E
791A10EF6E245086137A6CAD24B03505B8010FC7C4EEAF9D49BA933658044096
E5114E696B7CFA2E0888B3EEEC07CD8DE04DD5FE57593EB5F691042ABE645D68
2385356597E888B5D461F928C854C97F9A4FD738FEC03511C5B8749740D8E7E8
F440FF796A2E80B770A7DF9A8A1C950D8D2057A3DF3E5F734A2D8BD444DB1A87
7D0A43408A5D4226A59C2F8945C38EA3A6F8C89996E3574D465975FF2E05FD5C
E493F8A6FB75C2BE9779769009CCC38E71439A1BCF370A157266038E099EF3CA
4709355E8F8899AF23BDDBEBB78C2354599BEC22E6F884F5A458D7CD21A666DC
B45F7EF0C28A444EA1E55FC1008649D39E62517E0D47A2915D235405A44021A1
124420D9C40AC94F0B5EEA0697DE40E5D012C413865364AB91F8DEF6367290D9
6A0E3267FB64F19EBC3DD0D14F0308B14E2DB4B96B298B2473D44F874F6BBD9C
CD770979AF7F41D2F8969EA53D9C59A8B0D41349D3C674735CB545ABAADCB2AC
9844663D4136F61CA4E69FDFA7C237FAACF4EC202440392B008C477F6AFE7F76
3EE07B42A98A02D0BC10F1EB56ABDF9C7CEC2F4E80D962F9FE515FD3F30CE177
3239834D284615786699C1A9AF8F6444FD9B42A8D53BC3975AB715762B31BBD6
CF2FCD6AE87D60946F584E6FA01560BA79DAB832D7B7F3A9D58F704A3E1E7FC8
8797DFB8B25FD0EDFD275EDC66A537138F0550B04F96E909A19B28CD86404B3D
857B699EF0FF13E54DB406952083F75C374F161ECEFD1FF684384336ADBE4C43
241BC03592D139F3E89C3F689916BD678B96E00AA44242E690801DAAC735228A
33F40D0F6B2DB0B4826950643DD1E07252DC9E9203877E0888E76991A9D9B61F
81CE398BE74F6B31F854D930490D0961E8E68CF74E4D7D43FD33EC7880C1098D
2B6239006ED24B68B1D039EBBC03E9E96D158ABD6E6994AF0891D1F2AB02378F
26B1F829DE2631AA7201884FD210167EBE0469AB997123EFFF85B9407F808C4B
C7D1ABEDDDD148EDD280F80E85480A67A1DDF25953CA2B948F71FB028D724F13
3E4D9F1B73FB09D66625465198747D6C3270D3627489D4C82E017BC3C5B2BF9E
026C8C5F3E40C5AADA363C28DF0A71F2A3ACED09B49109257898F13D671AA2A6
5D2130528E14C87F8E02BC0F9C8B8E39EC4DEF0DD995742232D745F56316311C
1A076D0ACF1A7C81042A72B874CE919E6570C0D97F18A307BFC138BB46EAC929
8F06A0490B7B74BEE4E4D0943C51E5A6C7D95B4D81C6301F8E15FFEA72FE3EE7
E70FA8B2EEB1CDDACFF76112CA8DC367163FA7999AE0A787F5998C8D728E50CF
22C2292EEE922A394D2D2F593BBC49A7F1A78BA0D43180CCEE7560440744D8EC
84BB9CCDFD13ED74AE758C36417CC2A5517AED447A3D6B6C455223752EB9C83F
B155A3B705EB874E19FCDABD547FC8225FDEE5F531F08FB69C7F2DFE2172C797
F0EE843907C38BA6E4E00E6A05D7A53565D1FE542F30E5BFCE262D8A34F4F627
3E2D0A31B851B892DE6C69D4C8BB6853F3E292B0B851384C86B4AEA446A65DC6
1852339A386A3376920CABFA556F1D897AE5F77E53F3A7B90A9B0E2C1005D153
2DE2DA3715022D09C03E6449B5EFB302D0E9D885B59E99EED4D2285BEFBAC16D
108667CCAFC3A3595018632B166907BCAC128422D47C1E7E1B4D496566FF86D5
27EA41DA09A13435C956E73108C1FD2780DB8F70E57DD3CA74BA0F91FDB5BB0F
C7DC42913558CEC752B51FC1259429092F1854ECB4A87563950B3D33F1BF9EB3
0BA78292EC4A87C212D2076B849FE8D3D93AD1C0D840812281569CC601195692
506E490AFC6A7CCD858B85B6F4CA7042B61D42A09573C3F3490218F8F6326522
697C5E887D34E5A3887CDA0F70CFF73E91094583BC476C8C0949BF2283821A5A
03A8C0F0A138AE6625C96DF80F293B1A40F373BEC1441E8990EE1B23EF3CDC2A
51976F7144970662901C4F072DC5E1B4302F3CF75E50D3AB7713FD7482DEF36F
0C30795F0CF9C4186A6D593BA22BC17E73DE2829A10BB38A440113A1CF6FEF51
54772E49A8FB1CA966B80AE4A35518B25DF114892012C35A5686DAD4BDE5254C
46608136381CC9DF7668F8002775C752B0F27D984E25DED28445220B39110B6A
80DA097F10CC5DF35805D2C13CCB1517ECC1E3016EF0AA88A66799E49F3DD5DE
438A4BD71119B38691204E801227FC17B1D558EDE0CD7775A14BF922AB14C738
F2CD58D8716D4D85C5D75877E50F4D8A1E92449714A0321E46EE42B79031973A
56DFD36FD9FD40B173789803D1AA8A69423BC5D2C8FD859C00388CEAF6B21962
56341F4C6838F72FFEC5EF13659327F3F2975D6B73F7272FC49000ADCE32B2E9
D8514363896DECDA523427795DCE6B58A213F5AB6F50AD659DD4430F502BD060
20986DB65A6FF93A689A0FD733E926EF6F8E7C959B7AC4126002E3007B58F76A
48700AE6D072B1580A751993FB9F6CBFA2D28978D41D3AFA7BB0919EEC669C96
702F6A9E919FF8E9644892401AC00BC9D3B92B08AADEB28C1A90D6FA6D1BBB72
AE90EDE3A43831B9BAE893BBB984B9E73E0F2D6A1CCE99D705ABE6E203045CAA
D69043F652C418C3FC80059721A58539EFA6816ED43BD2CE31E489A04BB5A050
B2526CFEBE0FABDA12D658D986A1173780C957E146FE5171C0586271F0469DF1
3F2D01D02008A5E4EFDFCCAE0EDCD7A9A4B7B55B7403162589FA37CA82091A15
4B631995C29677B22D04C71C3E8CB42705C5BE498F9FDB6D2848CD6D24A0F3E0
A5D3E25AABE0DD8CCD2459074499343F9B8A5F1D04CDBE22B1F95F08246EB15E
C2183F1C0F3F71BAA51011E2EEE815FA89EDD8061A8077F8FD22E4B0D0EA0DDA
ACC5972F26DB0362FB34CB4880D33604F12A672EEFBA4EEAB4860F54F929DC91
23BA98B514A3A504559F576F80CA474321978332D20A9247C17C45E390615AB0
D6D5771B81A6CEFE048360692C7B5EFDEDBF0761045C96EA1255C6EE5B2B00B2
3C74A0E7DBAEF6933A7584AB770CBC5E2173C79F6344E3561646B7582B3F652A
79D87CAA4994AF91F2AEB14E8E77D83FD6DEEAA11CFFCA05AB36266C64CA8813
256FDA142EDDCC7F3A46C2F290B53E0B3061FE8C1310A3AB273B4B124B42A2C8
A98AC409023B8686D1674A91679D2039E591550E653B85E0D3FD6EAE7BEAE72A
D01CDE5B86EBB1E9D4620DA4F94D3636558D5760BF6A3892516C61E410B4C878
725A0A7E5F66005EBF5F11C84F348ACC957CCD17BD11A2181CEE7A9B6B29AECD
4E6CB94F00EAA4BA0A2C85982EDF9C6DAB54AA74D9D71BF1670DFB83DD25452E
932D9EDB3447B593ED1295635B81FC16A4B3A9B3041EE3F3995E746C530D48AF
D83711C3FE46B519487ADC11D7B6A7DA51CAEA38FAD5E306C0BA024D917DBE54
A44295B85286AB2F5EAAB6D864CA8DFD81AD0BD0D54B20AF8DEB46357EB5BB48
8D476D4EB3FDA49029CADDB617274E07AC34B8A5CD9098D5A8882C41AE3C6393
17FB8B9AD26FA1121FD7B016236F81833483941CABA161C71B9D85B5BE8CD2EA
3C91AA67E9A26F59901877D21295CE98ADE9ABCC0755C55D3691272829ED1CDF
BA8647BDAFBC390736BA25117744C20A7424A82AFCFBADFA0166F7B1F3E1F313
FF825103D5797120F4468CB6720F9D2006C231B70310C88320B7A9142F5B0CBE
F13F900C0A781C757A67520610673383AC9A130E5766AF09FB9B26279A58FCF4
8BD7F31482C430A4884E0C999528B76A8E0DBA07B832A01384A3A8158F668C66
681D93310849D4A450217FEBA898E42D1334C6C0B3265F8D3746E38F605BA98A
1BD370C6E01FD111D67626E145636FCAFC043940393DB24438F09E6F32419DFC
0922A25A58FCE90E62C2CB3E58AD05B816A36E4A6540826E4AA3082832CBE936
7A9DF33CA10B3397941656EC013DEB2821DA1730DAE3BBD8A64FC8BD759DE51C
385370F15D4CEE5256191B954E442B31952443303798B45B26877BAE2CC1147B
24741D618D74211AB7CAA66B271E24D696712909D87D8C8A583EBA94241215E4
2E868D17374299A3444CBE7A284BA9EC477D027E7B80321C5E0E63F37F20AC12
9D0780B4E1D7D25CF3BFA55E3B5C8205CD01FF87BFC4DB6C1EAAD77E774295E3
CE8510038B46B58C58720357696FE9866FE279F80B2A5686EB50B8799A15496C
6220F9D7903C82D02080714B8A700D3D92EB644A1E869CB45FD80B667C6982F6
DE3E507A9CD078C9CCCC47E459D77438CF9A369D35C12B5F70F3383A8D071BDA
5422E9B8C460E37B0640DA7DBA5885E8A2E411EADD8B8DD6C5B5C37113DC714D
53CA65FF438CCF75573B5F36B8FCEE0BBF96F84D0712252D24EA8F6E96D3ADD2
005D695061F651B2C88540D3EA62FFEC78738DCD12843CBF495D4BE773343648
2C4519890A71F5AAD8A9630C99F2E2939512CED3D694B778D17B0AA1C6725281
B56C4851D6E254F41DB4E6B5B8A3FB5FD5CADADDF6E64A65E84BB6FD74F861F2
A6D952530D0E745F57BE44182EC61586642F782A567E243E63204D78E4705C33
D79D2807B9C6C85C76896638D74481B1A00B98AA41C3FC3D2B8F050DB8CCA5A5
3019315FE5ABAF93FED17B06482E0D9D8C2E21DB92E03F9F925E146AD41C2591
CBD3637F0F9959718EEA98409DC698CC7A0B4ABDC168A8DB4D0F274488C1746A
2D58456CF96DEBB290E7F5C0F439C452BC3D0FEFA0E8F1816901A170B0BA62AF
3AE83C5FE39ACB0CFCA14656074ADDF6F9AE6B8135984872364CA6EE0D58C575
64B7187DC67B676BBE32CB95C78F5B630136B4E5A99149104B6AE1495E8AFE73
9835A93BB49C5360BE4AB133F250CC5A29392006C76F1C92327E79F0A97B7659
21D03532AC1A7D98351D8AF4CF6E5B69DA179B90F41DA11557C8CF936C579042
38013BE158DCE0221129C864A092F82FE8BE3378AE608E1BC697F6BFB10831E7
6297172B976E7B29882E9F99DFAF7ADB5C4FA36382E77B90D46D2CD1C7C401D1
2F42E5A12D3BBA29749D0A723EFC183DE4A11F4863773EDEAE60CC71F4D7059C
E8B3B395B5B2EE68AF0CDD4AD641E42559D7CC7AC18DEB728BC4FB05A90E7943
5F4B4C576E28630C68D5832E445BD24256E4918E13D9526D00DC3AD18DF65FDB
EE9826DA01DD35AE72078D529F08FD8852B5CD89BA0752F0CE9FD6429DD389AE
5D04A474161D6C14E1928BB6CB3CFAD5D0A81E580FB65E4129C9A8DEE2C5EA58
7985C0C9713A323E7E2FC7703E663BF2478BC6B9206475D466B8792D3EBCF171
0E4BE92E10EC05B7F0DEB34056693E61AFAE9201E9DC2B661738D32336884D89
62745FE75EFAA626CD121D09144FD6A49D62B4AAF555813357F84C30F7FB3973
2F44C8D991EE794DF364654A859C890235E745F6B3D2C2A584062588D42E036E
AD765820ED9D171B28CDDDF71FB99E6C9FB1DA1796636D4146BEB706A3D9DB5D
6E693413E247EF06ACA14B85E2929308D14977EBE449A95A5298B806725D38BB
79E845B11C9FC04AE20B2011F30928C90131FC3F1E7795AE5D739420083AC2C3
2090A28BF2CCA9C465613B361D54423B129685B8D0368A77C27F976BCD711F03
BC0A9966005E7069B77D709F9AE11CC0D7BE9AB90CFEEFA19A7C7A1F08BE9213
478946C3DEA5AEB0E8DA193FAA6A1ABB679D55DDF837196B4DD0C809F2077D91
B59E5ABCD2FC1051E592D423AB827A08C877E7545E1843F68119814DAC95C118
6C02C265F03A6440296943D3B23236BEAEC2761803796314E10B74B1C4610D36
B1E716D25D82550B676B49AE48FC86CAA2E1248D82BCC3FE28F63C106BE47765
FE4EE3A3B77787E351335AC814D720367C32001EBD5A6187BECC65978A120E62
B811F684B93210E3F24F47C144D7EA211A91570508224E549CC14DA34E8E217B
F83586FE81E8BF72E268D17115875A1EC897A22ADCF7702C817EA85CF7657885
CE28C51CFA35303354F0641071E3468D9BF75C1A9EE4561AC4F28A2C7B22974E
F29B64DB7DBEF3BC7454115B52FEE91EBB44650A18C5965FADB2BC319F0C79C0
C1DEBD20943F8563B6E0BF94A766EA80C53C08AAC05484E31E576799B4D9B40B
F97AE15B9BA0D7E90197A1954F675EA4B775D33272D19713D0D0A7CBB677A623
F5374CCED5D1EB8E884D0628C846496E02F1EE828C1CCF3DD78CD3A3BAFD8D7D
3C3DFD289B68076BC8608A3A97987BB1399521F27AE686176254B838A50CAFFF
B173AABC5F81D63122EF00F0B4990439B057C6DF3CC64652EA576D41C2CAE225
B525FB3180682B0B161119A6EF34AD3BFA79AFC1135BB7666F45C29C7647B5F5
6A11FD1B32AA6FC963D464BEEF8A49E5C042A97D5A9D85BD8BB67EF4C43524E1
8BC3F4B428FABBFA7EB1666B75D922729DE15CC9045BB3078E44B31A5AB06BF7
CAB23868D07F4B95981A3CBAE819B5EC1337E88BFCDBF38B6465150D7FBCC810
29BD977BD9F60FBE8B9C66A28C7A6270A75A8B7F550DAD6655A3A3196FCFA714
6E1993CDF69C6DFF08DFCCF608E72E4B2C722E48DCB79B2DF8CB12ACAE273EBD
6756AF89291EA4269C28F3766A4D2ACE7D01EA0F060F9B3C604C766612B6CF79
A51FA5A675AA460D318C6D8CAE3A1C7273E1D91FD5AD559ACC2DBEDC779A63CC
5DC411453ED175FDC191B3B7A9D7AFE3DEFF218675AF75018CBCBD67EA604562
763A7C1DE02EEA0F9E42AE557818B5D1B08B752A1DD71BF2E416E25735B9B0B1
8F15B17CB9D49FEAB9EDA2689A4E8846D9771F0686763698141913CCF4B06D81
13FF40C9658F7A0A30D8F2921555A426C477A6B1666B76978C0F424D00AED448
ABDEE75858B8787B9879A7D123257C35D701B0E38F86CB81278871E9EF2ECD14
B2FFEA2035E9F217EC9FAE5772963B6160AFCA371EBE15AA0B4D1F0D76B0BDBC
E8DB8344B1B5AC0CB9FAE8C4CF3EBDA5950E564ADF921E17D6CD382F0E5951EC
02165AF7403D0C60CDDC0DCD1177BB3DBFAB8907C43D36DCE606638EA4395A7E
796E92963E2A7FB100882B0C45809AEB66C921E177FC6EAA2EB238D8BC568681
89D497025A339D03492B8FDF5B34AA46FFF410B752F1692ADF4AC2D3EAE1FB98
05D70032A97F295E924B2CA3C1A1AC6E6B188F00DDC9EA7BA25D7288EFF091B4
CF4C557F4C44F30CA4C9608A492E71B8C905772DC8142B25BFC87A9158D1CAE9
33C890695DF287A0706D709321F09144B6AC3C1F172FE17D9CBB57E58D3E875A
DC837B551650E88928EECC67772820147C3CE24EBFCE3E99C69952E97FB955E1
57EDB856FD268D2EC32289282CE9823A0325020ADE3B4D34E62B37AFC86CF446
ADFA22A502AD5552B972CEB2112C0F4EACA7B5ABE333BE3B87D6488EF8137707
637823D9A1026AE772106C4AFDD94BAD42AF1250628CD566F0E60F777602F0DB
4A79FEB9A8FB1D9954E8A2F4DC088BA846883CD13701C489B1E382643BC689E5
374FCBE347551D07237FF6A6BABB3E45DCE6B165A288DB22C6EF04CA4B58D29B
F10ABD5173D2B742DBEEE8D308B9FB0F145C72CD3397B701723F4BC241CD1E21
FA91750E665F300BF8DCC0F4EBD1FBEF74F49A0D5172B006BA95A45E8F46E697
D7F5AE10E014A1F46DB4C3D92220D4FA595FC6EE615140FA0B5B8F6B4BC54EBC
298F351F87B1EEFAEB5E71A11C3F3B3604AB5A749234FF6278F3945B64D4C20A
AE721E73009EAA3E75899BDE0CF9C97A951680685BF91280637AD0DC468303D4
1ED7DE1E8D3F44F39780E327D45B94939E6AA3BD3319995EE38C097B54DB2825
21A102716165CEFF341EEBDE729445FCF17109755B833A54294DA62F57F8C045
7F13C960B842D1A9110E36E2E100FBB6B08ECF17620FDA5A0A305CF7B01E8CFE
5C1D5BBB137862D8D03A4C16BCF04A4AADCEE637320F5EBB5A9E2357BE4931D7
94BEE9019826432D129F0DC98F9F0E7DF120F5E6F440263010881F2AC9E1ADD9
D35B96AFD01217A461419B5A5810EB2F61DF07D3B40D6AB41106EAFFF1E07472
446ACE188C8F915C604EEFB40D3C52D7D6E5B2226AB87339E0A0A60721D67966
03A6ED8115C21EF90F4B5B07634B3CFFEBCD3B6AF16693F7E80DAF061439F7A8
38A16523AE863A5761B31530B15C4DCB2FA62053ECA16BD4EE94A0934D2D7ABD
A50464D6B680EBCEAC9BC1FCAAE55A310748FBA70C2427ABF2022F46C0886F4D
57759F1EA7007BB49C2513A5E6BD9BC2707CC21DF1567ADF4A562F9849D35172
5B54F9C32764532A3A07427C35F58923642D421F6A75950A8F74A67881D55BD5
5D232136D8680F835C06A1C9F09C2763F39D9F1360D90E8449EB39A64FE65DC3
D4C0725BEC63AA7FFA54258BC9402CC85204F33CAE9D1F91DF94627411198A26
7BC86B270BE524E393BA2D6C867B0943A95F5B396A33B70EE6C0C9E6E6DCA08D
EEEF5AFCDA3E8FD95531B78F9B4EF4100ECA61F6DAB78E3631D9B51E14C433D5
5040FF7C64B11BC4D720FFA2E33273896A2E09D736518C7080DB71EF4A9E1155
2BE01DE5E5A976BE70726F4FAF36DA3D4060490CE25C12BC0CDDECF033CE91A9
4480596BD351F6AA4B69DC61DE0B822A56B83E261A84725343E743109E04F1E8
768C0B02620F4C0891F7680CC69AD8D1766AF6AC5F72980B887DC8C068500304
D9955C467E9A578D35FB75BE2EEFEB980400D067849AC67DDB41877F36884771
8D0CBAA1D2D1892DFF9EB823F6C465A935F666FE80AC152C2A5BDE7AC889BB02
9B5AF1D2E1D957A0FEF9D3E9E5192040FE3C6FFB26F7762A6C2CAE3207FFF830
E26970E386890C9DA4E53930BB27FB26D78EF7279B273AE3D809260BF99A141A
FE80AAFD472C2873E79CB8AFBAD999FC0B80EC34B894B8D851C4F939B78E4947
E05E539EC7E7277B6C3BBEE1AFA053BFC35E070FF5A502A4E7DD388E02E92143
8E8E7366FBB06AA72893283AD3240CA94F76A94E36079F6CEBC5DA1AFEC04A81
0F9E833F41DA40D17653055BA996C6D330D56B6588BF97FE8F42FCD05E0C5C3C
5AAC08E655A34F57A70DF4D97C48B9546573D4A340EA2D4C1175AE93FB625FA7
9BDFE2185D9D72C85A096FC4DF8853723FA438FCD43BAE2EA57C8435D345746D
5E99E12F7887E6B811D010A7005B4E64963172EA3DCEF8B2C704AEC47021174B
B52D146FB3F0556CBC3F229C35D21ADB3D6FEAED176C7FA41A98F3C828EC7B3C
D8BE1603E0F9F54B21DD7097DCBD15C1608936F251E11DAE852CA69F982DA59E
9AEA02DFEEAE2C9BCFD736C4B7DA9398F1E7E9FC0A8E15484BCFD605F6BCEC2A
1973CA6237BB82241DCFBCC2009CEDF6E93210D916C39485D95F6D83805629F9
16A25D69DBFB3A94CD53399E322AA98D845F1733E5D938E8D23BC5EAF506FE7D
345B3B55B6D0C213B79C5E1D9E086BAB4240EA05D7A52297BE877AFD489DA1E1
F8A63247CFBB22EF84572ED2224108B34D66824B0F15F2E6597AD93F31737479
77AF1E51D317BEBFF4E00DA48D600726D3ABFBBCD3D3912448AB4DF4121076C3
A601D83A63870E47CD5BA8546471DA60F756B554B200F5F04ACA91ABE0E00E3A
1C34969CD02E91B75A193EC5B951648A247B675EDB48C2A52B31C0E5099C5933
9B58BF6C8AD95692B372E6B9D781B14A03549D607D98630E0B815C55AAA6915B
C83928A76F9413CABE6C5BA2D0B79E27BCDEDE309C66773FEA986C5B1D2C64E2
77B9172A55759F05CCA6416D2EC898406F7BBECDE32871B1EE8001D5688F2C27
AD8DD2369629DEA0A3680347278D18CC6409B291C840DAF139EE23F8EC96895E
D95E1A67B554A8C2468428B22E277B1AF59112DF941CFBE2A6FAAC346331CF6B
45A095094F433A36B81ED40058C013CA14B772182F0172573D0AD24A85637C5F
2B370DAE19C9EDC020A786853FC4395611AD02296C99332E1376C9E3E66FA261
B46D2823F552CCC1CB119901E05E0B6F812331CA598B0101639026A540FEB352
5816883EDA87DA75194D34FF0D1B89D50AEC191452168D5A56A696EF04123463
D32843DCA85ABBE6F2D6F2E8840A8A8CE81461EB18CB8F9E754855259A8AFC78
E7046FD83A9A2390999558966EC86CA5C6D9DB12E6A901F0C043BFB14BB7897E
673416BE69E090108AE30293E9F180C90F77D72CB997DD806B3BD259CFC63A36
9F1CEC1DBCBE87DE95CBA75547E946FB103CC2B16D37EB22A642895B5A81832A
24A163FFD9DA2CDD49C3EEE7BBFFF9A57A14F1F1C83ED0C3CC78C6A226B071DE
D706EEC110CD3D77C3D9B95C71387799D82F156412C7D07B720D1EE315D715D4
BF7B8FC79480AE9A6362418E0DA628D6967709D6154528072B7B742FD8757CCC
92F2E4724AA4E4A690F45DAC6CB98E657284FC405E6430521ACFBAD56AF54E4B
B55C4ABC79171EDA09880E94A29C9553E2191D2703A7FE6126D074927528B02F
36FF93E56C854A43842865BC7D965C59EE1D58EBE659071A03C5A9A55304B37D
28FA64043CA7EE1E236CDCBEEB3D6D602473848A3FF031E745C214CF79BB08A4
010FFC836630A69C1A794CB6AB03B58D5F6964F68983B08AD0B4052E952AAE44
DD4BF83336DC21BF975699A1CA461BBAAB5FC630B899918511D079AE85F054EC
607BAC2C7039A172381CE7B4499F83867B9934C5C8AB819DB04B4EC58D1FF191
D953ECD947D205F1DE0B66B64EEB029361D78C909C6AB5E19E6A2F0C80EFB811
5FB2CCABF3797DB2FE6C9CF12F3E1FA5E2FFF05A18161815B4DC95307570171A
A7F1BEEA796C7F516B7A3A84310E6BEE07A6BD9CF806AD58FCD7E84E659336F7
45C47FB895259B5307EC2CCD5687C10DD763750499AF8E640C4B2CE1B4270E47
583A1CD250F09A44645416D451A7230E636665B2006CE457206C46B12B29FA29
DA44481ED22307760727C982EFD5F8CDB404A67FD13E263C254924D9B7624E0A
A8297DFE190A162CFB0B3E49B78B32C073CA504097DFC5E12169B590B3310219
05619ABB88EB1F89827281909C554AF97873EF96395E0F6FEBA6F78C7B276F45
4B02FA8EC2E8C31DAA42D5FDCAEAA84830987F45F20F852372CCBA9599FCC948
2A18AA080565FFAF952DDE41C1190B775841429F8D706C2E033240C867033F9D
8D60DCC6C2F85CDB7AE433A4570919B179E81D787BFA5A107C31BF7FC4B76E94
262AED02CCE2C702D74AEA581EAD7A1947CB0D5DE9858A8A72E05BE946D2AF85
1BF5C733B7FCBD18B4599E4C24F65CD2048DE88769691F9CE7ADA057880047F2
E75AEEC30E113E7ADFF4252B4D2B1303B4D2A97597A9C85C246A4B45C362892B
36A532794F06A8DC7B82C89169B1E5ADF19D09EA2575D04B00E5881658350674
41380F57634B570D944B7CB731696264FC4A901C601A22ED8CF5A1BE56C244FB
C6E64790EFBB166F64BFE07B7E5AD846A6A131CA139F3AEFAA0060760B8E31C0
183BFC7ED0C1D691F4E329C90E1F9C107DBCF2488FFF365B4EA1278095C9D503
F53E2D7F69B619AA9273D5C0FF2AFCB6EAECAFA3E0C626686525E9CA76A5992E
D406F4034B5773AE8DAF67CC61A28AB68F455861B308519E15337EA6530CA1D0
F1E83309A5FBF2478D8FEEEB04777F51BF6A16E246FEC9EB17BC4B47DCB34B41
2D5D905F953E9DA4DB3AB3799C3AE749D9BC76DB1012424AD388329394CF0C35
0706A4F95A422B9CB65EB28A1570DA31A3D50470E72E425D3EE372DDDBE72267
FBCF3B879CDD3585D86FA803D0EAB10E1564B265E61C7D38804306B1ED1B32C8
D6B66A9368A18F9E9D9C3F4F6D5E123651EABBA155CE89AEB9B648AE471B1AB1
2790DBA2318831AA7EF4F3DDB87A45DAB2D74544E94F95B1C7F5B9B1C6076B25
696A8FBDCEFC09B6C19C1C3A3D2FFCB5C3D67FEEA7D7E83B8945EE043B800309
EE1B4CA44F397EC68A33F8268B44DF1A0F37B34F763D6B0B5570CCF5A54C7554
9BE4B1DF47881C356057C0CBDF8787639E43D85D0E7EBBE68F6F39C1C170AD23
47F8C99EF8C44476ED7F193A6007C028BDFCD47B414BCEDF273773AB5DA767E3
660074C58649F08156D87417302D0A78BEB07051F175D3C1388B488498CACBCF
D7463116BEA1D931B28F739637E5CB8BFD12F7C912BABC40C08A15D461946398
E7260AF7030DB490790417108D27A99E3CFDD0B5B55B36CF86A201B22D10509F
C7CFC09941935350E0EDF627505C3EFD8E1BB341E8C5D2D27326EC057B188379
3EFA4605FD8E6CA0F852E044AE21AE5E20AEF10711A42666AEE8AEB5FB4FE39F
5150CFA9E1AAF1B370299C1A8650502FAC39801E86BBCFE3991C30772F1C76B8
A478B846ECB60D0681C3E6447B7C327D75FF102D4FA82B81153EF670A98B1365
31FFC9C954054382AF573B12FE7A3AAE85BCB3B456D1752E933E721A260D55D1
F663A82E5738ED839DFD2D450FF5730ADF31C72A0BBF39BF9C9A9E2FACC22123
256C8CF01558416482B312C29F358007FCD1E6FB92E16BA602F3595F55D45752
356F6C8B6D4490679AFE350E0168E18824AE829173835E26D0C2110C18EC3CC1
E614569ED2CAE76A25C3057679E9C5B85A1103E2A8783FE599597B8787EC70C1
5DF4BB61E5C3CFCEB0F978B3B7BBA6D7733F33AC4EB60078258A484B2E9F451A
D81C121FCFAB476DA52014178C8A81442764586D224D4FA75A794C0EB08629E6
2C12944A4D53946D6AD5BA24763850EFFC3459544920B4CD39F7060858BB6EEB
913230316B3978C309949CE4BE79F13F98FECB82B285C9321CD18AB11B301D06
6E1B07547E503E11804D4A715156FC62F84CBA131F68B220A6FF2E69C26ED905
E7FC842DB73E4590F38209BF199DEB8A1326225E26EF7BED1E891E019356EC15
E7BBE81A98E9BF7C8139E3DDDEBB83E5A9C59885777D725C81BDB780291755A2
F6224F2F80662537A80ABC8402A3E861B92623D693804141915DA89C1547A41B
76725969F6720B7538EF2A485E5C3C074523F0CC7C81DD9E922073C16DF70646
F6651C763E7661B11FB1C6B65B55AAB9B69CB1B9FB29098B2093F06DE0AA5999
AF22BD3441115FBF0C71418592EBCE398995C284B82602A187D8EF301C154527
629EB40321DA1A0681743E8CEE625BCF79AA0DE009FD454469FD45F453FE225E
EE848EB8F59F015E1AF7C452BD925B448BD315658D471FDDF6877DCB00A10785
2DEE585CD897CA32B85BC66945231148FEFC6965817509AF8D3ADA01FFB2B11E
704E38E80E1D85766A9349D6B1C516742B18593C6799994417ED9FF0B8CA4BE4
F17C2297A3214F9BAE98127F8A4E6FA6F2B075FB963DEFC993BBAD820B0228A9
52F022E34D12D955DFEBCFD9005A4A9AB929A05B4DFD8C37DC215FCB73EB833C
617DAAD70F5EA080D5E133FE90D035E703543446FCB42400043A890847ADA5E1
940E5717B67757E92EA2F51BF0DCCFAF91C54502D9D353390B1D6D8D38F90E5E
92019DE83EAFEC97D965BEB3DB26F5D807CF2034F68A7E837FBBBF6787B7A226
7E06977E9CDD126E10DCCA29A546C57CAF99C8F76E125D058A90EDC802BDFCE8
77DADB77CAB5DE74B21D95C0ABA9DE64181AB928CC1B87C23E42D2CAE47353BC
D406712A241C28CA4B5B2D20704616504F413C34EE64CDA7A8DD0302013E1AA7
33CEC393D34948FE352175069930FD9FEC84E3794088CE94A1E924990CE1AA0C
4756CD4C079F702DF337B410DD94B862FD24686CC63ADCFC01DC4E237B16C4C8
0693D8D0CB624CC5B24E7274C1D2AE9C0918E42FA8286EE817BAD1EDC339EA52
463CD7FFE3D63F86F83C4749ADBA015BE640A9533AB455A408A2CA5255073C22
BDE184405743D6E2150163AE2D6A26B9241ABCA35C298E721864CE423FDF8BF9
16C0E182EF6F974D73FE79C99030D6559FF326308A6D0342EC235B1B66C4F0AA
E52A9F434FCCD78806D261C2105D2A890708B98C223395635FBAA2390B33356F
2B0E7B141D8C2C8C4ECC28423C08481E64C5F400AB18A6DA6779B9553CD9F4BD
3650427C7DFCA0D8620C4C9277D3637B4C3EABF647C0D57076200B7AA54A0055
03BE0F8C06540A155D7E3390708704AD6A7C08ED3E481449278ACC4DDFC0FD1E
A8B91EE673A333886E3CB0A11D58BE80677D74819B80E358F0FF03E4E28E8FCB
3C036A50D35073B49887E361D5007C4EEC47066216BFBE5FDCF426540CD7B41F
E5C1847427B1F9C8790CC9436EDA0677BF284132421CD6EBF43C2FB4E015369B
771B310326B2E0DD8719E998FD49681A5F717856191BA4228E3AA9AF4BD4DB39
53227AFFE9FC4039CB7B2D075EC47C87FA319BA1DD26FE70A69B58F4C1208AB8
8F27FA6B91F84F98749D08DDCAF6908CF19143B1444D6A0C958389012619477F
C12B618796C05EA3F50287E9D9127D1A539288372C0773282564D1E1D6C2260A
5838E3F15F821BC27C91D9E0DD8F4CE24261EA4F806B9175FBFC83E45FBF886D
3EE1270B90F6347E1D0140DAFCF53513EEF5D6628308ECFF9836ED7E6AA8F09E
68FD2F7435C42BB3339AA5A3AF53F98B1146C8389BA3AEE00138A03FD05A3BD6
EBEE8D0EFE707BA2D33F971BF1EBCFCF315B4B82639E5EC9A5275B2E5816A658
C5BB3BE81E2369E52150FD876AFEBBD30AE44B1B5C3CED4EDA5032C3C8CEB7B2
9673EC80B9C18A6D2FAAC87F4DDF884217C559492CD166CC8435D49DA30BC4DC
1B2D8411A829B4B15B26F8514AD63B3805E2C5FDBF5C48A1618953FB815BC330
7686363F0F1115762A6FC39F27ECCF814CFF20697E1BF53E009EB22A3B12A278
B6BC9D718E57172490FFBDEC9F9F5440AAC3AE02796A66176C9BA5735CCF7240
AED7208EC660F92A3FAC5EEC79EE9736486753D93FBA6DD3FDE98665DFBA753E
32594D9F60D5183D78F02BCA775C800944F5F8326A49D8B2A75662B84217AF0C
3EB6C1C0ED39A200FD42639EDB6FA9FBAFF13A21918B7849F64E4BC5E0F2267F
8AB9A7063130D7010F2B7DC2E688438E99B10DE4E9A8FBD5076DDCB13BDED3E9
B924D434639DE32215C9601345AF15CCA3403632D1560F91AC80C6BF8639299D
C938D5BD8DEE98AE8AE9951A16650E9B0312A8F11D9295B813766D8DF18867B2
481C2A5C80A4ED74D4381FC4BF0C84B41529A9560410C14D8CEB7C86CF16B886
D6A62C5FCC9068300350F4C8D368F3FBC73366AAB70C5D7A521F8FAE455BC8CB
60AC10899413B48F454B45ECBD43C08291E05C1483989E5A036154E14464CF17
D52AD3CF2F96B805BED36E3E8DC03796EF777415A1CE767F96EBFAF9CDEBE31A
017F99C5C474667344A1B284B2E69766E9AB063EA6463D873D4323A7CD7430D5
6EEA2C52FEB5CC20778A97AE837DD6F66443CE70E555FDDFFB003CBC15627BBD
8C6B78935A9A0B3697CD689DC8E9878651C77BC3C5CD9E19077E7BBE52AE87B7
407E8AA47BF4AD2835BCA9554128941F20FDEC6621E164311BC1358F12BBADDD
95F3228EED688B60A065BC87907A303019D187EBC218B8993EBA13A84934B349
858EEB91B7E37A4990B88527CF02D0F129BF9CC5DF65F771A2AED1D2470557F5
E9289475284BDB88760AA55578CD0330E7C21A5A9AEC2760C966B4CB3F7744B2
17158F1DEEFC669CE634DF290D6917A21C0A6D9FC9FC96A18E89E85DAF011A7B
0DA57E335F09748AA9E6D0F8448C60E508667E3581ADB3BFE98CC506741EA23E
C36481DCE7C0450F5A01FB37E9F22F01C099718944874B0E4354F6832A517F0B
0C53C455C08E041E58F0C1948DB0D0B8C0668E05E0801BFAF13327FEC0B33699
764CCBBB454C5E436126108780D50CDC430E3268A3FF1EACC966B4CB3F682122
07C7167842EA61B49981EADC44275FB45AD6AFF76308D05A022F5224653E7D66
5283B0BBE7F99E6DA5E14B1E6E856307A4308DAC53AFBFEFBAAACDF1A1FE168B
D72AE2C925B94E58944AD303DF7A484820374FA0D1D6142B4D696B23E44F88E5
13B4C0E71CD5E946D8FB4563610DE8359CB1772C2C37A6DAC514AAA83A80EA9E
DCD3D2A5CB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusRomNo9L-Medi
%!PS-AdobeFont-1.0: NimbusRomNo9L-Medi 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Medium) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-Medi def
/PaintType 0 def
/WMode 0 def
/FontBBox {-168 -341 1000 960} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E178732AD0E135F772215
EA7EB7EA7641D31502E1BB9661E7B0E875AEE90400138F2AAF4A8686C73EAA44
E5CAB467770A3D12E9807BAC97B24A8EFB0E276760F4F51EC7123C43BC6F8DCF
9A2F496A9172813FB461FD870763306B45670653A9780FF409B734CFA74C12CD
150B03344295918C4ED893FB620A9499404B83C71152BF2F2DBF769000D116D5
EE264C016EE3E1241018F59544CCE53E5AEC124CF6C59A4D7D7D511ECC9AFD49
6608ADDD237358D7CF8B4D1C5BD1158CDF2D6469D9BD6E6D9762ECF34D1C3C27
5F69900E0D12AF9B21F153585742E999870BEE3DFF6309CD82968EBB40D9C269
CD4306654AAB6734151132DE4194072485FD082FBB6DFCB3FDFF9E1FC88D9483
8AA64B5825293978C70C9EC095B18352BFDC34B4BE9C939384E3281BCC6B1808
A6B61EC4E47BB6AC14B105FFA7ED6AE99A1CA0B360D1A5C24E0FBB55C66F5811
A5CD0625654654651979A8C4C3612054181CD300CD42D1D9CAAA589118D6C7CD
5EA8A9A0C639D5539430D40318F4B739DA281ABF2BE2765D44F45B218BB192E1
9EFBDDF7777E8730FA7DC0651BCD5D68EB743C51D9CED55403021D45F77CAB5E
7E892B3D1F875DA86C030A2387487DBAC8795749E849EC93439C9E22EB20D11D
07DA0F09EE9356D55B8D0D8555F1B0EC98C72863B376D3436E10DE2FB1AB9453
DADA019DCB64F6D059AB3A95B28B94435004C9A8BD3FB80E2B9DE0E330D03622
3AD965B4283E6DC880A2130185CDABC053C52693CE3F50557F524D7CCA9BE05B
FF9597ADF5D1C432C00C0B0D8EC2CA8436685B4BF3E2105B89FA6CC787B77637
248796C2F43872B3BFC8011159C22EDB7149AD8932360A88A223CC638BED257E
04908032ADA750F17279F7331189C322CB5ED9B66E502945BEB1EC68B1C7BCC0
2322EFD669C229B28CE1D0CBC0005FF967D0A4383E29538AFA13D41D484D739E
487D497DEAD8F661847A5D82D77D91219ACF666E565292384728E58E1A489054
8C3E34B413A6A550C499218E7FCF43694CBEAD016119CE85515F5EDAE3CD483B
A0F32743E7A189708AF0CB6FBAB22AC8F23604FFECE038C838472CA40ADEBF08
47AB1D450E07F9D51828D25DDCA679E3FAE54634A37AE1A5A778365C5A2C8A27
64085AC775AC132CCF27CA164C4721F67B63D52E388B17122F15E5DF391674CC
B6C9EDE307D79E390068970FE0AB210337558544E8CA59BD8BAD7D2ECC69471E
2E0BFFD4778A2E21C19645790DD11C5A93C1C33BE13B6A35DA4487D9EE9B38A4
1B2049FC64E228D7319ABCDFA4A29B08A08DD8430B4EC67FA6ECA214DAD0BE07
680225415ACA2FC86CFD32CB6210B93F60CB7A2A2959DACA9F8C687C1205E017
F6EA82A4848CCD1E76777B2EF6EC7952AE77117D3E5747718836EA0566266595
AD39130B59BD9BBF3F3814342022B997F022EDD9808B2F5F49CDBF36BDC71F0C
741EFCB8072813793C66CC14721FEBD858665236BE384DA73C9960A9CE8ABE91
E3684307EE1FF44D500F186F57D22DAA956983F58DE59FD2B73B4D2E1A014846
E680CF3A27560D1D9AF2D655DB049BA9E3356197B8071D9AF5108E518517498E
CE0255C8C4126287BD22FEB768221AD5999522E137F808DCFF33D40632058319
3B6201E1F9FA19FF49A5888335A21204FB9C29B6272613C152BBE869D3E55D11
D9759587F283DC60A2707EA2306152788DB113A3E347B57978DBC344FF1C817A
7836AFD8AC4F96F2237620EFA9C42C7BC988A1D30E8B43279E75042A9C413C83
8DBAE11B315A3B6B5FC1351BEB300A84A5FFE1F4E73AB0D97814C976112B9DE6
0C2B9C13E5FF22026C6F2643128B9155F977871CC66743AE79A77B4E9F707C6A
0E129A2ED4DF0D3F43D356D35F9E885757270E9F21A5B23BC009597BDEA4E71E
716433238AC886D639207031A9A1CFA77B04FBE0579546DEB6B1D267007B178D
AB23BAC475BA70CDB2554C11C668C39AD7EF03CF8A2EFF21391DF3CCA7ED2CF5
B5C8B2F47974FBE8689B641519DD9805A5D7D9D85748FD8BDA10E6C2E084485E
E622F8D087C10CA915447802076378323B5DA1178D92CFD7E9CAF75E978BF7F0
B3A639F351534F19665BF09CA6E71DE0E7EF6E4CCC3AFAD9965A928F7C24C0BC
7D55D16AC3D839A055C36BA4FF9E626295539FC859EA7A4A30C8865D1EC80E13
9A017194ED178FADDE49A1157C7D1FE4E809078F78DACE5A54C0701E38514044
7CB399037F850497C7CE4093E2F1A817C5B8946594087D55C2495990EF32C290
CB9B92D2B26060C6893E637E055EFB165093697034EA51AC4452F6F487A43408
BC919F2D6B6BB85AED82C53E115CD32D57D0AC1341F0324E85E9E523E5DD8638
593E67E6FB269FE8A9F72055812F964F31BF4133E260320CB31E9D5A21516A13
619B0096975AA15E27722D7FF1EFFBD47455A66E2DA5DFF28E8B1DF45EA09F2C
D140E6BFD418DBE559490BBCEBA6EF56C66D97CCC38A10E0EB7EF803BC78EBA0
3DCF28A5693D88FAA5F97793A179E82B57DA82F460B73FA9B9A3EF069702BC75
D3223C5743622228EA753DE3442DB12ADD7900805960C636974355F5BA0B8FEC
C922784AAAC3AB4AD95206ECAD22C4FDBDD9B918062794D40A6FB43CCF1D69F5
5D564C400E34905D710F21BB8E6121744435A51BC1E35515B913A00461E8A75D
468E9605BB1849902D50F737DB9F4809CB5813252D270371A93BC36DFBE6021F
EAEF443FC46E7B63103DD97C84214E9F17E250B55E65D8F14AE6686EEB06A17D
1AEFDDE0979F851D7FF3A626496695665B84FED4C7C258DDEB6810BECB56CA36
39B6CEA996D6E30A247FDFCD5CACD76D29A46A7E67C4965A8EE799C31CE1A20B
034952016BE1BA65EE2F2A8E45D4E4712AE3245767C2A0985F438C4DF62CC7D5
67B4C01CAF04B6240F10ACF0F996B91ECD4ED29F87B9F2B0AE84984AF8130F0A
BC7C44086BC9088D84F77D0BA3F6A345EEB5AB7E8D1F0D615CBD7F3E302E4430
D8AF79983D5174B666CB676BECAFED14399A3C6019216E600DF46A93CC09CDC8
633CEDFED2A5F9EE021B2227DBAE9F04AD3BF5ED74076F822CB19D4538F143EE
A03DE48C4018FD271DC84C146DBA39A9B243A9D9019ABCBFAD87A17D5FDB3DA4
947D83742BF94707B46C4496291859CC06A60CC8380A42EBE06BB9BCD7C2350E
50B4617A12450A4F95CD3828027DCFC5FDAC63F4D9BD628D79BBEFA0A245760B
85588C11FA30091597B50C6485931A458B474B3C77D56D063AD44B8774F19CAB
46BEE6168EAED2B0EC9606F6300D6B10DD25BF5803765046AE4CCC911204E513
A378EF5BDBED7725AEFB4FE0505B23F0EED4CEA493555A7D35BD9676776D7705
2EC812731F43EF524E3700DEBA71AF85BFDAF1F662D385E0AA4D434F59FCC68B
1C0B41678F97FD970394FE8D21067F8F5DF8B4FC8AE2E3CF740BE6D85F8F6F06
412B6D6AAD10305D26A2A310B04AD8F1767A4F79A273703C1DD91907A984DECC
78D901F1B109A7DB42F5EBF35A2AE603DE5D3CB1572F7875CC54AECEACFD8FB2
B9A3F2E995AAD008B0A1793569F8B29561573AA857702B4FEAD295CA496C06D4
97EC2F3CEFA50E2A0C868CD9BBC5F936E537F096041EAD0AC2FDC2D3BA9B36F4
4BFC4A513FCE430FCD1630959ED4904FCE5F85B2FD8AF1D10AE1D002FE8D2F91
A9884F25F4B046D2BD09D897286EE1AE4EEF343543AA94AB29F29A950AF02865
8E6219AFB22E52F8C57F195F6E652413F527B2581AA05A5793C60D2FF6DC6C55
8739DD6BF1BF12BB9A20724A176EA462593D763D90BA0719EE731DA5EB22CC6E
A8BD93894943F8FBE2A052CBC2CA6D633A230412D292438937409FC218E9F9B4
A46CC744D9947BC5A8F0D81313CA6F5EC07B3977FDEBFBF6D5CEF96440814F44
B4992BFF58B91EAC064C64A20E51436FD2CAA2685EC8A882043D6DCA44400F2D
A38BC82E8FDFBE4FEC60F76857535D9F058AC7D025111C81CD4B3F2507585EAE
6A5254B1A9FF20CA402700E4F6522AC95BF2E373518CA54EF4B01C53DA7D90EB
63E0A07C349F6A2968A988BB1FD120DA292201550823820978DC7DE6D6616F80
D27062D5959E5909A7B7CDA7A4D49DD7091BF0AFC053E2DD0CE5060B84E05ADD
FA249B439DF518EA7B878398B10905879C569EA213FF364B9B37FC3931E1C70D
B79FFBD30BC890CAFCB101A40DC768D5535EEB54678E70AFD52D5B64D963F485
48D7DCB55736A343543747AAB7625CA8FFFB16E186C3203385E1D80995284AE9
25230A3FC756F55822EEFE030D88CD7CBE557BCE41309B76783698B1F9D21091
C1E8512ADFDE5EF1A9B5626AE3FEB4F127D06612C93517C3A23B766A8B620311
01F46245B0AEF9EF2AE5DD19945F77AB14169547EEAD422471FDD376E52ED6A5
A9C03610DCF286572B7B949A7F08458EF4EEBE5513D815C220AC4039D474655C
318523B9499AA1C29B78FB6E21EC0BE3CD856437A79048C8FC5B8E46B8F6E8CF
C2783B4313B2F735F4CFB299B69F809C87D15CFC63870790E597E38F37EE0379
B1EA8E3B8DA2348A1F8927A5C82F68C4E9D817D5B521F769690B5801F3627379
589F11E89869BE35BA96C90FC0902B167500C25370866BCB1391B4C6CDD05003
2EFF7B63DCDED18D6B7C186B694FFAD725F0C1BB1C6B1A1AB15F47B697AAAC1F
275CA17BCF7E79EF4079D701BBBF306302311950AA3EA5788239D1FDBD99B0EA
B041DBB2B7517176FEBA36B62D8F1935FB1518723CF9D8C77866A6DE13F519D0
5CFCB01A9B4119EC0D6659AFE222577D53A7B576FAE73802D858C5393E8083D1
D0D01C4C1E41D71844D2EF36E52562358AE3EBC1F6133E45440550695787E0F7
080490E8DDD1491096E9A2096D52AAD9290C4DA30B13B98BD2BA2140ECB7E63C
D7B447D4C40763B8376C78DA73409599D242B5DF7952B08A5ADA04CEC3DB2502
C4C4A91BC788FC12516BC85BC89A23C2CAE9772ABF888D966E976366613A8F19
055E787DF0962313DC2BA44796BDB5DF0FF6FD153B5BB9A392D09E79AF5106A8
18D906AA038D303835B4250A6772745D0D59C89DB79F5730A3F3862913AEDE76
85F7C1645D663EF374287FCEB15F73DFE560CF71848CD784BBFF1F61A7B893FE
564A6CBFB8A077E525640CF21194CF072DBB2641534960D5246B4461DF495DCA
C8CE84E14B437B82D1D8591F56261EFEBF59E51035F57BF70BA92D23238AF0B4
5E51945E819F047DC687DD3FE18AA19A7353A6AC4827F67FCC36058618924298
2BC8C8E18B9F260F3109B8E21CC27AD9B207D4694F3A54CD199E57BF87646D5D
E2AA6843D41B6E5AAE85B9B747A7CC96C8A88A654990FA928BC883B8E7606993
84EB8115BFB080B2E13090929978105673588C1DBFA6204EBAEBAD35AC7918A9
C6F373314BDC5623F03A48CCFAFD2392C817B8F7FA666FBE36129A36419F61E5
6963A758EBCD38F57552442400959A62CACF5B55362487180E36AC1835CD7AE4
1CDE8EB6DDF2C22733D0977F61D836C0BB1FA3D448B363C36F9830029E468F77
AFC2022271FE6205D65C1785F299C80FDAF145DD29B3B4B551C48CF2F739CB2E
C7AC3F669435F8EFAAA65AF2535FA1D1A508FBD0ADA101D63FB8D32374AA6E1C
2ED407DBF4E8397A9CFFF661ED86EC6CFDA227E0CC5910FED1BE09A22ACB76E2
F71328CE4F5641C180B6D0DE5166EC4B4F7BB248B3DC7BAD2904A97575F8B449
D572EC54B1D116397B924A6BDC58D92B51174331B8A4CF2422F0FF3C97776A9F
6A41F6291A00841CAC732A8D05094D551F641ECD4C82839995A194DEAEF3683F
E5F94E38618682C321753AD401648835E0387FE5342D17C481A4D713BA06DF5D
6F6AFF17F7CEEF7E51870F4434BBE0556851FC6BE6C6B7422A8B1F6A109A43F3
F8F92DA0B1B3A34E9BB9BCAE0E89082ED185706E1B04707D16191026A9BE5C6B
9AA0D1E9EE8B39A37AE623B3B8E9274798F32EB5455A608A969848587C1E71AB
4D0073D71DC38239BC688D3F5F61CB43AE2F5E90660E66A45DBC1BEE2A6CDC46
E94F4A4CC84D6E995E6EB58AE03B17825065A7D17F4815CA118A1F4A46BA511D
4783F11B5F18899CE22DC92237B4D55F4B58DFA0566AF29195C653FA085F7122
58B8A1B9AAB5D70E5253D461C07824578BA0079ADAAA937D6625C81F5B0A94FE
D862564AFE70CB77734059B1B136DFAB5E89C1B76C61582F341E570DBBE34BE2
13E7DDC52BE2FA7DC3EFAFEE0F00BBE72F7BC9DBF8350951EBB567DBB7350D54
08C621CDED6AC22293A666201A11E6E6C9B15F23045E29F807987F3637173FA7
79ECF22A56AA459B4B19F3D15F6C7215840AB673F35C1710FC0C5EB8D4B130E3
CCCEA5DE4B9343E6A8C7E2A66F983AEA59334CFAF4EF43F7C72C787A33E70D3F
3F47AE1BC5095FF6279E1E986AE902D0BA0A157E9EFBC0BEB37FFFEE3BEF3E46
AA957F5D1988A3D8F64CA95E23C91FFC7FB7F79FE1377F54F2966FE947DBF44B
6AA533601A02C87F60FDCD5C26A477D10A511BF3BF9328F41A006C7680AC05E8
950AE2BB10E6638765C46EBB205059BFB3F5AA27D10E337086144AB09286BE38
2EE52E2D85938BA3F031B6383E1D780A8128664A8F1C65AEFAD538B644942B6B
97E778000DE2F2AC2B2280D4601187F13556C213E42934840ECE4123BA815A5E
0EFE139D653820FB3EEA998267FB51CF42EEAD7BB3CE7D464934C7B0AAB2ED51
D07FDBDF93556FA7685C611FB7790F1889DD54EE0164A61D924F7B17D99E1679
B5B4257F9BCB5485888E3F74362E408C5F84E3E7781B5BA4D7629BC541D7616E
6DFEE98F0C2A1BECD6F22EAE4A9CEC94B894904916531564BA32C99A9E9E4A77
93BF6A216D329FABA01826377C35067A7C6785ECE0C669C03B8C1834F9E75EC3
CCADDFC18C036517987D3138F766C683B86F0D74C8BA15DB4002E1941504FE6D
3AA62C4F5A11EDE8174A8495A573F01807A82D6A0C634658F1BCA8CD02B60BCE
7A4975433D1ACFD965F3C47D22B2B8E48DD0FC03723FCCBDA11C598DE6337C0A
9CD1BD0F941499FE074F8C474A8EB547159F4D1B6CE505EBA5B75AE65390DBD5
8A4E7668ED6054923188627F7C9D623037D39D2E88DF6E4D672D1306407D69F6
33E5C7B79CE97EFA36B3B31287CC4D31BBC3C5C605452A1D9522D16A6757485D
0CAB40A16786F6245A907E7370EAF4260A698AF73FFA7ABE3A71C4D5C14170C3
8F61FE06BC63C0F4441BFD54645958EBF63E296F9109677915EDEBA3654EAC3D
7A291FE3F1A80BC2BA01FAB65E3C91AF82D5201412387BACCAC1F456C8F786AC
97514ECCE80BE54C77342B0046436FA960ADE0663431603335A8DD49D99E769B
D73854599778E1FB3675A47B77D95329CC6AF6809F952959587B24A6DD1E55E7
A513EFB425B3A0F9ED33760E52C722A0A99A27CDF940B9C096DBBA4915FBF848
9EDF6E2BA06067F8D9DF3E4AFB32361ACAB13BACD3E465D094B64BE958CC367A
9EC6EE5FB3A93AA01DF86760FA5C65BF5A00435832075CB13E7FDADF31737F36
14E907DECA0186A010F4290FC2675B83E9CEF6EA95FD665B591E12E4DBC46ED1
E4D244D4BF573DFDBD61A080CDB93C6BA9E503669820A8CD622F9B0C79E4635A
10CFB39EE250AD0FE4032592271F818BFDFC8AF8099CBCDDCDFFE15EE19FB8EE
890DDEA0146E9E5F0EF49715BDCDABD4EFA0BD65C687242876F04BF1B180B360
40D8AF94F0747C51AF46810FA629B0215256CFF25F22E753393188F7B79B49C0
F138D349C8017386EB0C9E4399A7AFD8703D384864AF4C0367F6802872DA6255
336DCEED0D10BA36A1B9655A2B8D0970B9355E1549DDFA2C1693F085D63D1FFF
71113FC1E730AB21E97643C5FF3296C63A572B75ABED136060C10399E698CB78
16B2327C6BBFCDF43ADB4E5D6BC03885546D798871D0640D0ACC03CD2BD48F18
EC823A5D4D6CF561BBD026180B517837886CFAC077EF784B2FFEBB798020CDAA
CDA7BF1E9DD09B987DDE9A64E9BBAB13EEE8394F622B1D07496159EDB225E9A3
362FBC02F1967F03994813636710D9ED94A70C0FB7BE007E12DBE00E926B6BD5
D925DFAAC92B25E543603F2B5A4EBFF4319C13B2C1C3C278BB858369D6D37C88
14620146E27E3EB2BFC5D55D6F7DAA362E40524F69A5BE3E842E933468C40EA4
44A393C6EE3BD16F5B4953BB6790BD461578CC7F7156D2E5D82C74EF48638AF3
60AFC9BC72545B8B2A1349CBD761F75B6CA0D9B4B4F48EB579F3310F51AE03A0
F69B23D535994C0986F4DE13A4A97E0475F8ED3411FE93B8D5FE942F9E153AFA
BD9F116385726E900BCE6874B1C835B54AD41A3B5E9735C22218C9740E920185
076F9FE24F6CC1C2482A0BCDFFD9E1CABF99D2DFB9B88DB82CA071D78BF9FA31
AD6C6FB88D8E7CE5D637350D51BFC1904957E07C1D8DA7B71D8506A731FDA144
3263FB9E97AEFFFC4496BEB5DEFDF6C33B5F6934EB02AA8157C014662DC49623
962FB0309E6B7F71B842C86D8257D9814601AF6BBC155CF0C36D9CEC23BDB330
A10EE087E7A906C63EFC4CEDA272DFD180BC0B9A1993A9B392569E64CB23294E
BE3C81988D9A0F788FF95705DAB0F8D8173EFA57438DEB07F64FBD7B73D99CAA
D492FC6BFA3D2FC1139BAD4D89C39B10EE9B6B273645933425C0F6488210EFFD
CAC2756E95C19EA4A64D445BECC73A40BAC42EF440BB8106043B89324AFE19A8
81799DEA617DF96B4104D9389D396B339BD81267D36C0798F5C481E2D94551D1
1A2C06C1EF79E4802C435D09B8A4D791F756EABDB7EB989213D8E0FC90B21922
BC40DE6DCCC4380AFCBCF3125AC8AB538565E06699AE5D68759A52096B795DB5
7003F40F4E3D39ACE81E6816449AA859A9754CAD9B4D2A044215A4E5D214862A
F46F37A19850544943979098DE780BA17A05A01B74BF8D0AA0BADF717AD3D206
B4C284322B02124415DA5CB7FE994C3506E6C02DD94BF7B5334C63ADE304189A
993413F74081530FBDA87E66FD2794B5AA758162328979CD3ECC032BEADE20C0
01B5D2A969777739FC42EE3624CA9754C4B6A8B33BC05A3C77E9A3642B13AF7C
2E28DF5904959122E200ADEB44D45E51F2B71834D2BF6EFAC3CCC40D3EF3B2E2
080F148441BEAD36B4369B8114E1BDD480913E76BE4F94D9F38EE7F481B65FD3
33DD6A1DFD3F3CF2476231B11E3005F3FB2754CEE894D80941B53079AFE3CFDE
ADCA35197032D6E6D6B56AC7D0A18A9939B1590B3565E8D4445637ABE0AD570C
6CB87E4289332A867E6D4535F7635E337E367C9682C490B04B0CA0A969E41E3F
04FA629E2B6649661FBBC46EDCDE5659639825AC78602AD07851D8FE9BCA9706
82A28C5262CBEAE15984ED81596EB2039CC1A9D527148499CB81ACDD09686958
1E002A8CC83AD69B46600CC1A850C3314D6CF5FABC872BB7CBADDD96379AAF85
8409B16C0FFA3AA93A437BD5C68850DC71A816B0D510031CEEB959957A0BE481
889125A9F918B0D589B3F75135C5A2418A1C3FA3F71244C924A486B70892B289
F75F5ED3394592CEAAEE1849027B06123A1A004D39C1DD6D89C1F439E0BFE3DF
69B3BDFEDA4AA2F15003996D966AE656DA6C3F579DAA7490C29C5399BDB16EEA
2A7AA8206C802A7939C43BF179895E1A404580399E65C1EC0F67570E7D0290DF
568B818F514EA832662C580500C0575C9D9C4F1F9134D310AF8455122F4C1D0B
329A4EA7A8A7C396CAFEC6E714ACF1277D793E1BF10A770CE0986BD86BA865BB
6764F3D0ECE8F47C37707227A4FB4DC714D6D083209DE17807C402DDB5DB4FFF
E732E4C2D48622684DD62E3814FE54DA94D9FC0079A396158E522ED0AAD42CDE
2510FD68718C39BD2C2D6F18A0E84E16F2BE0203F7998BD9A2DED4F05C37D8E3
08BE7437608A2476D3C256A2D9248B72EA6C66813EB141510673BA01ABC8A0E8
BC3D92CE304186AC0DE7537156CA811C2667B98729700D11A096577C83BC75FE
9B49AF01A76C098CEE309FB21CBF1E702A43C282968078577C6327894B7C898B
DEF39CCE5EAC96DFF2382CB0A02F4E8F8D66936B4F8AA31FA0504219E177C6CE
04732DE402C28675B066361B6B250F27048958619DDD832694E50798F4ADBBD0
7216C5D0FF39ABF79CD53AEFD7DDA3810A72BC96280BF15564CCDE5DB9AA6F2C
7CE4A4FCF7685358F41F7961AA4A19269D57F741F07A38C0022D06D64A45FC43
6DED09D0312443E09A4BDC23F87B30E0390C87840A6F7F1F74F2AF2E559EB274
B764DFCA522FF44B7F4A0070624063CC70B5F5546D4B221ABAA649FB74E61ED1
729F29DFF969E0FD82A04759D484F78CCC4E7C23469E8821BE26C24981A89531
933EF1DA39316309EE028DE97232BAB32BB483FBD838C5333E5D81003D2AF91F
D89F3FA8506F2688995B56BAB4B64A2A28D12C462D06FB49452E8294C77EE248
63B08EEDB0BE039D24EC6F3E6DF69206BE1A7830E00DED45A94304C668829191
FCF91B62C280C7B25CFC9A9499500FD5ABECE46F33D9128E3AB45B388BE7C1C8
1A4DD710BB9261E9A5F4B5104E204942546242DEF35CD8ACF99921C48BDE794B
7E873879F78F8E46AF15924A0FCEE7B11A3173A610DED36C92A5C6852E407CC1
FD9C2609A3082C503217E38FB2A662D90B3E56E274D26A01EBCB16FFE1D24FB5
5DF4E3C5E980CABB0532B101D220EB31919B797FE348C27195B2DB54EFB44A97
D56B716586B1114D950DD990A1F8C6A2A6B930A82DECF74B0F185765B7D0261F
7D59B59DDC71334F4BE32416D82383F460DAC3121188ACE8395BE8A911A4966B
79A2C8E87B4D165440FE3149E9C29A4DBE3E61AC83ADBA19DD07D9ED44E8A25B
8350AF17E7197385EA05D90D7A1530155D5DF70E769CC92BAEA7CBF399BB6624
8014CCC7382A649D40856218874D06EE163A31AD2ADA912E163843116B2C3548
52A9E3ADE4AE029B345FFD24BD9BE18B4557A47D3F0DA5D034907C48BB13E522
7F7F98FE9999526AB0E6532C0A05B7D2DD0D28CAF1C9C4A61E124222E5DE4AE8
8A3F00FB371CF48DD679C63D8686198558C3AF9092C439044EC7988685B2B709
C3184C4D2F452C7B685382D9D4131EEAC496E57653E2B2980D34EEEDD5D84906
6469A6735AC55749CA720AA1EACFF85380927410EC3728D9A9480B1C8C40D88A
F801CA49AE3E673DE3F967EDCFB8A2EF801625B926970F309254C021E791A60A
5503E1B087D92B46FDAB638D95AB9BFD6950333AC92AAC28A59DF8E7F21FFE0E
8168502A95530D93B99EAB97360B79A7504BBF5BA6607D95B4C1FF267C6CA8B4
0C8AB07194302FCCF864E46CFDA0CFDFEEC52B5164E5CA7FE71D6D02B9644CBA
FD8FB381F2A42FDAB651E02E56341EBE69133AB5983038F6FAFEEF4DFC63C127
C6F01A8EF439B5F0E57B82E05FDD5FC41B973ABF4D878CD6A56D4EB0AE4D827D
0E09DDFCC409BB0B847B13569410E8A1E6E6F8120EA41F10B2A9E2595B5E42A9
4DAC9DA9000C0622F9A04B60254A1C7B8FA61DE2A48F764EB811E304BF5E63D7
C15208B39B5EB947ADDA41A730FC208393332FD68C5BF0056D40C4D0411BED87
59156B83FA6261A788F855E25D1EFBE9B6CDF3AAC9B6DC8EBA0445440DDDCD70
3AFFE24175770D59F72AD77A7D743E50CA967039797CAD1424CDFC63924D1621
65C45B8FAB54ECB3829CC3BB61547110365DA3C58992CE6941B16BB001EABD84
0C9D04C550365AF0E5417E65776DCD92858051D81B1C09186F7B0A766D7EE8D9
DCB9DCA09A002CDA5C66E851CC8E6A7E584F1AAE2D4BA6001EB9CB7FBDE9AD66
5AA082D614B01C3C928A90DE585CB11111EF76FB1BDE6F210653A5A96AC2CF1C
CB02322954BE39A2CE11D9E9146145D46224534563B51FFEC6F45469A99BA14B
36DA32D7AC6A51C7C7A30BF1185D341DDD03FBCEE080F270980093B855770306
B82829382E8CC85C5EB333F9E06B4023AE313F5B435263111D19B7372B8CA426
CF8A42D2B7E2197120603843F75820EECCA2185D860B00C7AC32EA03313919B4
74AE0A92A80E42E1AF3FB7C3058273B3C4F37E4CC29CC19ADBF150787D04C785
176FE749953E9166B7DA636352B0968704E121643100349A7931F39BFDE80E88
9C520555769B2CC87FB632C65F8F89FA5933F8C69E521CDCE9231D15FBF9F603
9EAB05B7BD98A549B2399E21DD531F0CE17743465E563E779EEC12C819D079B3
C6DE438B86693B414EA4D29E73E4CA24A76D84DD1F740AD5FE3C25EF51361E1B
50DCDDC0AE4D8B48A2D487A8203529D3C89850523A49B3A14A200F156A433E5C
9285D31A41EE95FC4304EC731F2F8E0D3EA802B2DCBC46F28C23FF88BB39B84B
0DC4593B6D153C1D0838D3889E34E48FC2F7DDB37452B70071B864AAB183C212
27288CFDCB33DDD5B7D6E64F6177E7A003E4AAE3BFA9530761D477BF2E716923
7D417DC42AE56D09010320548E1D6C45F71F73FC6F47CCC577E4DCCECC1A251B
EB21C496B4931AD3D750209F43F75F7B190EF15AEA7A894E82974F6458C4BA5F
5E2D7917EC9A55BAF4C250F1B7848A7E5CA8A11C24AB8A9050AEC46A8CBF6C26
1C172810C3E9234E38BDD210C85834BC60B2E10E2A75EC520BC5651FC58FC02E
D9F7B3C7AA47F24D7E75D29A752185D469DEB29A4689BDAC43E3A6BD50997D25
2389
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: NimbusSanL-Regu
%!PS-AdobeFont-1.0: NimbusSanL-Regu 1.05a
%%Title: NimbusSanL-Regu
%%CreationDate: Thu Mar 20 10:08:51 2003
%%Creator: Primoz Peterlin
%%DocumentSuppliedResources: font NimbusSanL-Regu
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% Generated by PfaEdit 1.0 (http://pfaedit.sf.net/)
%%EndComments
FontDirectory/NimbusSanL-Regu known{/NimbusSanL-Regu findfont dup/UniqueID known{dup
/UniqueID get 5020902 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /NimbusSanL-Regu def
/FontBBox [-174 -285 1001 953 ]readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (1.05a) readonly def
/Notice (Copyright \050URW\051++,Copyright 1999 by \050URW\051++ Design & Development) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -151 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE33C33655F6FF751F340A8D6C01E3
2E02C24E186BA91B34A1F538959D4450CB683EAE5B034D030186901B458D3777
6B3942BD2E07121385120248891AEC2EB33C4E3A0CF00828D0F130C31A918C18
979FE94379C648EF21ABF659253E43CD1253866F157F1DF85AE7E8714F061B1E
ABA3AD094FE8D6293916FA82EE4F486C7E513A06D4C9BE44306A8287970B4ABF
B6D1F9274A5A0BB6ECF713ADBD1260D5D6C4420D357FD486470A74B2F0621B59
A9373ABECDBF32FA68AABB66FAB0C970A3354A335D70DB2CC5A3208BB6D768E7
B58CD9BC2B6B7E110693C5A88D680B7290DB121996E3B7C8AE3C23147280F8BF
D8C60B415552700FF0E44C2257B467ADD5D550F61EC34A76143393E0B34D55C0
8B64B48E5F1FD16E16B967511AE15434B7F755BDF2574191E3C3DC528B69B5BA
7DDBBD3C7878FA69ADE75011A2C0F02F5707E86FA632D1269281D3C265B31F3B
F3145052467647AFE18B9D763FAEE4BA72CB9C385568EE5BBF5854C278F1E3CC
475C6234E83ED33345268BE52F0931B58F302EDA0D5751348E7B7E53D4882FB6
9343BDAAE87E48F6E82024D8EC1FACBBA36582092CCD76553B0449A5090774EA
7242123C53B80F2E927B98DF2B36C403D1FA1E9F8439F3964DC9F89A0CAB5AE2
C907309460F097AA87BD156575D6C73EDB2B40C015E67734397ED14395C43394
7A0201C6B0F652B035FD7BB82ED236D0F7C20048AFD83A56925C7A2898B46270
B440913E4714FD89697B3E59F5BDD5A2AACF6630257957ABE1A63502A3081B6E
307A534A9E238F986D4C866AFBAB7A0B1B5A6E99AA0A56DC1FD7E8A39CC45147
259AC7033A0C58192CA82FB12E09F309F75690043646193AD92D2368F345771F
01CFD21236BA52F74E36CF4B94259CDBA2EF1D61AD93A2B942A9896B0819D20C
59E440851CB99E89C887FC62FD9E7F88F54E5BC157D81A5FBC70699820C51BC6
27D7755B195C0BAD8225A6F3EAE0A5A674E8AF6B11BCC69DCF5FB89D8BE0E2E5
FE7E2588F93F583E4E2F6ED5457E90B902B02F51D54B9F0BA54291E687F4A7A2
08CA5FCE0C9F3B954247312EDA3C532D3DCDFDCB56FFE03B36DB7D549D4203C6
7DA8772A2F732A15DE675D3212C28DC755E3D0156A777BF514112ABBE4372ACB
97D7834813E1850F90CEE543B4C09BE1E93742EA98B8CACC09FCC4D2595EECD4
46C942EEA60211FA7DBC11CE869D55BF0C7EC6AA747EB2AE2CB3CC2DBEC936C9
540CE2E08291323B36F6549CDB97BBF9F0DA429CA9C863B629410885540DA6C4
9AAADB30C39051C993CB547BCD573D6448DC09BF7FF2D1B108ABEC2AAEE4060D
182ABDB3100AC627E5C883E8F42D90D699C8028D4123472F211C8FBB744D7E3D
C626ED03D8517D69E1ACD26BE4F83FAE31122294816736827D138E4F4CAB1681
236C1654E01231EA7F08AD0E73BBE1BE19A7AD6DA63AE0C7F5A360A53BB35268
CC90125C7545D9D59F5127F0AD964AA66DF020F639832FAF9C2CCA82C01120BA
6469960C350D3AF786666EC14158728E0BA2DD8A639C28E0A7EA8BBF608FD7DF
79C7B5DDEA05C8C3D6FC70177D1A9EA9AD056F0CE31AB535A22FF7EB33748071
6B28CA5465E87196191BE975E7C827B443B92E15342609FB93598571C63AE16F
CB7CCF15B8921F38FDB6F24403EBD6D6BB66AB49962AD578E93B235E6180B4FD
4920794B3F976477A04AD21728815D3185C74C8A1DF224DD3EE5110C18BF691A
987AEFB1DA55E4EF631C48E3B2431BF959A66D710C206B8AE5E988B7929BEFDB
CAA93FCD07341EAB622A755FF5608562153DD6A09E462ADBE677E6F550F93921
299E8A99B0B72E990A1D84831236FB6E9D0A187FD36BFA9D85C9CB0414FA7B15
EC02E8C08C8A4F71226A952C5164E68A44344BC4E6810FAD9BFD3532A9A515AC
5D6B5F8B5A1402C2C4DC011B043066ED02AF0030ED0D0769FFA19112C97076BF
F950438DC37B172FADA65DBF0C00EBA9A358B189F80CAB3A55341E4AB391F7C7
C03F47494A607BAF90BBFE31BE2A5E1FBDB07D5BCEE30EC3FE52FF996A595DB1
2AECFA9F05D26DCBE562B2A1AA7A2EB7727816C25E40F84CD33FAD87D5051181
315AEF884EABB76C5B134E7E0185E7D59A2DA456CEDC82C054F197229990E895
ABB45C025940C558D27D410A422B162589F74AA9291A3F269FABA09CC102AAD8
4DE55DB3ECDE0F2944E3110992C45B765B5434116546E08B7B0590C0BD044F4C
8FDCBA77DD4F6CF8516D2B7E2D6939261578BA937C96B03D8E87663D37F99D14
037F8800B4F92621D7082423D46EB801F8502449684418493C3E0271D9ABD78C
3B0BE5AE092F1B220F7BDD11C600E830E0E6DCCBB3600668C10A5315DED2398E
4C6CB5A6F1FCD524EE8732D84A9CB26962F9D2DA9E68A451D7ECD966A568184D
38EEC4DDBED214BAA11ABF6C0DA98201210FE2F7253A142902C790EA3E440E4F
4BA68D46EEA673F3C2DABB0F297FD75825731B554B9DA083D059ED0635D58749
003D3E50A4280C83B71FEE8DC49C805ABCED8A5C71CFF0E5BAFB5AF89F949233
A35B3B3E96DF82E861E316A91438B567D535CA8018EFC18D44944553A339A4F5
D0B6AD45BFF4891BF8C7FBDAA5926EA5679791D474BC0B7939D43C0AA387BDCD
7932D78DDAE506888C336107321779C03ED4A7068476285B6D838DA94A34B118
25621EE1696FB320C63B3235C1A32C5B16F31E6ABEDA3A0C1FE450AB729DA9A8
C89CDC8AA291B9D35805FB5CDEBBD48A7C74F7B7FB791804BB353E026F8DE684
6BB8B0A5FA8D5B171B8A6CBE41F129CD0BE17C8AACD8377A9F24C87063AC9692
ABAF02EBEE7FFD09BCED8419BE40C23AF5E0D05205CE73F1D60FCFE0E87A141A
3A37E514F364D69F176911C743551A4C09D314E550BB18DF86BE78936BE7DA24
70A8B666C6CF2355A29AE2464E3F575888BC221EE13C10CE461080D1A821590F
0AB2728C1147A5119B431A8C9D72C4FEF5896560A69AB23AE66B19D706C088A7
1059DF586767CAEA420C4415D212C03DE9090A72C49503FC4D5C85DFA792ED73
0FC43895E3B7CF10842E24E27E87B7510DA0470A44045D9B4C62FE9472309D89
A4DFC1A311CCA81E379EB4F4F4BE22634AED68ADCD4ECF9CCCF399FE9DCEB278
5253A7748E0D8B4E94D004D05CD5101A7E893A75C0E6DB3744EF37AD46282D7A
587974734C2B1E24D80019EA326FAFE1914A7C9C8FB75B2481411B2B683D30A7
354B582753C807C8EFDEED8AB1C11A399CFD03466FB34DFFD8E0B40B6C5CC1C1
F5AEF52F2E718060621DBCE03099AE693621194CF8BAAD3784036CCF4D17FF12
7D616192B4D5B2924E0E5C384B479911B2250A980168A9496F901258C16D2A76
623073B241927185BFE1389B7DDCED532F88A710AFCA0AB7C0E79D54F68601C4
0DD9E1808564D24CA6C062AD93FAD95E04B8E1E1E995E6BA20324E492E24AB0C
178E03F9E7127FCBD6D82736AE90A15E2567959AD3ABCA151B1C9FD356E7DF42
CCA691BAE353E1421FBEE5D7731FF25830594517728379AFE9DCD1263D473BF3
086BDA4E816B78C3640A6823433153FDFDDCD2562FF704C83D1B67DEE92AD8F7
AC3C721D282AD1027F44756ADF25207C0F84F782527F0FE3A54282A843874C1C
0D3757574D2073497E36D5E090025DE529704B0D6A13650118405C63E63C3EFF
95B6C401CC3F7EFCFEE3AAD6D689BE7C0931E4204AD98FA83223DC6D2EE97DAB
73F345A766135AF66BC2C96A567524969AF925A1035D6C3C08AEB95D0658BAAE
D4E1875F30F7A4716F087941F75BF6ADED0D0EA65F081669EC947ADCF2A30C38
7672F65EE8698380959187C0242D44208B6F68F63A4814650B2F2708A2F8D3D6
F2DE7E12022F61CFAC5005EDC987EA2A2FF2D3E1B44E7735A8DA363A9C88C679
FC797EB95D5B2D592F48A0990E03A27923C852468CC386401D359206A56372DE
DFB9EC6E34FC8E82AF0133348276AAD443411EACE09382A2A5ADD6EE1EDBD530
E8973BEBA7E41B1715A6349AC97E8E4C597AFA2FF9F238EA0A523D508250C1E1
73A4D78CA03827062265007B7E87802AE937C472F1DA8455AE22E0DFF2E86AA2
906C1E81C8E39FB593724B966893FCC03C45470382083559403693078CCE279E
3AA9E0AE2B5207C5E4B9CA5FED96D64A6F0A9ABDD888A0776D6C613F90E106CC
69912541FDF70D766C2512A60169FEAECB72922036B1FBA401D69EB331FCF7E8
10A3EB3185C45EB4A0F4AED0818243BE8EEABB714725D47CBC0F40A1E927FCA3
CC8416584DEB890CB74600D866AFD56AEB559BE3F4DD676FBE7BAA7A10764858
A07B34FF940B01209E757AD5A2BF3E0405B47EE6105CB1271B197DAC7A3FFC8B
7E646D09C068803A7A8980103D8E3B89AAB11787A42C4A4DEFD6918E2A41D098
754D00F80907C6BE643ACF3DA4FF9CEA296F776C9E51CA6D843C653E3753F43D
274D03D3E58D69CED56A37468875C59863E3177A132E2640959528878EF1C868
F8DD11CB7BBAC0D078F8AF381C2F803AF9B4CD6D6F4127F9D56F49082F9F21B2
3210CCAA83740F39917810455AED9654590C19EDB17671738B10F39C23BC42C4
9D0EA6B952B6D89267D834E4D075BB68AAF613767CD14A7C5C4ECC671889CD34
373EC8FB11DFE855013401589DD2DCCDF9167286EED07F582374224432FAB80B
88A45A0C37B31A7402E440A7184B33F68878EAE1CDFE8DA2E270E775BF1A5B29
CD4D4FE3ECAE10EFA34814FB0F0997FE299194AC4DEA9E4CF563EEBAD6EFF16F
200647A2F97179D209CF56DAB0EBE5EC738D2BFF22BE07972AC07148FF83975F
5E4FEFF5D0300378F1845DAE530119508F235A08F414924C38F2F0685E895BF1
EBCCA9514A6BC0255FDC7CB0AA6A35823A7EC224D0A1FF0704690B9137125BFA
9256071DF015AFD1247AEF67DF526CFD87421514567840D3BADDD6B4AEE5F50E
BE707E36E2A4DDA24B833F5A9D815CDA68586C768FDCF9E13219BDACA4C55D5B
E13851B567B33E5ABC22268C7F19B3D3882517FE7A3EE49023144D9483E7650F
25D264036A4DCE17C746B893AF678D904A1504B50287A75680207131B6F6E092
BDFBAA71CBA5B939E465DEA279A66EE5361C497043629C5FF966079EBCBD4C30
354F300EA48C72A1A062AE75DC6301F7C6A79F8D88BAB81E956F13388CD470E8
3539720DA06FAB229AD1FC7CDA580C161A0ED683A6B633D06FCD9A7150CA1823
D674E948ED2B2BC54F031ED9AC53DB8346941B4A5FD323682FB1479148F45D48
04639A3D78389DAC7DD9A1B031E7BE74FAE9B7A30462F8A27B6E84A0E10524C0
50C9F2AACD9D3F6E570E6E04EAC564E6FC4A5FE6881222C3E129691716BF1901
C00E42FE64B8F1A5E9A6B18D1605BAB7A3734726EE3F1E9E0FB30A9C82380484
33952B282DE8C4E897F833F4B8E9A5BC5FE49C5C9B4DA78E14532AE3CF8B4741
F65564BDDEE16F11AD02C94B48B50F5A7B709406EBEDC7D46D779B6529F884F9
CAB64E30D826393F314EE3DFBC86D4CF69765E0643C0D22A9A550EEE01220AAC
39C098E7833ECB8982004AAC22DAA7E337DC1277F8A93D917179161AC89A4C5F
22397AB3547D2D5C51D8EC550D3348DE7FD4A004A3ED4D716E6B59FB64B45FE8
025FB76E97A2B0E369931F47167EED671C586713CFBE91E07E0EA9FFF4626855
3528B088D9D59932314D379C5E3F3DCE489210A5DB9DA582A9BDD4176BB7F7CF
128A289C32A260ACD7EBC5177D5482C72DFCFA92FD1BF4519CE8DB095747AFAD
6E5646FC40483AB37E2EB5BD4A3E164FFDDD33C8F280545CFC94054B77556C5A
08CD5E7FA6602B0065E42667C7831199BC616B1BAC8E89C61C0213BAC1F083F6
0613FAAB0D936670B3926C2E14C8BA3843072D3ECBBE015E06982A0B115058BE
A42973ED849850D0B4F6DD393BE85AC3FF219121AB2621EF100923CF1D90B268
FFA27B5BE0886FC59F97FC6EDB7C0F83D533F3FA4F6C92FADC6CE0A34EA0AF23
5077E56E9F94500656F1621D467118CAAA76196BB55688A6CFE3FE3D41BA5B75
8CEC10A34375B00DB468568ABD1E27AF5E732100C45ACB27811FBBE53EDFFDDF
25919A9752AEFB3EE240C5FCAB50AA631E965B2FE169766E91CB44C49F6E00D8
07E1AA21AB51CBD9A7F48F9151611B89B23838034E3D83B553696FA57725AD33
38EB44E268F621ED495317A056B151D0DA7E6E065D014D99599661C97FFA2EF3
ECE9F78B35B003206D8E150B8ACDF66D6256C65637C6E5F85D4C915C5DD81497
34D22F1FED3335CE4A99E23399083F85562F537366CA7A3F9DCD46C069AA0509
D1B15EC71EAE22B9EA51C1D5DE107D3BD88932469EB2F8EB3A93E37732C1BAF9
95DC20FEBBEFD88C9398784A54D85CE2470D4FB48D36B5F3C07890048A67764C
5F3CEC91D4A9DD73EF5FDDDC14C419B836EA22FA259F36B9B5F770437F9CD03C
1ED7EF522BE6D452FE7A62333D6921486C93E0187783CE00E3EF8E24F4AD1535
0D80B2EED8C2C3D42353751F0E588EBC36370E5E2AC686149C15360AAAFB5721
9FE9C73B3D900E767304667CD51CD0996D6C9F7C2D773728073D46887217BCC6
3A6AE7AE19FA02DDD819E69FC3947BFB768E2A996F06BFEE276D2BDE3E99AAA7
37F77072C85A5676CA67B72B316ACF163A057C7FDC115ADF2DD87D38965E6C89
6B9AEC0669526F2D95E193E44C83E382EDE85998ECB415AD605823794AB902F2
33F70CBA7BB5156CD073DB872B150A5ADD774B7416D9714CB172AF4B2DEC4CFF
257201ADB7C4B1A44B886DC4F7814BB2568C1D17E2E246C499BABD7E071EDD77
27983C4396A56A9261D839D14DC54BE3C06C0B4AAE41AC46C5999F4A5CB2A382
C7A5D0CE3FB697AF991569361A4E77FB739E5C17FD22E3C2D90A2DE28A227994
CF308FEAF8BA5F4AFF4BEBEAD058E4B53C5B23C63783391D40BA44949754F7BE
91BC2791CE7A6B7D004D8B145D27CD930949A4BC2E28CD8AA371073BE2F6C2AA
C059B07199D0EB2CA4D74CEF702F376CD40D09D4244DBBDBF179A4D58A672F09
E209612AB85DDE535AAE482E6A00DF9815FF39E5879BA970665BFA18263BAC66
4676C133A3F374DC2C31B64F4866E89E653F77EB6B70D70D83006DB8A07FF92E
79F153994569859621EC2C6E7A4B5512A25428A185D7A9D3FCE5B63903DC8797
BC23620453F3178EC11BC61BF52BD7E8B0E2B959D81339D3E64662D377254DA8
6DA160554BDA570C4C797789DA96C5252410F977B301F06171D5CDC69A598ED1
8B67C46776CE56A9F44FA14770C1449F831DD28CEB254F6B00A28E30DE1B99ED
CDC5171E5BA1AF27422A68A28CD6B4202D9188FF255F7F6E228C2ABF847544A8
188A918F2A40E06D3CAB2BDCA455D2C7C7F53306DA591F812CB4CC398519A541
3839661E760F362603C4E090F298BC156315170E82F36332B9D5D31ABBC4F611
2AADBCC2818947EE4B30B124A8B46ACC2E0D357BF5B4D6F6CD8BD8625CE29C08
E8D9BFE8B01CCBD616CC404BD978C0DA2EDB809A27675F6BF20D6768A2D2F2F5
8ACB2B43E498366DA760D95173CDD17003E621DFFAB8807F47FBAF569E3BA15E
FC906972A97ECB0885A163DC3EEAB0436236D2F1A42C93C77FD5832152E43683
313F9A13A306BB157738027D5510DF0C5C308A8B8F05659BB25CAE40CCBBC53C
B51A7BCED918CC93B50CF9ADAA1E3E93D91AAFA3E358A20E087C602D2BE0A171
C662FDC931D241AE7ED93838F0C8AA6A4BFA025D30D115079D09EAB6E7FC457B
94F3166B767F12029DD0869F461D24CE08A968276A95145E2CE42FA2A963BB63
64D90412B414A0ED38032C5E916B701CF4BE5128B5F682387C3FD8B60D84CA0D
A8044A68E2FC4ECB2E71C9AC6F247BE8445E3296D94CCD2A4079B5FBD9DF057A
AA927F7B3FC0752726DFD88FF8E23B3DAE0F4361685EB48C8D4382293BCB1540
ABEAB71D16DB726F95A89616CA22E20471F98269B83A9E55BCCB164414AA71FE
C0FC55C97E3E1BD689381CB29B23B9A24C1ADC97BBE69C6893E0E83AF51E5C8C
3CB416BA709CC086E9CB2F4D9BD9FDC139E766631A19078EF186B71C69424BD4
50C699C62F07E9FAACDAEF87102271562475D5BA3FB1747EC1F5DAB85EAD1EBC
C621B342D76F10E6976E228B29239A1179C9419AE58380E2A786A7FC19A2C7BF
F85B2566D26EF754CFD420578F7A61B78EFBBE637863439203794A1FF110E554
1215554A667D2C912B1B6C7EE0F1DF2347ADEE24E92F4B15186BFBFEA7BED812
FBB20D82D43F369D32626CB83AC135D8380CD3721F2D6B9A835BDE069DD48C3C
52E52D75839F129A1025A21844532A7B2CDF09E673679863E5C6693B6F5AF9E3
5DBBCDFF146A380B9292880DB845C02EEC1139E389B4D08476E223B3D7A1ED2E
643553E9BAB38CCCFE987D4FCE7BF74FF32B384B543B5F36A0ECD2A83C6FE5F7
B0546EBCA9EAEE5335FE4EF4CC61F151F8F5C22BB9D42CC7F45699D574048525
467B027FB02C46E6800F4A1DBF2E54B2793CAB9EE69A6B3FBF8FD8F071F021D3
D85D68134AD25FCF1B1DA374E4ECB341A819A64D6A15360108C9C7DD5A957E97
437DA417E81AB6581C2A296BE4B601F497AF5981AF55ED7703209C83EDF1995E
2C8CB7938630D595A83713D70B99F3607285F66C6D8F0EA5B099671D90964F7A
3E000EC6A730
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusSanL-Bold
%!PS-AdobeFont-1.0: NimbusSanL-Bold 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Sans L Bold) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -155 def
/UnderlineThickness 69 def
end readonly def
/FontName /NimbusSanL-Bold def
/PaintType 0 def
/WMode 0 def
/FontBBox {-173 -307 1003 949} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8D62A63193C4AE94C086C1
552833DDD8F116B5DF33205AE709B3AA63DA7BEBB165B67281827B48FB5EDBED
02A1A5C0784FC57D3487DAA59520BADA1BE3FB9795669924321CE4F466CD8E3F
7E8EC2494AEE80E2DD7A48A6861AF5B9F0CCAA4A2FE2B03498EACACD6B9C39C6
A8F2E39E06BBB061CF2EC380A32EFAD0B790974BB5CC3DAF0992471456967362
77DE34813F27ABE99302F86BB4D293A37F84667E7F3DFEE4CFE9D1A676A5728C
AEB5222FF50DA97E74B2CDEBF725FBCA7015A188891C8A376B9DD8A642C4B184
B1BBF3F376A6D6E31EF1C8354DDF8039CB20FAABCB34D4749B3C8C8D6972CEB1
06B8A5AAE3AE40A91F1F2B1155681A9CC933F87528C99A2B0268B43A3E829E7F
3BD863CB52950773BD9B0731DC4992541D7DE7A055CA65DDD2317F1705C20D1F
93291BCC254CBABA425C032B3B15050D41DA14FFE1B3D684EEA428095A01E931
98D4F849B239AD9D79F4502F0271AFFB0C297F2F347BFB9C137782646F648F77
0076B85F5A929FCDEA2703333F6918B8F125627F8B505C688E30F258DED1AECF
2C86EDCD88C29249A8081731737195FAB7ADBB54743BD66511194DEE2516959B
A20701E2D97342248297425491F6C9471EC9A98E630D734DAC19721F0B324432
C8D7A0B751453F89F7008BA37BC48E0831EE3ECBD8A0A292D63CFC890B28F695
9E29AC3B4DDB78A6883B9272CE34A012A82ADEC0B6B641E3940A438A098CCFBF
C50544B94FACFD9D7AE09AD0632015F81D2F77FC6D80A42EC11D67D8A91C376C
13C8E3444CDFDE4D2A1ED021410F4D6A4E97804AE949BD913094D23108C9D384
56F11025E2D24939114B6BCF579A0315C52F3CA1BCC2860FC1A0B9FB8A37AE2F
C20C0FD44D215FC2AF737FD0339B070D54E664021240071C665DE4170DFA182D
4E385685FB41A2D85888B1149E9A766CB4F309B4E2BAA28CF1F8CC13F154032A
A1C45D1A3DD9230A4903FE5523D6EE9BC66EF49B2617BE3C1AEBFE2BE26C3778
EE778AB577C5B9E476CBB0EF69EEE350BBEA9712CD97BB2821612964B30B01E7
B08AE39BC8B715A5C11A351E060C8ACCC73F7D8B3B33CB35844961E68842CFC3
601BD2FED84DC32546F5EEEFA423BBAEE305AFA3FB216983DF61299A86F51A67
1DB10D74D95084ACE3907DCC79E6B2C358D53D1A83C0538DF2F8252B6B963B85
BB230DFCCE6BFD3D847DA4F518B81FADA81814332B622EBE6848AE6001554502
7C5D6643ED9E898E52F229400B725F50C0CC1C0B40C04D1680D51033154CDEFA
C137858D49BA7B27E4904BF8D855940AF0DF3BEEA126AB8ACC2E93B1551E750D
B24390D7F0804F28A5DD460DFAA537CC1DD8B32132A2E7C1B93BF1A2C1CFF129
1DC961C949F1641B11368B8A426B97CCCA4FE1A799E07290CC69337450707969
8C07A7B9A821AE7CAC799DDC5C6C5A4AC9E21CE0ACF1C02A9B72F3C264E40D31
BCFEBE729C666E929DD2CC04C4F66493A56A4D7F7C59675EEAF84F33556BA9EF
15C92469A7666520B873ADBFA7CB2C670B71BDEDA9725503C98440DE5CE23DAC
7D1D4D52E872037221E7F6EA9377730189C0D18861E5F87CDBD81FACC7DD8009
1F968191E7B7F96056299EA698C1A77EDC8CB025B10C08A5B355BFF415BE6F87
15E0E968F153DC615E53BEB3F1D094AD893897C4FF650FDB2EA2687E8542C599
D4E6BEA4EE6D71D4991EFD61104D18149E3D41332FAC1113616D1CB94EF03BC8
661B91A15DA84AFC3362459CF29696CAD1C7EF956700D41E59775875C868C1FC
2FEFE30F9BFD4C456E1CBC0426BE489C00FD23E28906349469AF3EC9C3591EED
C1B75251BF788769DEFCA18EF63622345DEB9A56056C06DE592B8B420B336308
BDE22BC975C80EFD0638B2AEBE4804E1595706B4DAE26B1BB6DBDBD5EB0BF8C6
DD33F913BDF056240727F1F72DF40DB811602EEC2931731C824E1ED5C40D3C40
923DA150C493699F0E682638811318D493DC71793E84BBF3E2BEE2EB813B0369
0D3755A08337C9812303280228A1E6E048CC39F01871E0A49DF107A7F4743E37
FF5A790ED6B92B62F1651E149AD0BCEB50B7E52DEBB660712732996F9572E449
AF2A7BE20836593420A0A13033DF9CF8D9A3E6F225E96DFE616FC43482D75DAE
9C9CC68C6C3135387F3F84CAA6EB7CCC237877477FD21A56A1FEA366ED13F01F
8646720AB79EE730512BBDF91E7F8C13888A023B8731F37A3473142F8521AD32
DE80347FFCE7FBE4228E923A91B2F77CFB9BBFF2EB908D91B24511AC525E15EA
2EB389640E70CFC416D861B0E313E9387668640FB271BA91799E6DAB1F060802
62C0D9BE2CFC49FB390CBE8D4CFF0DCA03CF560A545A7BA4701A203715E313E3
11E51AB6D030938BB82D3A6C8A7A5067A7C564BF22F7B88704B317ED74243FE5
1E6BAD891BC2CCACF0C9E1BC503120339E298FB3B1EB9C376E87B346CC0210DC
E05E343B05BD4B9621A6A1E57DFCE7C5DFEAEDFD98057DDC3F1DAAC08D9A2E66
277777F1DA0306D306E39C44E2959A3F4B4DBF909B2858AD23492460970BDD83
EE661343FF4D18EF3517C93309CB50B4B4BE281C7F1119C5C9D22851666B910B
EC9F9C7A25E2F27D36A7C1FE6BD5A4C1A6197D1E1886472AF33DA499CFC35D23
0B857C5BE186431F4F70A6F4EBC9136D5FFDB31F7195AF7DA749DCB08DB0984C
4EB5A4CD3EE2BE305C334330E8C663DF2FFF2104CDE0BB6FAA35DD5B6064C326
C89B28870A45AC9C34AD1A8B11531D7D9E463F2EE359DBED0451C01DCC92B824
459B251CA385531D61F2A6092C8AED9D5E2C2985D498D2535F6B4A80C1BFA827
E40D6BA243C92EDF3D4D588C1989508284EEB97B8858F22FCA57A2D497B50B25
B94FE43B3A1E4F7D4A024217CDB9933A718F0E6D935F39578183B066D5A65BAE
4AB038087E40257C1FE2B995D5F9D95F7484B2B05FCB49861F7EA05779AC0426
489300DD7B0A0F8D3ECD1B056A35C37842C492DAAF17D591BA5E7D65FB18BC5B
B7642593932C9E0DCC2F9929090294676AAE3ECABB2F4E65F5271B585DF21798
9AFE00F0148664D6B446A8E4F9B88C747FE8D50767A9A94391AB4330B37D4E7E
2102D867A3C279AE672AB1A2FECFD8B025C2CD224195F91A18B8B8E03574A5D5
E737B0583EF1AD017455210C8B14FE526229C5BF20560D772C14FED32A6D1096
6242774A0E978CB8FD1661523AE5AF8DDD8B198AC29BD3B8DD91D49E5B40730C
B31CEA643513D8983A014D2B1443AEC2366A33C46A0B0CFCB05399FE5703CF58
7720593819D75A86570B6F13B70B356BAD676140BDE3D5A51ED10B717D1789D7
4904D5D79350B6F12334009D564D7404B0FF0889B8367D95C97E944BF84052FB
A2EB44F349D4E881BAFC167D99AE0B62D14563013E70563C4797836E1DF62000
E8CC4EE2E221B7D48AF3A12EBD9D98BD017A7A1F8174E3C996F7A548C15C0A90
DF9CD9BD7424A619E95D8B051C7D86434DA68D95E9EEE5FD08FD40D0DE6260F4
B0C4032A9800E5888A245527E79C94D0DD5E11432BF54C80E629F3306A5183BC
623F91A30C1BD5EEBF32FDFC699847D069FC2A65671D66EB451F41C1AF79C1DB
FA2B4E18761EE75D3F611D602F5B790BA6781213329980CFCFB18CF7CBE6C7FA
3C27329D0B7F579C8A4DD8D901A5B598D721639E2A82FC866EFCB87D58F4F724
7675B2391F4610A58C8A18DB8D5DC3C3936A38F2E11F4CF423CB3D418002E701
CA42766CF748308BAE99AE06106D90DE65FFC15685F8CF6B73AFA5C4A05A721D
82217626167E369AC65724E0E44EBD8DDAD75355524454167D9A461ECCB66125
A021E85E2D516A4350D296BC197E9B6C1B2706DC46F7FC1D89BFE6D74D11AB2D
2D8E197A59BA2BC1A5B1352D0E69B5879BBDC3E431A35F75AA9F2EB2A871F588
D6A1077728F6AE8A28324F9ADCC19FA493B5E2465C62FA6EED301E9D0A5EA944
300E794BAF7859558C7983C6CA87F1535FEE6EEBC67F90818206B95ADD734EBA
0F57049F35D5A12BC32207039D9B8637ED00458CEDAAD2640686B75FE82E88EA
A0404812C13C8BEC73393B2CD02C37E49C9218B43C24F19623C75AF530BBACFB
0FA99844E6295881A5A2660DA15DDFDDB7AB9935CA62186527D2F355F2F3A38D
BD9992BE4CE919FDED2AF7EF889C394A67956DA8B83FC4C8EB725FA57066821B
932636FF4B2037D8C65C32F1738C6930138534EF2BA1A2222B8B9D95AE23A9CF
52DB1995E9233092F528D6A704AA7EB260B1295311B4AC6C9B90F80A589C2C8E
6BA68B8A9403FF86C78A0A06836260A75A230932F6C8255AAC0D1B76651AA3B0
7403BDBF4EB722FF4A6E5BEF51F99A4913C792816130FD10CD37BA9C8AAF4F47
8A81BCEFBEFA956CB19039B6AE3FAE06062FD1A79FBAD9D82D2DA4EEBB3365EA
6343B99F3674A11B6BE588904325CB1ADDCC264C3E2AD747AE9331CA74E0046B
2CA182E05722FCA9DA413407ABFB6C1B496086B6B78AE671D1230281E2EE92C4
47112CFAE733CE01AE8366D248927BC493C2941F95EF14407ACFF4FF975E04E3
0045D6FBA477667651D739DA31AAAED7CAF4A45D64E760EE4C229AE9CDEF41DF
A6E1F0FCF2BB06398A53A5B2AFDE0C2408E39D3C55B8B48DF5B1BC2E13055CAE
D62CD49704570E8235CA402F8135A6433994A7F4D547706560C58EFDD94B26C3
7D5D9CC4873F5B5A47315141720530A1B5CCA68168F1F1353BD7481876E67C2D
96ACC0191AE55E40266EB0599486483F79FBA11B793CBB422586647665B4A579
943D593BEC93F9B71A8FB3A64112D3BEC708838D311CD7A6C78FC4A53F0DC10E
D188DE1602D8C5D2ADFB60F74420E1159DE70A8E253DC0F54C19550075388584
9EDB6CB9DA42537933A131150EB20F8596FCDCD85BDAB9EDEE5A57CEEDF7D8FF
C0BDF8567040DCD5C54B9234618410808685806BDBC52C0AB5E0D184CA516A26
5A9132E90D8A5C404FD8D6872D31EC33E4B3CFF35D21DE1CBD7460D9AED1DD44
56D3C2DD059D73A1785E2E59EAD99D2A38E50567E1A3C4131425D0419A4E7CD4
5E60541D24B6F4BFE1AE855973126A4117CE9C3BC6AFC84FF77028B1387DC572
86F56D6C46C98B72EA74DF32D730CF0928828618A9514F9063148081EDB454E1
D587E8A740E59CE0839AC2F1895ED3BC94EF21FB2CB14B2E4921E80791496416
EABA1CD470AC417DF0A2BB906293059F2319846FAFE219596C023AEFBC3C263A
0DE677F0ECFF7CBFEEDC86F1D3200A36C6EEC50E4211A8D2B044BCBC80F86570
A0B9C3754928F3BBB733F9B20703D57E1BE919D4905A80B32C55FBFDD10C363C
A8F6A2885002862E89CE24D3B664236ADB3E7C1E67795A605969678BA1EBD352
2EBDEBE8F36D531892BB3AAFA929D0CF463BCA4DE70B280622D99C8FD8E295AE
C1582A7A1351DC8532F18CBE8513DE4CF2F970D15B72EB2A30272C3B9BDA541D
3F3F7DFFA25F2AD8CA0AC8FB5A2E119D59EFF1ED4466480AB0568EA089FB3950
BDA3BA80832D6A724A35D2B660BABCC994BE23D561CF7AAEBE1DABC0F88441D2
ED6BA271468179190D683917F1E04E69AAA55F387732155986F6351880D40DDE
346D8564039B26B3A6902A918F461455BE66785C9FA0E61FFD6CC14730B73BF6
6321E3C0CE5E9ED83420F4B02BD74262DD44E40D6590CA0EE1B91FA2429CAAF1
0D75FAC4F266FC606BEB7FBEBB883D119E13EBFBD2F00C1EF3D4C11F499B963D
846A3BEB6C9E57975EEB2C714368CA5667275774EF9C9490C1B05DA0916261B5
918CAB78E8A025C2AA7BBBB85DE7112E94D759FD5BD08F88750EA58282656952
8154E0D3311D3E04B1194021918421E9C6CB8E8CF86D1CD782278D9271E657AD
C7BA5F58052FE793357165FBC5F5F6EE9C1E0EACBACAFFDA6AFFFE15795037F1
47ACA048E0659682F45187EAAD570494103D598F013EA1411EF5E7F0CCD7039E
630D0A7BB94ED4DD307A0797DFC4C675C4C3C6A4EDDD68BBA96359EEFBF122BF
34B1121FB799487C08F52EB8B45BC386153FB5F49B04A846BEB906269EC0A9A5
6B94B4CD8E6A7B86FF3B4FD4DEE628D18106A4AC8578B0722B052540A8AD8E5C
D0D5A14B6FCD4350CF9D709D2280859A98366AE9F49AF2051EBA0CF69BEFA543
A7967826FD4095760307B3AFDA18332FE503F243D6955EDB663294281412E033
B558941B7D63D2BCC82B4DA8AC92BBDB1808A8DA85E4FA4E7886C63AC6FD8510
FB9236ED30D581DF16B998ED3D2BDA1BF3C321A64BE84F798050357098BB898B
AD21749374CF58BF0412B87A1528AD133AD603595A40FEA067BAB820B9211D2A
3C6906F7D3E0BF84767DAFF3330B7E653A8D7BFF96DB7442D6E7944D9D50F91E
ABC5ED6D7F5A77019FD1440A38993A7112378705960DD5FBB8A1B8BB3D68AC92
D9235ECBC7BAC212DCE6C1A05284E1EE8B0C3320926A1675300F0C3DECCF250D
F79F6B91A1C43AB587F21FEB95C76E07B21EB66B20C3240507494F7F10B401C9
A2671A7E08688C94717B2F1204BBE9A32B02C569FE47B7578053AFDD16D8820A
C61CB9D9AE77DA6D70022E0D5A8E50A14F13584225045A6DCBDC95357C0DBA3F
35EFB019FD558D4FBB70F3F5EFDA7CA047CE71B49325EFE87D508F929EFAD073
38208958426E81053D0158097CDB6E280F979914DF8F5DA10E7729AEFF7D3CF4
9ADA55F1F20E770A0857187ECFC0EDF5C1A83578340AE2AC05CDA9853771FC2F
E0D3B01D5D350745EDF5C6EE6F804E789DDA769A9C7143EABB7A16445864494B
181A579D373539E8AFE0B9A705BCD7E2F9DD7C73DE15B222ABDF7DC3B76EEDA1
91EDAD3680158B6369888E88F8ED19C4D792FAE7903B8D666DF396C64D8953B4
F3B0FA8AD33C0598C71A0B74F5C60D179347DBA9F2647B2B48C445FEF2432F10
27D9E2AF2573482AFDDA9F1D252FCF3DCCDCB3A725413412B6B4E7A62C4655FA
5FF17B14F01B02C1A4E8BE81DD4AB0C5837B208A379C22193172B173D5D80752
1262CF35348519D1AA65056343D8002859AB1A27BCB2A25919A89660CE639710
829D5BFBFEDF6B4B1ED161ECA04CE7229B91414970B7BBFDDD78563E1D4ECD4D
D8B065ABBEB5D87551CE86D4E2DB7607F065FACA01BF64480CC71E6C11B7F5F9
B82BCB01902D82E4EB6BC1D263A3F79BA73167D94823DB779C68B730D2E376B1
14D0AFAD6DCC7A759E1B2994C03E42DAA4AA67261DC3871F3BD4C8379EADB08E
E6219A156C3AC00500AB6A39DBE077E71FE3BCD0FC2F1A031012B6DB7289414E
B43CE6398D9D5CAB67D3DE3DDCDC8EFD8619607BFB46296AA6FB84A8F5363781
7AE65C2AFFDAF5E74341B83B3300EE2B9503606738AA80E14F5111DACFE47FAA
489DD69AA1D690959CB286313E04649941C9E0523356BD3FE75D56D2D70659EA
000EC86D72F83E9AB1D5B5E5F7A4FF71CC19E8B4398EB341ED6295598F2FC5F2
BFE437FC2B7303C4753D6B856EB44DD064941AB69C2558D7719060B3E6CA8178
2F29F6D05D32E05744009FAA16BB39C5F5CD074C3D29D7315B04929355CB8F18
535C65CB92903FE8C2A7B184D4E1152F81FEB254084F007745883BCCE7E545DF
3D22FFD4C4F7ABBB08CC332BB4738A66E676AA39F9ED4BCEA7FAEC246555DD89
69FFCD2B72F7A00621D8518F499B2B460A7114E13F222BF449C114FDB76D502C
A7802C614771B53C127EEF5CA5C4E44700A4B12A4531A587B593256034DB72D9
663D13726ED03028848EF98E98161E18C448F08A60D59C940FAE81DFD54196A3
1AFBFECD4F41A4EF8D74A1BEEB49DB10E617AE436E301D1314D55194064F546E
2E85B5B8B29061F86B884559F6D1D112106C83FC991A4B126288AE30BB022B49
E2328DC077D22217312B0873F8262AF95FC09D952F145B0042A610E88CDB8A15
88E3C5336B64709708C632A6AD1438EEFE164BAD01E4AA7F2D3F57AD7270AD9F
685F1F909AEB885F3C0CC1B02E93C2B435EA16BD151F841598D72A7EDB8B1D86
5EE8FBA750D89010A4B05C9DC8BDB51F724BA49664EB5ADA738C2214008E047B
E564C6B9A5881703F39E7EBF0DB5AC1C8E0F36B604DE825758724F435F098D34
636074155FA6A2E7687B2D7DA7957DA0F573CDCBCC85C129C4255C893F7749C4
22441F96D698F1AF0EE68C4FE6882E91155988D1470AB13E7F77A34D8F556D1A
FB05501489A09E655466D8DB3DED2CF8C7C9769B445E621EBF0797FE248CE98F
5EB2783F3681392665B87B05F07C825CC0B56C60622B31E840BBF46E49A2707E
502993AADB4C33EEF1BB685DDC1F432FC49D94AA838F92BDFF60B834D5EA4D01
A30DE4D541A4E2AD9A14A8F6F2892B19C138CC22C817415E8A1CA0EDC1E84346
3B17AD77C899FE86E587AD0CFA5DA825BFF2F1C095122AB6DD83F3D4E9D0DA90
51AED38CC72FF4556C24F15BB4BC028EF6CAB22A5A0623447B9705B3C5F1C099
36191DCFA56728C0EE99C98264198EB67F5E235518DF0D9F2608F146A02381AD
756E1B5A760D65B2E631827E35355B7A8B619DF3BFE8CBE3AF16320ADAEC38FA
6D91DB8FFFA5A5758FBD80B1D4115BF34E660434E5F1C92DEA5CF192AEB3288D
EA01C541BB561CA63F8E8CFCA83A445FA080FFE345F75EE768CBA6EFFA85A680
D4DE2E51C74E478DFB749E97308D8A3073D408D72A0DA511B7CEC44E1BF3BFFF
D44523126149A1220DC024C83A4000A56D425A6DD17B41D9AEF91DA4DC957C94
75680BE5885A4B55E7253E3679B6329DD80BF4EF910A213B04803A274251471F
0321DDEDD173EF43ADAC280A4FCE543A411D19D2705C094E3914904E1032F691
BF3F8988CDAC56EE02E71C794A19D7284984C5EE6B7AE68028D6E1252E39875D
ABDAA8951194774A28E2F599D03C32D083F5703637044A2725475AA73F580E6D
3576CC4E86F06C8808E860348C03957D3ADF32A1DDB52D6369E168BB21417B30
DD69E1B2C3CABEB7569749D1D03FF35D220C2C7154B3278A2D8A7261B23A67B5
1AE8B12E5B652387A2CE87C4534D63E22C9B0CD3762F57592B7C5B7D40A13D54
564AD8C38D7622B8B26BF45C8C5C6F43904ED6D635E5C87626A2396FBE96D9BB
5294ABAA202A2DA3A246E92E971F6A42046019715F41A85412C5D40AD6938BE2
578CAD73796ED38E5E22FDE9F607EBEFDDE550D1B9DEBFB81FE4E83BE6E065A4
28ED766DD9F4AADAEC115275A133F5337CD5CAACBF450CCA0731B05959EBD984
B2F2E954471A0B25B97DDE6BD1E00FDE47133D4632F6A92ABFED17EAD0F6CA9C
06832E0BCD13017581CA32AF975BA3FEF38A6A44DA54285C3DDCFE45E633EA9A
5A8363C753C8C49B5443E40F0F1770DABFA097300279688ECA19E4008E62E9F7
80C4E7DA28012F7409986F7925154DC28D285F34663E2C444FDD4E66519431A0
167D93AFD95EDBA967CF75F519DD93B63D21E635EE44D29D09B05F2783627D2D
55DE94C518B51BE06CD32320AB53BFEEA5CE02F01B773572A2EAF673D197A936

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (main.dvi)
@start /Fa 134[37 35 51 35 41 25 31 32 1[39 39 43 63
20 2[24 39 35 24 35 39 35 35 39 10[57 1[55 43 2[52 59
1[69 48 2[30 1[59 50 52 58 55 1[57 6[24 5[39 1[39 39
39 39 1[27 24 2[31 31 1[59 38[{}47 74.7198 /CMTI9 rf
/Fb 132[44 123[{}1 74.7198 /CMBX9 rf /Fc 135[37 3[27
1[28 1[39 35 5[20 39 35 2[39 41[20 8[35 1[35 20 46[{}13
66.4176 /CMR8 rf /Fd 172[32 3[42 42 52 3[19 4[42 39 39
42 6[16 29 7[29 29 16 15 19 8[29 36[{ TeXBase1Encoding ReEncodeFont }17
58.1154 /NimbusRomNo9L-Regu rf /Fe 240[38 15[{}1 74.7198
/CMSY9 rf /Ff 131[77 38 34 41 41 55 41 43 30 30 30 41
43 38 43 64 21 41 23 21 43 38 23 34 43 34 43 38 3[21
1[21 2[58 79 58 58 55 43 57 1[52 60 58 70 48 60 39 28
58 60 50 52 59 55 54 58 6[21 38 38 38 38 38 38 38 38
38 38 1[21 26 21 2[30 30 21 24[64 43 43 45 11[{}74 74.7198
/CMR9 rf /Fg 167[72 2[72 66 55 72 1[61 78 72 1[66 78
50 39 1[78 61 66 72 72 66 72 12[50 50 50 50 2[25 46[{
 TeXBase1Encoding ReEncodeFont }24 99.6264 /NimbusRomNo9L-Medi
rf /Fh 134[42 3[46 23 42 28 2[46 46 1[18 2[18 46 46 23
46 1[42 1[46 9[78 2[51 55 9[23 5[60 12[46 2[46 1[46 46
3[23 44[{ TeXBase1Encoding ReEncodeFont }25 83.022 /NimbusSanL-Regu
rf /Fi 134[50 1[72 1[55 28 50 33 1[55 55 55 1[22 50 1[22
55 55 1[55 55 50 1[55 18[72 5[72 78 3[72 2[101 17[28
46[{ TeXBase1Encoding ReEncodeFont }24 99.6264 /NimbusSanL-Regu
rf /Fj 139[32 58 39 1[65 65 2[26 1[26 4[65 1[58 1[65
3[32 1[32 10[78 80[{ TeXBase1Encoding ReEncodeFont }13
116.231 /NimbusSanL-Regu rf /Fk 134[83 83 116 1[91 50
83 58 1[91 91 91 133 3[42 91 91 50 83 91 1[91 83 12[91
100 6[91 3[108 2[100 108 22[50 45[{ TeXBase1Encoding ReEncodeFont }26
149.44 /NimbusSanL-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin [/Producer (dvips + Distiller)/Title ()/Subject ()/Creator
(LaTeX with hyperref package)/Author ()/Keywords () /DOCINFO pdfmark
end
 0 0 a 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -160 -467
a
SDict begin H.S end
 -160 -467 a -160 -467 a
SDict begin H.R end
 -160 -467 a -160 -467 a
SDict begin [/View [/XYZ H.V]/Dest (page.) cvn /DEST pdfmark end
 -160
-467 a 0 TeXcolorgray Black 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -43 111 a Fk(Heter)m(og)q(eneous)44 b(Distrib)m(uted)d
(Embed)o(ded)h(Lin)o(ux)g(System)f(f)m(or)864 277 y(Har)m(d)n
(ware-in-the-Loop)i(T)-9 b(estbed)1482 558 y Fj([Project)31
b(Proposal])553 787 y Fi(Chr)q(istopher)f(Hannon)459
874 y Fh(Illinois)25 b(Institute)f(of)f(T)-10 b(echnology)636
961 y(10)23 b(W)n(est)g(31st)g(Street)572 1048 y(Chicago)m(,)h
(Illinois)o(,)g(60616)495 1148 y Fi(channon@ha)n(wk.iit.edu)2663
787 y(Neil)29 b(Getty)2342 874 y Fh(Illinois)c(Institute)f(of)f(T)-10
b(echnology)2519 961 y(10)23 b(W)n(est)g(31st)g(Street)2455
1048 y(Chicago)m(,)g(Illinois)o(,)i(60616)2434 1148 y
Fi(ngetty@ha)n(wk.iit.edu)p Black 0 TeXcolorgray -152
1290 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -152 1290 a -152 1290 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -152 1290 a -152 1290
a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -152 1290 a -152 1290 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -152 1290 a -152 1290 a
SDict begin [/Count -0/Dest (section.1) cvn/Title (Background) /OUT
pdfmark end
 -152
1290 a -152 1290 a
SDict begin [/Count -0/Dest (section.2) cvn/Title (Project Goals) /OUT
pdfmark end
 -152 1290 a -152 1290 a
SDict begin [/Count -0/Dest (section.3) cvn/Title (Project Execution Plan)
/OUT pdfmark end
 -152 1290
a -152 1290 a
SDict begin [/Count -0/Dest (section.4) cvn/Title (References) /OUT
pdfmark end
 -152 1290 a -152 1290 a
SDict begin [/PageMode /UseOutlines/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 -152 1290 a -152
1290 a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 -152 1290 a -152 1290 a
SDict begin H.S end
 -152 1290 a -152 1290
a
SDict begin 10.5 H.A end
 -152 1290 a -152 1290 a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 -152 1290 a -152 1290 a
SDict begin H.S end
 -152
1290 a -152 1290 a
SDict begin 10.5 H.A end
 -152 1290 a -152 1290 a
SDict begin [/View [/XYZ H.V]/Dest (section.1) cvn /DEST pdfmark end
 -152 1290
a 83 x Fg(1.)100 b(B)m(A)-5 b(CKGR)m(OUND)-77 1481 y
Ff(The)31 b(p)r(o)n(w)n(er)h(grid)f(is)g(comp)r(osed)h(of)g(p)r(o)n(w)n
(er)f(generation,)i(trans-)-152 1568 y(mission,)25 b(distribution)e
(and)g(loads.)35 b(T)-6 b(raditionally)g(,)24 b(p)r(o)n(w)n(er)g(is)g
(gen-)-152 1655 y(erated)g(in)f(mass)i(quan)n(tities)e(from)h(h)n
(ydro,)f(coal,)j(n)n(uclear,)e(and)f(gas)-152 1742 y(sources.)41
b(The)27 b(p)r(o)n(w)n(er)h(is)g(then)e(transmitted)h(at)g(high)h(v)n
(oltages)g(to)-152 1829 y(distribution)h(systems)g(where)h(the)e(p)r(o)
n(w)n(er)i(is)g(distributed)e(to)h(res-)-152 1916 y(iden)n(tial)34
b(and)g(commercial)h(consumers.)60 b(As)33 b(the)h(p)r(o)n(w)n(er)g
(grid)g(is)-152 2004 y(mo)n(ving)i(to)n(w)n(ards)g(a)f(smarter)h(grid,)
j(the)c(e\016cien)n(t)g(energy)g(man-)-152 2091 y(agemen)n(t)c(is)h
(increasingly)g(dep)r(enden)n(t)d(on)i(the)f(underlying)g(com-)-152
2178 y(m)n(unication)20 b(net)n(w)n(ork)g(supp)r(orting)g(reliable)h
(information)g(transfer)-152 2265 y(among)26 b(the)g(v)l(arious)f(en)n
(tities)h(in)f(the)h(grid.)-77 2352 y(With)17 b(distributed)f(p)r(o)n
(w)n(er)h(generation|suc)n(h)g(as)h(solar)g(and)e(wind)-152
2439 y(energy|and)35 b(more)h(storage)h(tec)n(hnology)-6
b(,)38 b(there)e(is)g(a)g(need)f(for)-152 2527 y(understanding)27
b(the)h(state)h(of)g(the)f(p)r(o)n(w)n(er)g(net)n(w)n(ork)g(in)g(real)h
(time.)-152 2614 y(A)h(c)n(hallenge)h(with)f(the)g(in)n(tegration)g(of)
h(suc)n(h)f(generation,)i(is)e(the)-152 2701 y(uncertain)n(t)n(y)j(and)
h(in)n(termittency)f(of)j(the)d(a)n(v)l(ailabilit)n(y)i(of)g(p)r(o)n(w)
n(er)-152 2788 y(generation.)49 b(In)29 b(order)h(to)g(com)n(bat)g
(this)g(c)n(hallenge,)i(there)e(needs)-152 2875 y(to)h(b)r(e)f(an)g
(infrastructure)h(that)f(allo)n(ws)i(for)f(the)f(monitoring)h(and)-152
2962 y(con)n(trol)f(of)f(the)g(system)g(state.)44 b(T)-6
b(o)30 b(do)f(this)g(e\013ectiv)n(ely)-6 b(,)29 b(requires)-152
3050 y(a)d(reliable)h(and)e(resilien)n(t)h(comm)n(unication)g(net)n(w)n
(ork.)-77 3137 y(Researc)n(hers)39 b(ha)n(v)n(e)f(dev)n(elop)r(ed)g
(systems)h(to)g(co-sim)n(ulate)g(the)-152 3224 y(p)r(o)n(w)n(er)22
b(and)e(net)n(w)n(ork)h(comp)r(onen)n(ts)g(of)g(the)g(smart)g(grid)h([)
1516 3224 y
SDict begin H.S end
 1516 3224 a 0 TeXcolorgray Ff(1)p 0 TeXcolorgray
1554 3176 a
SDict begin H.R end
 1554 3176 a 1554 3224 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.FNCS-algos) cvn H.B /ANN pdfmark end
 1554 3224 a Ff({)1593
3224 y
SDict begin H.S end
 1593 3224 a 0 TeXcolorgray Ff(6)p 0 TeXcolorgray
1631 3176 a
SDict begin H.R end
 1631 3176 a 1631 3224 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.GECO) cvn H.B /ANN pdfmark end
 1631 3224 a Ff(,)1658
3224 y
SDict begin H.S end
 1658 3224 a 0 TeXcolorgray Ff(8)p 0 TeXcolorgray
1696 3176 a
SDict begin H.R end
 1696 3176 a 1696 3224 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.DSS-RT-HIL) cvn H.B /ANN pdfmark end
 1696 3224 a Ff(].)g([)1781
3224 y
SDict begin H.S end
 1781 3224 a 0 TeXcolorgray Ff(7)p 0 TeXcolorgray
1820 3176 a
SDict begin H.R end
 1820 3176 a 1820 3224 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.Mets2014) cvn H.B /ANN pdfmark end
 1820 3224 a Ff(])-152
3311 y(surv)n(eys)39 b(the)g(existing)g(tec)n(hnologies)h(and)f(motiv)l
(ations)h(for)g(co-)-152 3398 y(sim)n(ulation.)-77 3486
y(In)28 b([)43 3486 y
SDict begin H.S end
 43 3486 a 0 TeXcolorgray Ff(8)p
0 TeXcolorgray 82 3437 a
SDict begin H.R end
 82 3437 a 82 3486 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.DSS-RT-HIL) cvn H.B /ANN pdfmark end
 82 3486
a Ff(],)j(a)e(system)h(is)f(prop)r(osed)g(using)h(Op)r(enDSS)d(to)i
(allo)n(w)i(for)-152 3573 y(sending)c(real-time)g(signals)h(to)f(hardw)
n(are)h(in)n(tegrating)f(with)g(sim-)-152 3660 y(ulation.)37
b(Real)26 b(time)h(sim)n(ulators)g(are)g(used)e(for)i(hardw)n
(are-in-the-)-152 3747 y(lo)r(op)39 b(sim)n(ulations,)j(allo)n(wing)e
(for)e(sim)n(ulation-em)n(ulation)h(closer)-152 3834
y(to)j(the)e(real)j(system)e([)562 3834 y
SDict begin H.S end
 562 3834 a
0 TeXcolorgray Ff(3)p 0 TeXcolorgray 600 3786 a
SDict begin H.R end
 600 3786
a 600 3834 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.RT-SmartGrid) cvn H.B /ANN pdfmark end
 600 3834 a Ff(].)82 b(This)42 b(giv)n(es)g(high)f
(\014delit)n(y)-6 b(,)44 b(but)c(re-)-152 3921 y(quires)32
b(p)r(o)n(w)n(er)f(equipmen)n(t)f(and)h(often)h(sp)r(eci\014c)g(sim)n
(ulator)g(hard-)-152 4009 y(w)n(are.)40 b(While)28 b(real-time)g(sim)n
(ulators)g(exist,)g(they)e(are)i(costly)f(and)-152 4096
y(often)j(require)f(sp)r(eci\014c)g(hardw)n(are)h(to)f(op)r(erate,)i
(our)e(c)n(hallenge)h(is)-152 4183 y(to)c(design)f(a)h(hardw)n
(are-in-the-lo)r(op)f(testb)r(ed)g(that)g(can)g(use)g(stan-)-152
4270 y(dard)18 b(electric)h(p)r(o)n(w)n(er)f(sim)n(ulators)i(that)d
(run)g(slo)n(w)n(er)j(than)d(real-time)-152 4357 y(while)27
b(main)n(taining)f(temp)r(oral)g(\014delit)n(y)-6 b(.)-77
4444 y(In)29 b([)44 4444 y
SDict begin H.S end
 44 4444 a 0 TeXcolorgray Ff(6)p
0 TeXcolorgray 83 4396 a
SDict begin H.R end
 83 4396 a 83 4444 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.GECO) cvn H.B /ANN pdfmark end
 83 4444
a Ff(],)i(the)e(authors)h(create)g(a)g(co-sim)n(ulation)h(b)r(et)n(w)n
(een)e(PSLF)-152 4532 y(and)35 b(ns-2.)64 b(They)34 b(use)i(a)f(global)
i(ev)n(en)n(t)d(driv)n(en)h(mec)n(hanism)g(for)p 0 TeXcolorgray
-152 4660 a
SDict begin H.S end
 -152 4660 a -152 4660 a
SDict begin 10.5 H.A end
 -152 4660 a -152
4660 a
SDict begin [/View [/XYZ H.V]/Dest (copyrightbox.caption.1) cvn /DEST
pdfmark end
 -152 4660 a 0 TeXcolorgray 0 TeXcolorgray 645
x Fd(A)n(CM)14 b(ISBN)h(999-9-9999-9999-9/99/99.)9 b(.)g(.)g($1.00)-152
5396 y(DOI:)-18 5412 y
SDict begin H.S end
 -18 5412 a 0 TeXcolorgray -16
x Fc(h)n(ttp://dx.doi.org/11.111/1111111.1111111)p 0
TeXcolorgray 1291 5347 a
SDict begin H.R end
 1291 5347 a 1291 5396 a
SDict begin [/H /I/Border [0 0 1]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(http://dx.doi.org/11.111/1111111.1111111)>>/Subtype
/Link H.B /ANN pdfmark end
 1291
5396 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 2040
1373 a Ff(sending)30 b(sync)n(hronization)f(messages)i(b)r(et)n(w)n
(een)f(the)f(t)n(w)n(o)h(sim)n(ula-)2040 1460 y(tors.)36
b(In)26 b(sim)n(ulation,)h(ev)n(en)n(ts)e(are)i(sorted)f(b)n(y)f(time)h
(stamps,)h(t)n(ypi-)2040 1547 y(cally)c(in)g(a)g(priorit)n(y)f(queue)g
(and)g(are)h(executed)f(as)h(fast)h(as)f(p)r(ossible)2040
1634 y(without)j(regard)g(to)f(the)g(w)n(all)i(clo)r(c)n(k.)2115
1721 y(EPOCHS)17 b([)2473 1721 y
SDict begin H.S end
 2473 1721 a 0 TeXcolorgray
Ff(5)p 0 TeXcolorgray 2511 1673 a
SDict begin H.R end
 2511 1673 a 2511 1721
a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.EPOCHS) cvn H.B /ANN pdfmark end
 2511 1721 a Ff(])h(uses)f(commercial)h(p)r(o)n(w)n(er)g(sim)n
(ulators)g(to)f(co-sim)n(ulate)2040 1808 y(net)n(w)n(ork)23
b(and)h(p)r(o)n(w)n(er)g(systems)g(through)f(the)g(use)g(of)i(agen)n
(ts.)34 b(This)2040 1896 y(platform)j(uses)g(agen)n(ts)g(to)g
(e\013ectiv)n(ely)f(co-sim)n(ulate)h(p)r(o)n(w)n(er)g(and)2040
1983 y(comm)n(unication)23 b(elemen)n(ts.)34 b(The)22
b(authors)h(de\014ne)f(agen)n(ts)h(as)g(ha)n(v-)2040
2070 y(ing)28 b(the)g(prop)r(erties)g(of)g(autonom)n(y)g(and)f(in)n
(teraction.)42 b(That)28 b(they)2040 2157 y(exhibit)34
b(prop)r(erties)g(of)i(mobilit)n(y)-6 b(,)36 b(in)n(telligence,)i
(adaptivit)n(y)33 b(and)2040 2244 y(comm)n(unication.)69
b(In)37 b(our)g(design,)j(our)d(mo)r(dels)h(run)e(real)i(pro-)2040
2332 y(cesses)23 b(on)f(real)h(hardw)n(are)f(but)f(can)h(in\015uence)g
(and)f(extract)h(v)l(alues)2040 2419 y(from)i(the)f(p)r(o)n(w)n(er)h
(sim)n(ulator.)35 b(This)24 b(allo)n(ws)h(for)f(us)g(to)f(mak)n(e)g
(use)h(of)2040 2506 y(agen)n(ts)i(to)g(as)g(en)n(tities)g(that)f(exist)
g(in)h(b)r(oth)f(systems.)2115 2593 y(FNCS)40 b([)2382
2593 y
SDict begin H.S end
 2382 2593 a 0 TeXcolorgray Ff(2)p 0 TeXcolorgray
2421 2545 a
SDict begin H.R end
 2421 2545 a 2421 2593 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.FNCS) cvn H.B /ANN pdfmark end
 2421 2593 a Ff(])h(is)h(a)f
(federated)h(approac)n(h)e(for)i(co-sim)n(ulation)g(of)2040
2680 y(p)r(o)n(w)n(er)19 b(and)f(electrical)j(sim)n(ulators)e(b)n(y)f
(com)n(bining)h(m)n(ultiple)f(p)r(o)n(w)n(er)2040 2767
y(sim)n(ulators,)26 b(b)r(oth)e(distribution)f(and)h(transmission)h
(and)f(use)g(ns-3)2040 2855 y(as)i(a)f(comm)n(unication)g(sim)n
(ulator.)35 b(In)24 b([)3216 2855 y
SDict begin H.S end
 3216 2855 a 0 TeXcolorgray
Ff(1)p 0 TeXcolorgray 3254 2806 a
SDict begin H.R end
 3254 2806 a 3254 2855
a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.FNCS-algos) cvn H.B /ANN pdfmark end
 3254 2855 a Ff(],)i(the)e(same)i(authors)f(im-)2040
2942 y(pro)n(v)n(e)i(the)g(sync)n(hronization)h(b)r(et)n(w)n(een)f
(systems.)41 b(The)28 b(di\013erence)2040 3029 y(is)22
b(that)g(our)f(approac)n(h)h(is)g(fo)r(cused)h(on)e(running)g(real)i
(net)n(w)n(ork)e(pro-)2040 3116 y(cesses)26 b(whic)n(h)e(has)g
(di\013eren)n(t)g(sync)n(hronization)g(c)n(hallenges)h(due)e(to)2040
3203 y(the)33 b(inheren)n(t)f(di\013erence)h(b)r(et)n(w)n(een)g(the)g
(execution)f(mec)n(hanisms)2040 3290 y(in)26 b(sim)n(ulation)g(and)f
(real-time)h(pro)r(cesses.)2115 3378 y(There)38 b(are)f(t)n(w)n(o)h
(main)g(features)g(that)f(set)h(our)f(design)h(apart)2040
3465 y(from)31 b(the)e(existing)h(to)r(ols.)48 b(The)30
b(\014rst)g(is)g(that)f(w)n(e)i(are)f(using)g(real)2040
3552 y(hardw)n(are)d(for)h(net)n(w)n(orking)f(comp)r(onen)n(ts)f
(rather)h(than)f(a)h(sim)n(ula-)2040 3639 y(tor.)40 b(The)27
b(second)g(is)h(that)f(our)g(testb)r(ed's)h(design)f(w)n(orks)h
(without)2040 3726 y(real-time)f(sim)n(ulators)h(making)f(our)f(app)r
(orac)n(h)h(general)g(and)f(lo)n(w-)2040 3813 y(cost.)2040
3907 y
SDict begin H.S end
 2040 3907 a 2040 3907 a
SDict begin 10.5 H.A end
 2040 3907 a 2040 3907
a
SDict begin [/View [/XYZ H.V]/Dest (section.2) cvn /DEST pdfmark end
 2040 3907 a 116 x Fg(2.)99 b(PR)m(OJECT)25 b(GO)l(ALS)2115
4131 y Ff(While)i(sim)n(ulation)g(systems)h(o\013er)f(a)g(con)n(vinien)
n(t)f(and)g(lo)n(w)i(cost)2040 4218 y(metho)r(d)39 b(of)g(p)r(erfoming)
h(ev)l(aluation)f(on)g(mo)r(dels)h(of)f(systems)h(it)2040
4305 y(lac)n(ks)26 b(the)f(\014delit)n(y)g(that)g(real)h(systems)g(con)
n(tain.)2115 4393 y(This)g(pro)t(ject)g(aims)h(to)e(ac)n(hiev)n(e)h
(the)f(follo)n(wing:)p 0 TeXcolorgray 2151 4545 a Fe(\017)p
0 TeXcolorgray 38 w Ff(create)41 b(a)h(distributed)e(system)h(comp)r
(osed)g(of)h(em)n(b)r(edded)2227 4632 y(lin)n(ux)22 b(devices)i
(including)f(general)h(purp)r(ose)f(and)g(router)g(de-)2227
4719 y(vices.)p 0 TeXcolorgray 2151 4877 a Fe(\017)p
0 TeXcolorgray 38 w Ff(pro)n(vide)16 b(sync)n(hronization)h(solution)g
(for)h(real-time)g(pro)r(cesses)2227 4964 y(to)24 b(sync)n(hronize)g
(with)g(a)g(descrete)h(time)f(step)g(solution)g(elec-)2227
5051 y(tric)i(p)r(o)n(w)n(er)g(sim)n(ulator.)2115 5203
y(The)20 b(c)n(hallenges)h(in)f(the)g(creation)g(of)h(suc)n(h)e(testb)r
(ed)h(stem)g(for)h(the)2040 5290 y(sync)n(hronization)h(issues)h(b)r
(et)n(w)n(een)e(no)r(des)h(in)g(the)g(distributed)f(sys-)2040
5378 y(tem,)j(the)e(pro)r(cesses)i(running)e(on)h(the)f(no)r(des,)i
(and)e(the)h(sim)n(ulator.)p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -160
-467 a
SDict begin H.S end
 -160 -467 a -160 -467 a
SDict begin H.R end
 -160 -467 a -160 -467
a
SDict begin [/View [/XYZ H.V]/Dest (page.) cvn /DEST pdfmark end
 -160 -467 a 0 TeXcolorgray 0 TeXcolorgray -152 -69
a Ff(Sp)r(eci\014cally)19 b(w)n(e)g(will)g(implemen)n(t)g(the)f(follo)n
(wing)i(in)f(a)f(testb)r(ed)g(con-)-152 19 y(sisting)25
b(of)g(5)f(no)r(des,)h(a)g(em)n(b)r(edded)d(router,)j(2)f(Banana)h(Pi)g
(devices,)-152 106 y(and)g(2)h(Raspb)r(erry)f(Pi)h(lin)n(ux)f(devices:)
p 0 TeXcolorgray -41 269 a Fe(\017)p 0 TeXcolorgray 38
w Ff(Creating)34 b(a)g(k)n(ernel)f(mo)r(dule)g(that)g(pro)n(vides)g(a)h
(user-space)35 356 y(utilit)n(y)19 b(for)i(sending)e(hardw)n(are)h(in)n
(terrupts)f(b)r(et)n(w)n(een)g(the)h(de-)35 444 y(vices)31
b(in)f(the)g(system.)49 b(The)31 b(distributed)e(sync)n(hronization)35
531 y(b)r(et)n(w)n(een)35 b(the)g(devices)g(is)h(decen)n(tralized)f
(with)g(the)g(k)n(ernel)35 618 y(mo)r(dule.)p 0 TeXcolorgray
-41 765 a Fe(\017)p 0 TeXcolorgray 38 w Ff(Time)18 b(sync)n
(hronization)f(strategy)g(with)g(the)g(sim)n(ulation)g(serv)n(er.)p
0 TeXcolorgray -41 912 a Fe(\017)p 0 TeXcolorgray 38
w Ff(Mo)r(dify)26 b(the)f(sheduler)h(to)f(con)n(trol)h(pro)r(cess)h
(execution.)-152 1009 y
SDict begin H.S end
 -152 1009 a -152 1009 a
SDict begin 10.5 H.A end
 -152
1009 a -152 1009 a
SDict begin [/View [/XYZ H.V]/Dest (section.3) cvn /DEST pdfmark end
 -152 1009 a 102 x Fg(3.)100 b(PR)m(OJECT)25
b(EXECUTION)g(PLAN)-77 1219 y Ff(F)-6 b(or)23 b(this)g(pro)t(ject)h(w)n
(e)f(ha)n(v)n(e)f(the)h(follo)n(wing)i(rough)e(pro)t(ject)h(plan:)p
0 TeXcolorgray -41 1383 a Fe(\017)p 0 TeXcolorgray 38
w Ff(F)-6 b(ebruary:)p 0 TeXcolorgray 118 1530 a Fb({)p
0 TeXcolorgray 38 w Ff(implemen)n(t)25 b(k)n(ernel)g(mo)r(dule)p
0 TeXcolorgray 118 1647 a Fb({)p 0 TeXcolorgray 38 w
Ff(collect)h(information)h(regarding)f(clo)r(c)n(k)g(sk)n(ewness)p
0 TeXcolorgray -41 1794 a Fe(\017)p 0 TeXcolorgray 38
w Ff(Marc)n(h:)p 0 TeXcolorgray 118 1940 a Fb({)p 0 TeXcolorgray
38 w Ff(create)g(time)f(sync)n(hronization)h(strategy)p
0 TeXcolorgray 118 2058 a Fb({)p 0 TeXcolorgray 38 w
Ff(mo)r(dify)f(sc)n(heduler)p 0 TeXcolorgray -41 2204
a Fe(\017)p 0 TeXcolorgray 38 w Ff(April:)p 0 TeXcolorgray
118 2351 a Fb({)p 0 TeXcolorgray 38 w Ff(p)r(erform)h(system)f(ev)l
(aluation)p 0 TeXcolorgray 118 2468 a Fb({)p 0 TeXcolorgray
38 w Ff(create)h(use)f(case)p 0 TeXcolorgray 118 2586
a Fb({)p 0 TeXcolorgray 38 w Ff(presen)n(tation)g(preparation)-152
2683 y
SDict begin H.S end
 -152 2683 a -152 2683 a
SDict begin 10.5 H.A end
 -152 2683 a -152 2683
a
SDict begin [/View [/XYZ H.V]/Dest (section.4) cvn /DEST pdfmark end
 -152 2683 a 102 x Fg(4.)100 b(REFERENCES)-152 2807
y
SDict begin H.S end
 -152 2807 a -152 2807 a
SDict begin 10.5 H.A end
 -152 2807 a -152 2807 a
SDict begin [/View [/XYZ H.V]/Dest (cite.FNCS-algos) cvn /DEST pdfmark
end
 -152
2807 a 0 TeXcolorgray 87 x Ff([1])p 0 TeXcolorgray 39
w(S.)25 b(Ciraci,)i(J.)g(Daily)-6 b(,)25 b(K.)h(Agarw)n(al,)h(J.)f(F)-6
b(uller,)26 b(L.)g(Marino)n(vici,)-33 2982 y(and)f(A.)g(Fisher.)h(Sync)
n(hronization)f(algorithms)i(for)-33 3069 y(co-sim)n(ulation)f(of)g(p)r
(o)n(w)n(er)g(grid)g(and)f(comm)n(unication)-33 3156
y(net)n(w)n(orks.)g(In)g Fa(Mo)l(del)t(ling,)h(A)n(nalysis)i
(Simulation)f(of)-33 3243 y(Computer)h(and)g(T)-6 b(ele)l(c)l(ommunic)l
(ation)28 b(Systems)-33 3330 y(\(MASCOTS\),)e(2014)j(IEEE)d(22nd)i
(International)-33 3417 y(Symp)l(osium)f(on)p Ff(,)f(pages)g(355{364,)i
(Sept)d(2014.)2040 -152 y
SDict begin H.S end
 2040 -152 a 2040 -152 a
SDict begin 10.5 H.A end
 2040
-152 a 2040 -152 a
SDict begin [/View [/XYZ H.V]/Dest (cite.FNCS) cvn /DEST pdfmark end
 2040 -152 a 0 TeXcolorgray 83 x Ff([2])p
0 TeXcolorgray 38 w(S.)h(Ciraci,)h(J.)f(Daily)-6 b(,)26
b(J.)g(F)-6 b(uller,)26 b(A.)g(Fisher,)g(L.)g(Marino)n(vici,)2158
19 y(and)f(K.)h(Agarw)n(al.)h(Fncs:)34 b(A)25 b(framew)n(ork)i(for)g(p)
r(o)n(w)n(er)f(system)2158 106 y(and)f(comm)n(unication)h(net)n(w)n
(orks)g(co-sim)n(ulation.)g(In)2158 193 y Fa(Pr)l(o)l(c)l(e)l(e)l
(dings)k(of)c(the)i(Symp)l(osium)f(on)g(The)l(ory)h(of)f(Mo)l(deling)g
(&)2158 280 y(Simulation)g(-)h(DEVS)f(Inte)l(gr)l(ative)p
Ff(,)h(DEVS)d('14,)h(pages)2158 367 y(36:1{36:8,)j(San)c(Diego,)i(CA,)f
(USA,)e(2014.)j(So)r(ciet)n(y)f(for)2158 454 y(Computer)g(Sim)n
(ulation)f(In)n(ternational.)2040 477 y
SDict begin H.S end
 2040 477 a 2040
477 a
SDict begin 10.5 H.A end
 2040 477 a 2040 477 a
SDict begin [/View [/XYZ H.V]/Dest (cite.RT-SmartGrid) cvn /DEST pdfmark
end
 2040 477 a 0 TeXcolorgray
73 x Ff([3])p 0 TeXcolorgray 38 w(C.)i(Dufour)e(and)g(J.)h(Belanger.)h
(On)e(the)g(use)h(of)g(real-time)2158 637 y(sim)n(ulation)h(tec)n
(hnology)e(in)g(smart)h(grid)g(researc)n(h)g(and)2158
724 y(dev)n(elopmen)n(t.)f Fa(Industry)j(Applic)l(ations,)e(IEEE)h(T)-6
b(r)l(ansactions)2158 811 y(on)p Ff(,)26 b(50\(6\):3963{3970,)k(No)n(v)
25 b(2014.)2040 838 y
SDict begin H.S end
 2040 838 a 2040 838 a
SDict begin 10.5 H.A end
 2040 838
a 2040 838 a
SDict begin [/View [/XYZ H.V]/Dest (cite.DSSco-sim) cvn /DEST pdfmark
end
 2040 838 a 0 TeXcolorgray 69 x Ff([4])p
0 TeXcolorgray 38 w(T.)i(Go)r(dfrey)-6 b(,)26 b(S.)f(Mullen,)h(R.)f
(Dugan,)h(C.)g(Ro)r(dine,)2158 994 y(D.)g(Gri\016th,)g(and)f(N.)g
(Golmie.)i(Mo)r(deling)g(smart)f(grid)2158 1081 y(applications)h(with)e
(co-sim)n(ulation.)i(In)e Fa(Smart)j(Grid)2158 1168 y(Communic)l
(ations)g(\(SmartGridComm\),)g(2010)g(First)g(IEEE)2158
1256 y(International)h(Confer)l(enc)l(e)f(on)p Ff(,)e(pages)h(291{296,)
h(Oct)d(2010.)2040 1278 y
SDict begin H.S end
 2040 1278 a 2040 1278 a
SDict begin 10.5 H.A end
 2040
1278 a 2040 1278 a
SDict begin [/View [/XYZ H.V]/Dest (cite.EPOCHS) cvn /DEST pdfmark
end
 2040 1278 a 0 TeXcolorgray 73 x Ff([5])p
0 TeXcolorgray 38 w(K.)h(Hopkinson,)f(X.)g(W)-6 b(ang,)26
b(R.)f(Gio)n(v)l(anini,)h(J.)g(Thorp,)2158 1438 y(K.)g(Birman,)g(and)f
(D.)h(Coury)-6 b(.)25 b(Ep)r(o)r(c)n(hs:)35 b(a)26 b(platform)g(for)
2158 1525 y(agen)n(t-based)g(electric)g(p)r(o)n(w)n(er)g(and)f(comm)n
(unication)2158 1613 y(sim)n(ulation)i(built)e(from)h(commercial)h
(o\013-the-shelf)2158 1700 y(comp)r(onen)n(ts.)f Fa(Power)i(Systems,)g
(IEEE)f(T)-6 b(r)l(ansactions)30 b(on)p Ff(,)2158 1787
y(21\(2\):548{558,)f(Ma)n(y)d(2006.)2040 1823 y
SDict begin H.S end
 2040
1823 a 2040 1823 a
SDict begin 10.5 H.A end
 2040 1823 a 2040 1823 a
SDict begin [/View [/XYZ H.V]/Dest (cite.GECO) cvn /DEST pdfmark end
 2040 1823
a 0 TeXcolorgray 55 x Ff([6])p 0 TeXcolorgray 38 w(H.)f(Lin,)g(S.)g(V)
-6 b(eda,)24 b(S.)h(Sh)n(ukla,)f(L.)h(Mili,)h(and)e(J.)i(Thorp.)f
(Geco:)2158 1965 y(Global)i(ev)n(en)n(t-driv)n(en)c(co-sim)n(ulation)j
(framew)n(ork)h(for)2158 2053 y(in)n(terconnected)e(p)r(o)n(w)n(er)h
(system)g(and)f(comm)n(unication)2158 2140 y(net)n(w)n(ork.)h
Fa(Smart)i(Grid,)f(IEEE)g(T)-6 b(r)l(ansactions)29 b(on)p
Ff(,)2158 2227 y(3\(3\):1444{1456,)h(Sept)24 b(2012.)2040
2254 y
SDict begin H.S end
 2040 2254 a 2040 2254 a
SDict begin 10.5 H.A end
 2040 2254 a 2040 2254
a
SDict begin [/View [/XYZ H.V]/Dest (cite.Mets2014) cvn /DEST pdfmark
end
 2040 2254 a 0 TeXcolorgray 68 x Ff([7])p 0 TeXcolorgray
38 w(K.)i(Mets,)g(J.)h(Ojea,)f(and)f(C.)h(Dev)n(elder.)g(Com)n(bining)g
(p)r(o)n(w)n(er)2158 2410 y(and)f(comm)n(unication)h(net)n(w)n(ork)f
(sim)n(ulation)i(for)2158 2497 y(cost-e\013ectiv)n(e)f(smart)g(grid)f
(analysis.)i Fa(Communic)l(ations)2158 2584 y(Surveys)i(T)-6
b(utorials,)28 b(IEEE)p Ff(,)d(16\(3\):1771{1796,)30
b(Third)25 b(2014.)2040 2611 y
SDict begin H.S end
 2040 2611 a 2040 2611
a
SDict begin 10.5 H.A end
 2040 2611 a 2040 2611 a
SDict begin [/View [/XYZ H.V]/Dest (cite.DSS-RT-HIL) cvn /DEST pdfmark
end
 2040 2611 a 0 TeXcolorgray
68 x Ff([8])p 0 TeXcolorgray 38 w(D.)h(Mon)n(tenegro,)g(M.)g
(Hernandez,)f(and)g(G.)h(Ramos.)h(Real)2158 2767 y(time)f(op)r(endss)g
(framew)n(ork)g(for)h(distribution)e(systems)2158 2854
y(sim)n(ulation)i(and)e(analysis.)h(In)f Fa(T)-6 b(r)l(ansmission)28
b(and)2158 2941 y(Distribution:)35 b(L)l(atin)28 b(A)n(meric)l(a)g
(Confer)l(enc)l(e)h(and)e(Exp)l(osition)2158 3028 y(\(T)h(D-LA\),)f
(2012)h(Sixth)g(IEEE/PES)p Ff(,)e(pages)g(1{5,)h(Sept)2040
3115 y(2012.)p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
